<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>Distribution - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.distributions</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.distributions/Bernoulli.htm">Bernoulli</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Beta.htm">Beta</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Categorical.htm">Categorical</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Dirichlet.htm">Dirichlet</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/DirichletMultinomial.htm">DirichletMultinomial</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Distribution.htm" class="current">Distribution</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Exponential.htm">Exponential</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Gamma.htm">Gamma</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IBernoulli.htm">IBernoulli</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IBeta.htm">IBeta</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/ICategorical.htm">ICategorical</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IDirichlet.htm">IDirichlet</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IDirichletMultinomial.htm">IDirichletMultinomial</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IDistribution.htm">IDistribution</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IExponential.htm">IExponential</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IGamma.htm">IGamma</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/ILaplace.htm">ILaplace</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IMultinomial.htm">IMultinomial</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/INormal.htm">INormal</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IRegisterKL.htm">IRegisterKL</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IReparameterizationType.htm">IReparameterizationType</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IStudentT.htm">IStudentT</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/IUniform.htm">IUniform</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Laplace.htm">Laplace</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Multinomial.htm">Multinomial</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Normal.htm">Normal</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/RegisterKL.htm">RegisterKL</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/ReparameterizationType.htm">ReparameterizationType</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/StudentT.htm">StudentT</a>
        </li>
				<li>
            <a href="../tensorflow.distributions/Uniform.htm">Uniform</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> Distribution</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.distributions</p>
		<p><strong>Parent</strong> <a href="../LostTech.Gradient/PythonObjectContainer.htm">PythonObjectContainer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.python.ops.distributions.distribution/_BaseDistribution.htm">_BaseDistribution</a>, <a href="../tensorflow.distributions/IDistribution.htm">IDistribution</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">A generic probability distribution base class. <p></p> `Distribution` is a base class for constructing and organizing properties
(e.g., mean, variance) of random variables (e.g, Bernoulli, Gaussian). <p></p> #### Subclassing <p></p> Subclasses are expected to implement a leading-underscore version of the
same-named function. The argument signature should be identical except for
the omission of `name="..."`. For example, to enable `log_prob(value,
name="log_prob")` a subclass should implement `_log_prob(value)`. <p></p> Subclasses can append to public-level docstrings by providing
docstrings for their method specializations.
would add the string "Some other details." to the `log_prob` function
docstring. This is implemented as a simple decorator to avoid python
linter complaining about missing Args/Returns/Raises sections in the
partial docstrings. <p></p> #### Broadcasting, batching, and shapes <p></p> All distributions support batches of independent distributions of that type.
The batch shape is determined by broadcasting together the parameters. <p></p> The shape of arguments to `__init__`, `cdf`, `log_cdf`, `prob`, and
`log_prob` reflect this broadcasting, as does the return value of `sample` and
`sample_n`. <p></p> `sample_n_shape = [n] + batch_shape + event_shape`, where `sample_n_shape` is
the shape of the `Tensor` returned from `sample_n`, `n` is the number of
samples, `batch_shape` defines how many independent distributions there are,
and `event_shape` defines the shape of samples from each of those independent
distributions. Samples are independent along the `batch_shape` dimensions, but
not necessarily so along the `event_shape` dimensions (depending on the
particulars of the underlying distribution). <p></p> Using the `Uniform` distribution as an example:
#### Shapes <p></p> There are three important concepts associated with TensorFlow Distributions
shapes:
- Event shape describes the shape of a single draw from the distribution;
it may be dependent across dimensions. For scalar distributions, the event
shape is `[]`. For a 5-dimensional MultivariateNormal, the event shape is
`[5]`.
- Batch shape describes independent, not identically distributed draws, aka a
"collection" or "bunch" of distributions.
- Sample shape describes independent, identically distributed draws of batches
from the distribution family. <p></p> The event shape and the batch shape are properties of a Distribution object,
whereas the sample shape is associated with a specific call to `sample` or
`log_prob`. <p></p> For detailed usage examples of TensorFlow Distributions shapes, see
[this tutorial](
https://github.com/tensorflow/probability/blob/master/tensorflow_probability/examples/jupyter_notebooks/Understanding_TensorFlow_Distributions_Shapes.ipynb) <p></p> #### Parameter values leading to undefined statistics or distributions. <p></p> Some distributions do not have well-defined statistics for all initialization
parameter values. For example, the beta distribution is parameterized by
positive real numbers `concentration1` and `concentration0`, and does not have
well-defined mode if `concentration1 < 1` or `concentration0 < 1`. <p></p> The user is given the option of raising an exception or returning `NaN`.
In all cases, an exception is raised if *invalid* parameters are passed, e.g. <div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>@util.AppendDocstring("Some other details.")
            def _log_prob(self, value):
             ... </pre>
</div>
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_shapes_dyn``1">param_shapes_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_shapes``1">param_shapes&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_shapes``1">param_shapes&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_shapes``1">param_shapes&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_static_shapes_dyn``1">param_static_shapes_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_static_shapes``1">param_static_shapes&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#param_static_shapes``1">param_static_shapes&lt;TClass&gt;</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.distributions/Distribution.htm#allow_nan_stats">allow_nan_stats</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#allow_nan_stats_dyn">allow_nan_stats_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#batch_shape">batch_shape</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#batch_shape_dyn">batch_shape_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#dtype">dtype</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#dtype_dyn">dtype_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#event_shape">event_shape</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#event_shape_dyn">event_shape_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#name">name</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#name_dyn">name_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#parameters">parameters</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#parameters_dyn">parameters_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#reparameterization_type">reparameterization_type</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#reparameterization_type_dyn">reparameterization_type_dyn</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#validate_args">validate_args</a></li>
				<li><a href="../tensorflow.distributions/Distribution.htm#validate_args_dyn">validate_args_dyn</a></li>
			</ul>
		
	</div>
	
	
	<h3 class="section">Public static methods</h3>

	<div id="param_shapes_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>param_shapes_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> sample_shape, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Shapes of parameters given the desired shape of a call to `sample()`. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. <p></p> Subclasses should override class method `_param_shapes`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> sample_shape
						</dt>
						<dd>`Tensor` or python list/tuple. Desired shape of a call to
`sample()`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>name to prepend ops with. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`dict` of parameter name to `Tensor` shapes. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_shapes``1" class="method">
		<h4>
			<span title="tensorflow.distributions.TClass">TClass</span> <strong>param_shapes&lt;TClass&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Nullable<int>>">IEnumerable&lt;Nullable&lt;int&gt;&gt;</span> sample_shape, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Shapes of parameters given the desired shape of a call to `sample()`. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. <p></p> Subclasses should override class method `_param_shapes`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<Nullable<int>>">IEnumerable&lt;Nullable&lt;int&gt;&gt;</span></code> sample_shape
						</dt>
						<dd>`Tensor` or python list/tuple. Desired shape of a call to
`sample()`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>name to prepend ops with. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.distributions.TClass">TClass</span></code>
					</dt>
					<dd>`dict` of parameter name to `Tensor` shapes. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_shapes``1" class="method">
		<h4>
			<span title="tensorflow.distributions.TClass">TClass</span> <strong>param_shapes&lt;TClass&gt;</strong>(<span title="System.ValueTuple">ValueTuple</span> sample_shape, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Shapes of parameters given the desired shape of a call to `sample()`. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. <p></p> Subclasses should override class method `_param_shapes`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.ValueTuple">ValueTuple</span></code> sample_shape
						</dt>
						<dd>`Tensor` or python list/tuple. Desired shape of a call to
`sample()`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>name to prepend ops with. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.distributions.TClass">TClass</span></code>
					</dt>
					<dd>`dict` of parameter name to `Tensor` shapes. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_shapes``1" class="method">
		<h4>
			<span title="tensorflow.distributions.TClass">TClass</span> <strong>param_shapes&lt;TClass&gt;</strong>(<a href="../tensorflow/TensorShape.htm">TensorShape</a> sample_shape, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Shapes of parameters given the desired shape of a call to `sample()`. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. <p></p> Subclasses should override class method `_param_shapes`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorShape.htm">TensorShape</a></code> sample_shape
						</dt>
						<dd>`Tensor` or python list/tuple. Desired shape of a call to
`sample()`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>name to prepend ops with. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.distributions.TClass">TClass</span></code>
					</dt>
					<dd>`dict` of parameter name to `Tensor` shapes. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_static_shapes_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>param_static_shapes_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> sample_shape)
		</h4>
		<div class="content">param_shapes with static (i.e. `TensorShape`) shapes. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. Assumes that the sample's
shape is known statically. <p></p> Subclasses should override class method `_param_shapes` to return
constant-valued tensors when constant values are fed. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> sample_shape
						</dt>
						<dd>`TensorShape` or python list/tuple. Desired shape of a call
to `sample()`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`dict` of parameter name to `TensorShape`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_static_shapes``1" class="method">
		<h4>
			<span title="tensorflow.distributions.TClass">TClass</span> <strong>param_static_shapes&lt;TClass&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> sample_shape)
		</h4>
		<div class="content">param_shapes with static (i.e. `TensorShape`) shapes. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. Assumes that the sample's
shape is known statically. <p></p> Subclasses should override class method `_param_shapes` to return
constant-valued tensors when constant values are fed. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span></code> sample_shape
						</dt>
						<dd>`TensorShape` or python list/tuple. Desired shape of a call
to `sample()`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.distributions.TClass">TClass</span></code>
					</dt>
					<dd>`dict` of parameter name to `TensorShape`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="param_static_shapes``1" class="method">
		<h4>
			<span title="tensorflow.distributions.TClass">TClass</span> <strong>param_static_shapes&lt;TClass&gt;</strong>(<a href="../tensorflow/TensorShape.htm">TensorShape</a> sample_shape)
		</h4>
		<div class="content">param_shapes with static (i.e. `TensorShape`) shapes. <p></p> This is a class method that describes what key/value arguments are required
to instantiate the given `Distribution` so that a particular shape is
returned for that instance's call to `sample()`. Assumes that the sample's
shape is known statically. <p></p> Subclasses should override class method `_param_shapes` to return
constant-valued tensors when constant values are fed. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorShape.htm">TensorShape</a></code> sample_shape
						</dt>
						<dd>`TensorShape` or python list/tuple. Desired shape of a call
to `sample()`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.distributions.TClass">TClass</span></code>
					</dt>
					<dd>`dict` of parameter name to `TensorShape`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="allow_nan_stats" class="method">
		<h4>
			<span title="System.object">object</span> <strong>allow_nan_stats</strong> get; 
		</h4>
		<div class="content">Python `bool` describing behavior when a stat is undefined. <p></p> Stats return +/- infinity when it makes sense. E.g., the variance of a
Cauchy distribution is infinity. However, sometimes the statistic is
undefined, e.g., if a distribution's pdf does not achieve a maximum within
the support of the distribution, the mode is undefined. If the mean is
undefined, then by definition the variance is undefined. E.g. the mean for
Student's T for df = 1 is undefined (no clear way to say it is either + or -
infinity), so the variance = E[(X - mean)**2] is also undefined. 

		</div>
	</div>
	<div id="allow_nan_stats_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>allow_nan_stats_dyn</strong> get; 
		</h4>
		<div class="content">Python `bool` describing behavior when a stat is undefined. <p></p> Stats return +/- infinity when it makes sense. E.g., the variance of a
Cauchy distribution is infinity. However, sometimes the statistic is
undefined, e.g., if a distribution's pdf does not achieve a maximum within
the support of the distribution, the mode is undefined. If the mean is
undefined, then by definition the variance is undefined. E.g. the mean for
Student's T for df = 1 is undefined (no clear way to say it is either + or -
infinity), so the variance = E[(X - mean)**2] is also undefined. 

		</div>
	</div>
	<div id="batch_shape" class="method">
		<h4>
			<a href="../tensorflow/TensorShape.htm">TensorShape</a> <strong>batch_shape</strong> get; 
		</h4>
		<div class="content">Shape of a single sample from a single event index as a `TensorShape`. <p></p> May be partially defined or unknown. <p></p> The batch dimensions are indexes into independent, non-identical
parameterizations of this distribution. 

		</div>
	</div>
	<div id="batch_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_shape_dyn</strong> get; 
		</h4>
		<div class="content">Shape of a single sample from a single event index as a `TensorShape`. <p></p> May be partially defined or unknown. <p></p> The batch dimensions are indexes into independent, non-identical
parameterizations of this distribution. 

		</div>
	</div>
	<div id="dtype" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype</strong> get; 
		</h4>
		<div class="content">The `DType` of `Tensor`s handled by this `Distribution`. 

		</div>
	</div>
	<div id="dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype_dyn</strong> get; 
		</h4>
		<div class="content">The `DType` of `Tensor`s handled by this `Distribution`. 

		</div>
	</div>
	<div id="event_shape" class="method">
		<h4>
			<a href="../tensorflow/TensorShape.htm">TensorShape</a> <strong>event_shape</strong> get; 
		</h4>
		<div class="content">Shape of a single sample from a single batch as a `TensorShape`. <p></p> May be partially defined or unknown. 

		</div>
	</div>
	<div id="event_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>event_shape_dyn</strong> get; 
		</h4>
		<div class="content">Shape of a single sample from a single batch as a `TensorShape`. <p></p> May be partially defined or unknown. 

		</div>
	</div>
	<div id="name" class="method">
		<h4>
			<span title="System.string">string</span> <strong>name</strong> get; 
		</h4>
		<div class="content">Name prepended to all ops created by this `Distribution`. 

		</div>
	</div>
	<div id="name_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_dyn</strong> get; 
		</h4>
		<div class="content">Name prepended to all ops created by this `Distribution`. 

		</div>
	</div>
	<div id="parameters" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, object>">IDictionary&lt;object, object&gt;</span> <strong>parameters</strong> get; 
		</h4>
		<div class="content">Dictionary of parameters used to instantiate this `Distribution`. 

		</div>
	</div>
	<div id="parameters_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>parameters_dyn</strong> get; 
		</h4>
		<div class="content">Dictionary of parameters used to instantiate this `Distribution`. 

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="reparameterization_type" class="method">
		<h4>
			<span title="System.object">object</span> <strong>reparameterization_type</strong> get; 
		</h4>
		<div class="content">Describes how samples from the distribution are reparameterized. <p></p> Currently this is one of the static instances
`distributions.FULLY_REPARAMETERIZED`
or `distributions.NOT_REPARAMETERIZED`. 

		</div>
	</div>
	<div id="reparameterization_type_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>reparameterization_type_dyn</strong> get; 
		</h4>
		<div class="content">Describes how samples from the distribution are reparameterized. <p></p> Currently this is one of the static instances
`distributions.FULLY_REPARAMETERIZED`
or `distributions.NOT_REPARAMETERIZED`. 

		</div>
	</div>
	<div id="validate_args" class="method">
		<h4>
			<span title="System.object">object</span> <strong>validate_args</strong> get; 
		</h4>
		<div class="content">Python `bool` indicating possibly expensive checks are enabled. 

		</div>
	</div>
	<div id="validate_args_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>validate_args_dyn</strong> get; 
		</h4>
		<div class="content">Python `bool` indicating possibly expensive checks are enabled. 

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>