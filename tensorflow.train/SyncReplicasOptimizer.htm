<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>SyncReplicasOptimizer - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.train</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.train/AdadeltaOptimizer.htm">AdadeltaOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/AdagradDAOptimizer.htm">AdagradDAOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/AdagradOptimizer.htm">AdagradOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/AdamOptimizer.htm">AdamOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/Checkpoint.htm">Checkpoint</a>
        </li>
				<li>
            <a href="../tensorflow.train/CheckpointManager.htm">CheckpointManager</a>
        </li>
				<li>
            <a href="../tensorflow.train/CheckpointSaverHook.htm">CheckpointSaverHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/CheckpointSaverListener.htm">CheckpointSaverListener</a>
        </li>
				<li>
            <a href="../tensorflow.train/ChiefSessionCreator.htm">ChiefSessionCreator</a>
        </li>
				<li>
            <a href="../tensorflow.train/ClusterSpec.htm">ClusterSpec</a>
        </li>
				<li>
            <a href="../tensorflow.train/Coordinator.htm">Coordinator</a>
        </li>
				<li>
            <a href="../tensorflow.train/ExponentialMovingAverage.htm">ExponentialMovingAverage</a>
        </li>
				<li>
            <a href="../tensorflow.train/FeedFnHook.htm">FeedFnHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/FinalOpsHook.htm">FinalOpsHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/FtrlOptimizer.htm">FtrlOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/GlobalStepWaiterHook.htm">GlobalStepWaiterHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/GradientDescentOptimizer.htm">GradientDescentOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IAdadeltaOptimizer.htm">IAdadeltaOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IAdagradDAOptimizer.htm">IAdagradDAOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IAdagradOptimizer.htm">IAdagradOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IAdamOptimizer.htm">IAdamOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ICheckpoint.htm">ICheckpoint</a>
        </li>
				<li>
            <a href="../tensorflow.train/ICheckpointManager.htm">ICheckpointManager</a>
        </li>
				<li>
            <a href="../tensorflow.train/ICheckpointSaverHook.htm">ICheckpointSaverHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ICheckpointSaverListener.htm">ICheckpointSaverListener</a>
        </li>
				<li>
            <a href="../tensorflow.train/IChiefSessionCreator.htm">IChiefSessionCreator</a>
        </li>
				<li>
            <a href="../tensorflow.train/IClusterSpec.htm">IClusterSpec</a>
        </li>
				<li>
            <a href="../tensorflow.train/ICoordinator.htm">ICoordinator</a>
        </li>
				<li>
            <a href="../tensorflow.train/IExponentialMovingAverage.htm">IExponentialMovingAverage</a>
        </li>
				<li>
            <a href="../tensorflow.train/IFeedFnHook.htm">IFeedFnHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IFinalOpsHook.htm">IFinalOpsHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IFtrlOptimizer.htm">IFtrlOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IGlobalStepWaiterHook.htm">IGlobalStepWaiterHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IGradientDescentOptimizer.htm">IGradientDescentOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ILoggingTensorHook.htm">ILoggingTensorHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ILooperThread.htm">ILooperThread</a>
        </li>
				<li>
            <a href="../tensorflow.train/IMomentumOptimizer.htm">IMomentumOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IMonitoredSession.htm">IMonitoredSession</a>
        </li>
				<li>
            <a href="../tensorflow.train/INanLossDuringTrainingError.htm">INanLossDuringTrainingError</a>
        </li>
				<li>
            <a href="../tensorflow.train/INanTensorHook.htm">INanTensorHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IOptimizer.htm">IOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IProfilerHook.htm">IProfilerHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IProximalAdagradOptimizer.htm">IProximalAdagradOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IProximalGradientDescentOptimizer.htm">IProximalGradientDescentOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IQueueRunner.htm">IQueueRunner</a>
        </li>
				<li>
            <a href="../tensorflow.train/IRMSPropOptimizer.htm">IRMSPropOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISaver.htm">ISaver</a>
        </li>
				<li>
            <a href="../tensorflow.train/IScaffold.htm">IScaffold</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISecondOrStepTimer.htm">ISecondOrStepTimer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IServer.htm">IServer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionCreator.htm">ISessionCreator</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionManager.htm">ISessionManager</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionRunArgs.htm">ISessionRunArgs</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionRunContext.htm">ISessionRunContext</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionRunHook.htm">ISessionRunHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISessionRunValues.htm">ISessionRunValues</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISingularMonitoredSession.htm">ISingularMonitoredSession</a>
        </li>
				<li>
            <a href="../tensorflow.train/IStepCounterHook.htm">IStepCounterHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/IStopAtStepHook.htm">IStopAtStepHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISummarySaverHook.htm">ISummarySaverHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISupervisor.htm">ISupervisor</a>
        </li>
				<li>
            <a href="../tensorflow.train/ISyncReplicasOptimizer.htm">ISyncReplicasOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/IVocabInfo.htm">IVocabInfo</a>
        </li>
				<li>
            <a href="../tensorflow.train/IWorkerSessionCreator.htm">IWorkerSessionCreator</a>
        </li>
				<li>
            <a href="../tensorflow.train/LoggingTensorHook.htm">LoggingTensorHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/LooperThread.htm">LooperThread</a>
        </li>
				<li>
            <a href="../tensorflow.train/MomentumOptimizer.htm">MomentumOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/MonitoredSession.htm">MonitoredSession</a>
        </li>
				<li>
            <a href="../tensorflow.train/NanLossDuringTrainingError.htm">NanLossDuringTrainingError</a>
        </li>
				<li>
            <a href="../tensorflow.train/NanTensorHook.htm">NanTensorHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/Optimizer.htm">Optimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ProfilerHook.htm">ProfilerHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/ProximalAdagradOptimizer.htm">ProximalAdagradOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/ProximalGradientDescentOptimizer.htm">ProximalGradientDescentOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/QueueRunner.htm">QueueRunner</a>
        </li>
				<li>
            <a href="../tensorflow.train/RMSPropOptimizer.htm">RMSPropOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/Saver.htm">Saver</a>
        </li>
				<li>
            <a href="../tensorflow.train/Scaffold.htm">Scaffold</a>
        </li>
				<li>
            <a href="../tensorflow.train/SecondOrStepTimer.htm">SecondOrStepTimer</a>
        </li>
				<li>
            <a href="../tensorflow.train/Server.htm">Server</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionCreator.htm">SessionCreator</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionManager.htm">SessionManager</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionRunArgs.htm">SessionRunArgs</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionRunContext.htm">SessionRunContext</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionRunHook.htm">SessionRunHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/SessionRunValues.htm">SessionRunValues</a>
        </li>
				<li>
            <a href="../tensorflow.train/SingularMonitoredSession.htm">SingularMonitoredSession</a>
        </li>
				<li>
            <a href="../tensorflow.train/StepCounterHook.htm">StepCounterHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/StopAtStepHook.htm">StopAtStepHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/SummarySaverHook.htm">SummarySaverHook</a>
        </li>
				<li>
            <a href="../tensorflow.train/Supervisor.htm">Supervisor</a>
        </li>
				<li>
            <a href="../tensorflow.train/SyncReplicasOptimizer.htm" class="current">SyncReplicasOptimizer</a>
        </li>
				<li>
            <a href="../tensorflow.train/train.htm">train</a>
        </li>
				<li>
            <a href="../tensorflow.train/VocabInfo.htm">VocabInfo</a>
        </li>
				<li>
            <a href="../tensorflow.train/WorkerSessionCreator.htm">WorkerSessionCreator</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> SyncReplicasOptimizer</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.train</p>
		<p><strong>Parent</strong> <a href="../tensorflow.train/Optimizer.htm">Optimizer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.train/ISyncReplicasOptimizer.htm">ISyncReplicasOptimizer</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Class to synchronize, aggregate gradients and pass them to the optimizer. <p></p> This class is deprecated. For synchrononous training, please use [Distribution
Strategies](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute). <p></p> In a typical asynchronous training environment, it's common to have some
stale gradients. For example, with a N-replica asynchronous training,
gradients will be applied to the variables N times independently. Depending
on each replica's training speed, some gradients might be calculated from
copies of the variable from several steps back (N-1 steps on average). This
optimizer avoids stale gradients by collecting gradients from all replicas,
averaging them, then applying them to the variables in one shot, after
which replicas can fetch the new variables and continue. <p></p> The following accumulators/queue are created: <p></p> * N `gradient accumulators`, one per variable to train. Gradients are pushed
to them and the chief worker will wait until enough gradients are collected
and then average them before applying to variables. The accumulator will
drop all stale gradients (more details in the accumulator op).
* 1 `token` queue where the optimizer pushes the new global_step value after
all variables are updated. <p></p> The following local variable is created:
* `sync_rep_local_step`, one per replica. Compared against the global_step in
each accumulator to check for staleness of the gradients. <p></p> The optimizer adds nodes to the graph to collect gradients and pause the
trainers until variables are updated.
For the Parameter Server job: <p></p> 1. An accumulator is created for each variable, and each replica pushes the
gradients into the accumulators instead of directly applying them to the
variables.
2. Each accumulator averages once enough gradients (replicas_to_aggregate)
have been accumulated.
3. Apply the averaged gradients to the variables.
4. Only after all variables have been updated, increment the global step.
5. Only after step 4, pushes `global_step` in the `token_queue`, once for
each worker replica. The workers can now fetch the global step, use it to
update its local_step variable and start the next batch. Please note that
some workers can consume multiple minibatches, while some may not consume
even one. This is because each worker fetches minibatches as long as
a token exists. If one worker is stuck for some reason and does not
consume a token, another worker can use it. <p></p> For the replicas: <p></p> 1. Start a step: fetch variables and compute gradients.
2. Once the gradients have been computed, push them into gradient
accumulators. Each accumulator will check the staleness and drop the stale.
3. After pushing all the gradients, dequeue an updated value of global_step
from the token queue and record that step to its local_step variable. Note
that this is effectively a barrier.
4. Start the next batch. <p></p> ### Usage
In the training program, every worker will run the train_op as if not
synchronized.
To use SyncReplicasOptimizer with an `Estimator`, you need to send
sync_replicas_hook while calling the fit. <div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Create any optimizer to update the variables, say a simple SGD:
            opt = GradientDescentOptimizer(learning_rate=0.1) <p></p> # Wrap the optimizer with sync_replicas_optimizer with 50 replicas: at each
# step the optimizer collects 50 gradients before applying to variables.
# Note that if you want to have 2 backup replicas, you can change
# total_num_replicas=52 and make sure this number matches how many physical
# replicas you started in your job.
opt = tf.compat.v1.train.SyncReplicasOptimizer(opt, replicas_to_aggregate=50,
                               total_num_replicas=50) <p></p> # Some models have startup_delays to help stabilize the model but when using
# sync_replicas training, set it to 0. <p></p> # Now you can call `minimize()` or `compute_gradients()` and
# `apply_gradients()` normally
training_op = opt.minimize(total_loss, global_step=self.global_step) <p></p> <p></p> # You can create the hook which handles initialization and queues.
sync_replicas_hook = opt.make_session_run_hook(is_chief) </pre>
</div>
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#get_chief_queue_runner">get_chief_queue_runner</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#get_chief_queue_runner_dyn">get_chief_queue_runner_dyn</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#get_init_tokens_op">get_init_tokens_op</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#get_init_tokens_op_dyn">get_init_tokens_op_dyn</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#make_session_run_hook">make_session_run_hook</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#make_session_run_hook_dyn">make_session_run_hook_dyn</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#NewDyn">NewDyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#chief_init_op">chief_init_op</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#local_step_init_op">local_step_init_op</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.train/SyncReplicasOptimizer.htm#ready_for_local_init_op">ready_for_local_init_op</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="get_chief_queue_runner" class="method">
		<h4>
			<a href="../tensorflow.train/QueueRunner.htm">QueueRunner</a> <strong>get_chief_queue_runner</strong>()
		</h4>
		<div class="content">Returns the QueueRunner for the chief to execute. <p></p> This includes the operations to synchronize replicas: aggregate gradients,
apply to variables, increment global step, insert tokens to token queue. <p></p> Note that this can only be called after calling apply_gradients() which
actually generates this queuerunner. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow.train/QueueRunner.htm">QueueRunner</a></code>
					</dt>
					<dd>A `QueueRunner` for chief to execute. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_chief_queue_runner_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_chief_queue_runner_dyn</strong>()
		</h4>
		<div class="content">Returns the QueueRunner for the chief to execute. <p></p> This includes the operations to synchronize replicas: aggregate gradients,
apply to variables, increment global step, insert tokens to token queue. <p></p> Note that this can only be called after calling apply_gradients() which
actually generates this queuerunner. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `QueueRunner` for chief to execute. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_init_tokens_op" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_init_tokens_op</strong>(<span title="System.int">int</span> num_tokens)
		</h4>
		<div class="content">Returns the op to fill the sync_token_queue with the tokens. <p></p> This is supposed to be executed in the beginning of the chief/sync thread
so that even if the total_num_replicas is less than replicas_to_aggregate,
the model can still proceed as the replicas can compute multiple steps per
variable update. Make sure:
`num_tokens >= replicas_to_aggregate - total_num_replicas`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> num_tokens
						</dt>
						<dd>Number of tokens to add to the queue. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>An op for the chief/sync replica to fill the token queue. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_init_tokens_op_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_init_tokens_op_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> num_tokens)
		</h4>
		<div class="content">Returns the op to fill the sync_token_queue with the tokens. <p></p> This is supposed to be executed in the beginning of the chief/sync thread
so that even if the total_num_replicas is less than replicas_to_aggregate,
the model can still proceed as the replicas can compute multiple steps per
variable update. Make sure:
`num_tokens >= replicas_to_aggregate - total_num_replicas`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> num_tokens
						</dt>
						<dd>Number of tokens to add to the queue. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>An op for the chief/sync replica to fill the token queue. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="make_session_run_hook" class="method">
		<h4>
			<span title="System.object">object</span> <strong>make_session_run_hook</strong>(<span title="System.bool">bool</span> is_chief, <span title="System.int">int</span> num_tokens)
		</h4>
		<div class="content">Creates a hook to handle SyncReplicasHook ops such as initialization. 




		</div>
	</div>
	<div id="make_session_run_hook_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>make_session_run_hook_dyn</strong>(<span title="System.object">object</span> is_chief, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> num_tokens)
		</h4>
		<div class="content">Creates a hook to handle SyncReplicasHook ops such as initialization. 




		</div>
	</div>
	
	<h3 class="section">Public static methods</h3>

	<div id="NewDyn" class="method">
		<h4>
			<a href="../tensorflow.train/SyncReplicasOptimizer.htm">SyncReplicasOptimizer</a> <strong>NewDyn</strong>(<span title="System.object">object</span> opt, <span title="System.object">object</span> replicas_to_aggregate, <span title="System.object">object</span> total_num_replicas, <span title="System.object">object</span> variable_averages, <span title="System.object">object</span> variables_to_average, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> use_locking, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Construct a sync_replicas optimizer. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
The `SyncReplicaOptimizer` class is deprecated. For synchrononous training, please use [Distribution Strategies](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute). 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> opt
						</dt>
						<dd>The actual optimizer that will be used to compute and apply the
gradients. Must be one of the Optimizer classes. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> replicas_to_aggregate
						</dt>
						<dd>number of replicas to aggregate for each variable
update. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> total_num_replicas
						</dt>
						<dd>Total number of tasks/workers/replicas, could be
different from replicas_to_aggregate.
If total_num_replicas > replicas_to_aggregate: it is backup_replicas +
replicas_to_aggregate.
If total_num_replicas < replicas_to_aggregate: Replicas compute
multiple batches per update to variables. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> variable_averages
						</dt>
						<dd>Optional `ExponentialMovingAverage` object, used to
maintain moving averages for the variables passed in
`variables_to_average`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> variables_to_average
						</dt>
						<dd>a list of variables that need to be averaged. Only
needed if variable_averages is passed in. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> use_locking
						</dt>
						<dd>If True use locks for update operation. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>string. Optional name of the returned operation. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="chief_init_op" class="method">
		<h4>
			<span title="System.object">object</span> <strong>chief_init_op</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="local_step_init_op" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>local_step_init_op</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="ready_for_local_init_op" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>ready_for_local_init_op</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>