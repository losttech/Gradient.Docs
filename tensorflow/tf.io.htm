<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>tf.io - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow/AggregationMethod.htm">AggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulator.htm">ConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulatorBase.htm">ConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/constant_initializer.htm">constant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/CriticalSection.htm">CriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/DeviceSpec.htm">DeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Dimension.htm">Dimension</a>
        </li>
				<li>
            <a href="../tensorflow/DType.htm">DType</a>
        </li>
				<li>
            <a href="../tensorflow/FIFOQueue.htm">FIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenFeature.htm">FixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLengthRecordReader.htm">FixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenSequenceFeature.htm">FixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_normal_initializer.htm">glorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_uniform_initializer.htm">glorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/GradientTape.htm">GradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.htm">Graph</a>
        </li>
				<li>
            <a href="../tensorflow/Graph._ControlDependenciesController.htm">Graph._ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.I_ControlDependenciesController.htm">Graph.I_ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/GraphKeys.htm">GraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/HeadingAxes.htm">HeadingAxes</a>
        </li>
				<li>
            <a href="../tensorflow/IAggregationMethod.htm">IAggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulator.htm">IConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulatorBase.htm">IConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/Iconstant_initializer.htm">Iconstant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ICriticalSection.htm">ICriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/IdentityReader.htm">IdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IDeviceSpec.htm">IDeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IDimension.htm">IDimension</a>
        </li>
				<li>
            <a href="../tensorflow/IDType.htm">IDType</a>
        </li>
				<li>
            <a href="../tensorflow/IFIFOQueue.htm">IFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenFeature.htm">IFixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLengthRecordReader.htm">IFixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenSequenceFeature.htm">IFixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_normal_initializer.htm">Iglorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_uniform_initializer.htm">Iglorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IGradientTape.htm">IGradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/IGraph.htm">IGraph</a>
        </li>
				<li>
            <a href="../tensorflow/IGraphKeys.htm">IGraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/IIdentityReader.htm">IIdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlices.htm">IIndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlicesSpec.htm">IIndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IInteractiveSession.htm">IInteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/ILazyLoader.htm">ILazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/ILMDBReader.htm">ILMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/IModule.htm">IModule</a>
        </li>
				<li>
            <a href="../tensorflow/Iname_scope.htm">Iname_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlicesSpec.htm">IndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/InteractiveSession.htm">InteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/Iones_initializer.htm">Iones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IOperation.htm">IOperation</a>
        </li>
				<li>
            <a href="../tensorflow/IOpError.htm">IOpError</a>
        </li>
				<li>
            <a href="../tensorflow/IOptionalSpec.htm">IOptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Iorthogonal_initializer.htm">Iorthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IPaddingFIFOQueue.htm">IPaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IPriorityQueue.htm">IPriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IQueueBase.htm">IQueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensor.htm">IRaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensorSpec.htm">IRaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_normal_initializer.htm">Irandom_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_uniform_initializer.htm">Irandom_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IRandomShuffleQueue.htm">IRandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IReaderBase.htm">IReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRegisterGradient.htm">IRegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/ISession.htm">ISession</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseConditionalAccumulator.htm">ISparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseFeature.htm">ISparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensor.htm">ISparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorSpec.htm">ISparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorValue.htm">ISparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/ITensor.htm">ITensor</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArray.htm">ITensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArraySpec.htm">ITensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorShape.htm">ITensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorSpec.htm">ITensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITextLineReader.htm">ITextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/ITFRecordReader.htm">ITFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/Itruncated_normal_initializer.htm">Itruncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ITypeSpec.htm">ITypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IUnconnectedGradients.htm">IUnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/Iuniform_unit_scaling_initializer.htm">Iuniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVariable.htm">IVariable</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariable_scope.htm">Ivariable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IVariableScope.htm">IVariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariance_scaling_initializer.htm">Ivariance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVarLenFeature.htm">IVarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IWholeFileReader.htm">IWholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/Izeros_initializer.htm">Izeros_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/LazyLoader.htm">LazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/LMDBReader.htm">LMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/Module.htm">Module</a>
        </li>
				<li>
            <a href="../tensorflow/name_scope.htm">name_scope</a>
        </li>
				<li>
            <a href="../tensorflow/ones_initializer.htm">ones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.htm">Operation</a>
        </li>
				<li>
            <a href="../tensorflow/Operation._InputList.htm">Operation._InputList</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.I_InputList.htm">Operation.I_InputList</a>
        </li>
				<li>
            <a href="../tensorflow/OpError.htm">OpError</a>
        </li>
				<li>
            <a href="../tensorflow/OptionalSpec.htm">OptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/orthogonal_initializer.htm">orthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/PaddingFIFOQueue.htm">PaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/PriorityQueue.htm">PriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/QueueBase.htm">QueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensor.htm">RaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensorSpec.htm">RaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/random_normal_initializer.htm">random_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/random_uniform_initializer.htm">random_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/RandomShuffleQueue.htm">RandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/ReaderBase.htm">ReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/RegisterGradient.htm">RegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/Session.htm">Session</a>
        </li>
				<li>
            <a href="../tensorflow/SparseConditionalAccumulator.htm">SparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/SparseFeature.htm">SparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensor.htm">SparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorSpec.htm">SparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorValue.htm">SparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor.htm">Tensor</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor`1.htm">Tensor&lt;T&gt;</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArray.htm">TensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArraySpec.htm">TensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimension.htm">TensorDimension</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimensionSlice.htm">TensorDimensionSlice</a>
        </li>
				<li>
            <a href="../tensorflow/TensorShape.htm">TensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/TensorSpec.htm">TensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/TextLineReader.htm">TextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.htm">tf</a>
        </li>
				<li>
            <a href="../tensorflow/tf.audio.htm">tf.audio</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.htm">tf.autograph</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.experimental.htm">tf.autograph.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.bitwise.htm">tf.bitwise</a>
        </li>
				<li>
            <a href="../tensorflow/tf.compat.htm">tf.compat</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.htm">tf.config</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.experimental.htm">tf.config.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.optimizer.htm">tf.config.optimizer</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.threading.htm">tf.config.threading</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.htm">tf.data</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.experimental.htm">tf.data.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.debugging.htm">tf.debugging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distribute.htm">tf.distribute</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distributions.htm">tf.distributions</a>
        </li>
				<li>
            <a href="../tensorflow/tf.errors.htm">tf.errors</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.htm">tf.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.experimental.htm">tf.estimator.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.export.htm">tf.estimator.export</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.inputs.htm">tf.estimator.inputs</a>
        </li>
				<li>
            <a href="../tensorflow/tf.experimental.htm">tf.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.feature_column.htm">tf.feature_column</a>
        </li>
				<li>
            <a href="../tensorflow/tf.gfile.htm">tf.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.graph_util.htm">tf.graph_util</a>
        </li>
				<li>
            <a href="../tensorflow/tf.image.htm">tf.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.initializers.htm">tf.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.htm" class="current">tf.io</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.gfile.htm">tf.io.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.htm">tf.keras</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.activations.htm">tf.keras.activations</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.htm">tf.keras.applications</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.densenet.htm">tf.keras.applications.densenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.imagenet_utils.htm">tf.keras.applications.imagenet_utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_resnet_v2.htm">tf.keras.applications.inception_resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_v3.htm">tf.keras.applications.inception_v3</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet.htm">tf.keras.applications.mobilenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet_v2.htm">tf.keras.applications.mobilenet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.nasnet.htm">tf.keras.applications.nasnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet.htm">tf.keras.applications.resnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet_v2.htm">tf.keras.applications.resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg16.htm">tf.keras.applications.vgg16</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg19.htm">tf.keras.applications.vgg19</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.xception.htm">tf.keras.applications.xception</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.backend.htm">tf.keras.backend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.constraints.htm">tf.keras.constraints</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.htm">tf.keras.datasets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.boston_housing.htm">tf.keras.datasets.boston_housing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar10.htm">tf.keras.datasets.cifar10</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar100.htm">tf.keras.datasets.cifar100</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.fashion_mnist.htm">tf.keras.datasets.fashion_mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.imdb.htm">tf.keras.datasets.imdb</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.mnist.htm">tf.keras.datasets.mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.reuters.htm">tf.keras.datasets.reuters</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.estimator.htm">tf.keras.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.experimental.htm">tf.keras.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.initializers.htm">tf.keras.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.layers.htm">tf.keras.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.losses.htm">tf.keras.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.metrics.htm">tf.keras.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.htm">tf.keras.mixed_precision</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.experimental.htm">tf.keras.mixed_precision.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.models.htm">tf.keras.models</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.htm">tf.keras.optimizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.schedules.htm">tf.keras.optimizers.schedules</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.htm">tf.keras.preprocessing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.image.htm">tf.keras.preprocessing.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.regularizers.htm">tf.keras.regularizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.utils.htm">tf.keras.utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.htm">tf.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.experimental.htm">tf.layers.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.linalg.htm">tf.linalg</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.htm">tf.lite</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.htm">tf.lite.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.htm">tf.lite.experimental.microfrontend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.htm">tf.lite.experimental.microfrontend.python</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.ops.htm">tf.lite.experimental.microfrontend.python.ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.nn.htm">tf.lite.experimental.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.logging.htm">tf.logging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.losses.htm">tf.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.math.htm">tf.math</a>
        </li>
				<li>
            <a href="../tensorflow/tf.metrics.htm">tf.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nest.htm">tf.nest</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nn.htm">tf.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.profiler.htm">tf.profiler</a>
        </li>
				<li>
            <a href="../tensorflow/tf.quantization.htm">tf.quantization</a>
        </li>
				<li>
            <a href="../tensorflow/tf.ragged.htm">tf.ragged</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.htm">tf.random</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.experimental.htm">tf.random.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.resource_loader.htm">tf.resource_loader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.htm">tf.saved_model</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.main_op.htm">tf.saved_model.main_op</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sets.htm">tf.sets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.signal.htm">tf.signal</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sparse.htm">tf.sparse</a>
        </li>
				<li>
            <a href="../tensorflow/tf.strings.htm">tf.strings</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.htm">tf.summary</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.experimental.htm">tf.summary.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sysconfig.htm">tf.sysconfig</a>
        </li>
				<li>
            <a href="../tensorflow/tf.test.htm">tf.test</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.htm">tf.tpu</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.experimental.htm">tf.tpu.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.htm">tf.train</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.experimental.htm">tf.train.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.user_ops.htm">tf.user_ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.htm">tf.xla</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.experimental.htm">tf.xla.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/TFRecordReader.htm">TFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/truncated_normal_initializer.htm">truncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/TypeSpec.htm">TypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/UnconnectedGradients.htm">UnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/uniform_unit_scaling_initializer.htm">uniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Variable.htm">Variable</a>
        </li>
				<li>
            <a href="../tensorflow/variable_scope.htm">variable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableAggregation.htm">VariableAggregation</a>
        </li>
				<li>
            <a href="../tensorflow/VariableScope.htm">VariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableSynchronization.htm">VariableSynchronization</a>
        </li>
				<li>
            <a href="../tensorflow/variance_scaling_initializer.htm">variance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/VarLenFeature.htm">VarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/WholeFileReader.htm">WholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/zeros_initializer.htm">zeros_initializer</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> tf.io</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow</p>
		</header>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow/tf.io.htm#decode_image">decode_image</a></li>
				<li><a href="../tensorflow/tf.io.htm#decode_image">decode_image</a></li>
				<li><a href="../tensorflow/tf.io.htm#decode_image">decode_image</a></li>
				<li><a href="../tensorflow/tf.io.htm#decode_image">decode_image</a></li>
				<li><a href="../tensorflow/tf.io.htm#decode_image_dyn">decode_image_dyn</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg">is_jpeg</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg">is_jpeg</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg">is_jpeg</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg">is_jpeg</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg_dyn">is_jpeg_dyn</a></li>
				<li><a href="../tensorflow/tf.io.htm#match_filenames_once">match_filenames_once</a></li>
				<li><a href="../tensorflow/tf.io.htm#match_filenames_once_dyn">match_filenames_once_dyn</a></li>
				<li><a href="../tensorflow/tf.io.htm#parse_sequence_example">parse_sequence_example</a></li>
				<li><a href="../tensorflow/tf.io.htm#parse_sequence_example_dyn">parse_sequence_example_dyn</a></li>
				<li><a href="../tensorflow/tf.io.htm#tf_record_iterator">tf_record_iterator</a></li>
				<li><a href="../tensorflow/tf.io.htm#tf_record_iterator">tf_record_iterator</a></li>
				<li><a href="../tensorflow/tf.io.htm#tf_record_iterator_dyn">tf_record_iterator_dyn</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph">write_graph</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph">write_graph</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph">write_graph</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph">write_graph</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph_dyn">write_graph_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow/tf.io.htm#decode_image_fn">decode_image_fn</a></li>
				<li><a href="../tensorflow/tf.io.htm#is_jpeg_fn">is_jpeg_fn</a></li>
				<li><a href="../tensorflow/tf.io.htm#match_filenames_once_fn">match_filenames_once_fn</a></li>
				<li><a href="../tensorflow/tf.io.htm#parse_sequence_example_fn">parse_sequence_example_fn</a></li>
				<li><a href="../tensorflow/tf.io.htm#tf_record_iterator_fn">tf_record_iterator_fn</a></li>
				<li><a href="../tensorflow/tf.io.htm#write_graph_fn">write_graph_fn</a></li>
			</ul>
		
	</div>
	
	
	<h3 class="section">Public static methods</h3>

	<div id="decode_image" class="method">
		<h4>
			<span title="System.object">object</span> <strong>decode_image</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> contents, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> channels, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.string">string</span> name, <span title="System.bool">bool</span> expand_animations)
		</h4>
		<div class="content">Function for `decode_bmp`, `decode_gif`, `decode_jpeg`, and `decode_png`. <p></p> Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the
appropriate operation to convert the input bytes `string` into a `Tensor`
of type `dtype`. <p></p> Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as
opposed to `decode_bmp`, `decode_jpeg` and `decode_png`, which return 3-D
arrays `[height, width, num_channels]`. Make sure to take this into account
when constructing your graph if you are intermixing GIF files with BMP, JPEG,
and/or PNG files. Alternately, set the `expand_animations` argument of this
function to `False`, in which case the op will return 3-dimensional tensors
and will truncate animated GIF files to the first frame. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> channels
						</dt>
						<dd>An optional `int`. Defaults to `0`. Number of color channels for
the decoded image. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The desired DType of the returned `Tensor`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> expand_animations
						</dt>
						<dd>Controls the shape of the returned op's output. If
`True`, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP
files; and a 4-D tensor for all GIFs, whether animated or not. If,
`False`, the returned op will produce a 3-D tensor for all file types and
will truncate animated GIFs to the first frame. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
the file type and the value of the `expand_animations` parameter. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="decode_image" class="method">
		<h4>
			<span title="System.object">object</span> <strong>decode_image</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> contents, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> channels, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.string">string</span> name, <span title="System.bool">bool</span> expand_animations)
		</h4>
		<div class="content">Function for `decode_bmp`, `decode_gif`, `decode_jpeg`, and `decode_png`. <p></p> Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the
appropriate operation to convert the input bytes `string` into a `Tensor`
of type `dtype`. <p></p> Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as
opposed to `decode_bmp`, `decode_jpeg` and `decode_png`, which return 3-D
arrays `[height, width, num_channels]`. Make sure to take this into account
when constructing your graph if you are intermixing GIF files with BMP, JPEG,
and/or PNG files. Alternately, set the `expand_animations` argument of this
function to `False`, in which case the op will return 3-dimensional tensors
and will truncate animated GIF files to the first frame. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> channels
						</dt>
						<dd>An optional `int`. Defaults to `0`. Number of color channels for
the decoded image. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The desired DType of the returned `Tensor`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> expand_animations
						</dt>
						<dd>Controls the shape of the returned op's output. If
`True`, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP
files; and a 4-D tensor for all GIFs, whether animated or not. If,
`False`, the returned op will produce a 3-D tensor for all file types and
will truncate animated GIFs to the first frame. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
the file type and the value of the `expand_animations` parameter. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="decode_image" class="method">
		<h4>
			<span title="System.object">object</span> <strong>decode_image</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> contents, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> channels, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.string">string</span> name, <span title="System.bool">bool</span> expand_animations)
		</h4>
		<div class="content">Function for `decode_bmp`, `decode_gif`, `decode_jpeg`, and `decode_png`. <p></p> Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the
appropriate operation to convert the input bytes `string` into a `Tensor`
of type `dtype`. <p></p> Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as
opposed to `decode_bmp`, `decode_jpeg` and `decode_png`, which return 3-D
arrays `[height, width, num_channels]`. Make sure to take this into account
when constructing your graph if you are intermixing GIF files with BMP, JPEG,
and/or PNG files. Alternately, set the `expand_animations` argument of this
function to `False`, in which case the op will return 3-dimensional tensors
and will truncate animated GIF files to the first frame. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> channels
						</dt>
						<dd>An optional `int`. Defaults to `0`. Number of color channels for
the decoded image. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The desired DType of the returned `Tensor`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> expand_animations
						</dt>
						<dd>Controls the shape of the returned op's output. If
`True`, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP
files; and a 4-D tensor for all GIFs, whether animated or not. If,
`False`, the returned op will produce a 3-D tensor for all file types and
will truncate animated GIFs to the first frame. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
the file type and the value of the `expand_animations` parameter. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="decode_image" class="method">
		<h4>
			<span title="System.object">object</span> <strong>decode_image</strong>(<span title="System.Byte[]">Byte[]</span> contents, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> channels, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.string">string</span> name, <span title="System.bool">bool</span> expand_animations)
		</h4>
		<div class="content">Function for `decode_bmp`, `decode_gif`, `decode_jpeg`, and `decode_png`. <p></p> Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the
appropriate operation to convert the input bytes `string` into a `Tensor`
of type `dtype`. <p></p> Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as
opposed to `decode_bmp`, `decode_jpeg` and `decode_png`, which return 3-D
arrays `[height, width, num_channels]`. Make sure to take this into account
when constructing your graph if you are intermixing GIF files with BMP, JPEG,
and/or PNG files. Alternately, set the `expand_animations` argument of this
function to `False`, in which case the op will return 3-dimensional tensors
and will truncate animated GIF files to the first frame. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> channels
						</dt>
						<dd>An optional `int`. Defaults to `0`. Number of color channels for
the decoded image. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The desired DType of the returned `Tensor`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> expand_animations
						</dt>
						<dd>Controls the shape of the returned op's output. If
`True`, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP
files; and a 4-D tensor for all GIFs, whether animated or not. If,
`False`, the returned op will produce a 3-D tensor for all file types and
will truncate animated GIFs to the first frame. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
the file type and the value of the `expand_animations` parameter. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="decode_image_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>decode_image_dyn</strong>(<span title="System.object">object</span> contents, <span title="System.object">object</span> channels, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.object">object</span> name, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> expand_animations)
		</h4>
		<div class="content">Function for `decode_bmp`, `decode_gif`, `decode_jpeg`, and `decode_png`. <p></p> Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the
appropriate operation to convert the input bytes `string` into a `Tensor`
of type `dtype`. <p></p> Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as
opposed to `decode_bmp`, `decode_jpeg` and `decode_png`, which return 3-D
arrays `[height, width, num_channels]`. Make sure to take this into account
when constructing your graph if you are intermixing GIF files with BMP, JPEG,
and/or PNG files. Alternately, set the `expand_animations` argument of this
function to `False`, in which case the op will return 3-dimensional tensors
and will truncate animated GIF files to the first frame. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> channels
						</dt>
						<dd>An optional `int`. Defaults to `0`. Number of color channels for
the decoded image. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The desired DType of the returned `Tensor`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> expand_animations
						</dt>
						<dd>Controls the shape of the returned op's output. If
`True`, the returned op will produce a 3-D tensor for PNG, JPEG, and BMP
files; and a 4-D tensor for all GIFs, whether animated or not. If,
`False`, the returned op will produce a 3-D tensor for all file types and
will truncate animated GIFs to the first frame. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
the file type and the value of the `expand_animations` parameter. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_jpeg" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>is_jpeg</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> contents, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Convenience function to check if the 'contents' encodes a JPEG image. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A scalar boolean tensor indicating if 'contents' may be a JPEG image.
is_jpeg is susceptible to false positives. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_jpeg" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>is_jpeg</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> contents, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Convenience function to check if the 'contents' encodes a JPEG image. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A scalar boolean tensor indicating if 'contents' may be a JPEG image.
is_jpeg is susceptible to false positives. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_jpeg" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>is_jpeg</strong>(<span title="System.Byte[]">Byte[]</span> contents, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Convenience function to check if the 'contents' encodes a JPEG image. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A scalar boolean tensor indicating if 'contents' may be a JPEG image.
is_jpeg is susceptible to false positives. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_jpeg" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>is_jpeg</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> contents, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Convenience function to check if the 'contents' encodes a JPEG image. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A scalar boolean tensor indicating if 'contents' may be a JPEG image.
is_jpeg is susceptible to false positives. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_jpeg_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_jpeg_dyn</strong>(<span title="System.object">object</span> contents, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Convenience function to check if the 'contents' encodes a JPEG image. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> contents
						</dt>
						<dd>0-D `string`. The encoded image bytes. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A scalar boolean tensor indicating if 'contents' may be a JPEG image.
is_jpeg is susceptible to false positives. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="match_filenames_once" class="method">
		<h4>
			<a href="../tensorflow/Variable.htm">Variable</a> <strong>match_filenames_once</strong>(<span title="System.object">object</span> pattern, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Save the list of files matching pattern, so it is only computed once. <p></p> NOTE: The order of the files returned is deterministic. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> pattern
						</dt>
						<dd>A file pattern (glob), or 1D tensor of file patterns. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operations (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Variable.htm">Variable</a></code>
					</dt>
					<dd>A variable that is initialized to the list of files matching the pattern(s). 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="match_filenames_once_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>match_filenames_once_dyn</strong>(<span title="System.object">object</span> pattern, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Save the list of files matching pattern, so it is only computed once. <p></p> NOTE: The order of the files returned is deterministic. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> pattern
						</dt>
						<dd>A file pattern (glob), or 1D tensor of file patterns. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operations (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A variable that is initialized to the list of files matching the pattern(s). 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="parse_sequence_example" class="method">
		<h4>
			<span title="System.ValueTuple<IDictionary<object, object>, object, object>">ValueTuple&lt;IDictionary&lt;object, object&gt;, object, object&gt;</span> <strong>parse_sequence_example</strong>(<span title="System.object">object</span> serialized, <span title="System.object">object</span> context_features, <span title="System.object">object</span> sequence_features, <span title="System.object">object</span> example_names, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Parses a batch of `SequenceExample` protos. <p></p> Parses a vector of serialized
[`SequenceExample`](https://www.tensorflow.org/code/tensorflow/core/example/example.proto)
protos given in `serialized`. <p></p> This op parses serialized sequence examples into a tuple of dictionaries,
each mapping keys to `Tensor` and `SparseTensor` objects.
The first dictionary contains mappings for keys appearing in
`context_features`, and the second dictionary contains mappings for keys
appearing in `sequence_features`. <p></p> At least one of `context_features` and `sequence_features` must be provided
and non-empty. <p></p> The `context_features` keys are associated with a `SequenceExample` as a
whole, independent of time / frame.  In contrast, the `sequence_features` keys
provide a way to access variable-length data within the `FeatureList` section
of the `SequenceExample` proto.  While the shapes of `context_features` values
are fixed with respect to frame, the frame dimension (the first dimension)
of `sequence_features` values may vary between `SequenceExample` protos,
and even between `feature_list` keys within the same `SequenceExample`. <p></p> `context_features` contains `VarLenFeature` and `FixedLenFeature` objects.
Each `VarLenFeature` is mapped to a `SparseTensor`, and each `FixedLenFeature`
is mapped to a `Tensor`, of the specified type, shape, and default value. <p></p> `sequence_features` contains `VarLenFeature` and `FixedLenSequenceFeature`
objects. Each `VarLenFeature` is mapped to a `SparseTensor`, and each
`FixedLenSequenceFeature` is mapped to a `Tensor`, each of the specified type.
The shape will be `(B,T,) + df.dense_shape` for `FixedLenSequenceFeature`
`df`, where `B` is the batch size, and `T` is the length of the associated
`FeatureList` in the `SequenceExample`. For instance,
`FixedLenSequenceFeature([])` yields a scalar 2-D `Tensor` of static shape
`[None, None]` and dynamic shape `[B, T]`, while
`FixedLenSequenceFeature([k])` (for `int k >= 1`) yields a 3-D matrix `Tensor`
of static shape `[None, None, k]` and dynamic shape `[B, T, k]`. <p></p> Like the input, the resulting output tensors have a batch dimension. This
means that the original per-example shapes of `VarLenFeature`s and
`FixedLenSequenceFeature`s can be lost. To handle that situation, this op also
provides dicts of shape tensors as part of the output. There is one dict for
the context features, and one for the feature_list features. Context features
of type `FixedLenFeature`s will not be present, since their shapes are already
known by the caller. In situations where the input 'FixedLenFeature`s are of
different lengths across examples, the shorter examples will be padded with
default datatype values: 0 for numeric types, and the empty string for string
types. <p></p> Each `SparseTensor` corresponding to `sequence_features` represents a ragged
vector.  Its indices are `[time, index]`, where `time` is the `FeatureList`
entry and `index` is the value's index in the list of values associated with
that time. <p></p> `FixedLenFeature` entries with a `default_value` and `FixedLenSequenceFeature`
entries with `allow_missing=True` are optional; otherwise, we will fail if
that `Feature` or `FeatureList` is missing from any example in `serialized`. <p></p> `example_name` may contain a descriptive name for the corresponding serialized
proto. This may be useful for debugging purposes, but it has no effect on the
output. If not `None`, `example_name` must be a scalar. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> serialized
						</dt>
						<dd>A vector (1-D Tensor) of type string containing binary
serialized `SequenceExample` protos. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> context_features
						</dt>
						<dd>A `dict` mapping feature keys to `FixedLenFeature` or
`VarLenFeature` values. These features are associated with a
`SequenceExample` as a whole. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> sequence_features
						</dt>
						<dd>A `dict` mapping feature keys to
`FixedLenSequenceFeature` or `VarLenFeature` values. These features are
associated with data within the `FeatureList` section of the
`SequenceExample` proto. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> example_names
						</dt>
						<dd>A vector (1-D Tensor) of strings (optional), the name of the
serialized protos. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<IDictionary<object, object>, object, object>">ValueTuple&lt;IDictionary&lt;object, object&gt;, object, object&gt;</span></code>
					</dt>
					<dd>A tuple of three `dict`s, each mapping keys to `Tensor`s and
`SparseTensor`s. The first dict contains the context key/values,
the second dict contains the feature_list key/values, and the final dict
contains the lengths of any dense feature_list features. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="parse_sequence_example_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>parse_sequence_example_dyn</strong>(<span title="System.object">object</span> serialized, <span title="System.object">object</span> context_features, <span title="System.object">object</span> sequence_features, <span title="System.object">object</span> example_names, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Parses a batch of `SequenceExample` protos. <p></p> Parses a vector of serialized
[`SequenceExample`](https://www.tensorflow.org/code/tensorflow/core/example/example.proto)
protos given in `serialized`. <p></p> This op parses serialized sequence examples into a tuple of dictionaries,
each mapping keys to `Tensor` and `SparseTensor` objects.
The first dictionary contains mappings for keys appearing in
`context_features`, and the second dictionary contains mappings for keys
appearing in `sequence_features`. <p></p> At least one of `context_features` and `sequence_features` must be provided
and non-empty. <p></p> The `context_features` keys are associated with a `SequenceExample` as a
whole, independent of time / frame.  In contrast, the `sequence_features` keys
provide a way to access variable-length data within the `FeatureList` section
of the `SequenceExample` proto.  While the shapes of `context_features` values
are fixed with respect to frame, the frame dimension (the first dimension)
of `sequence_features` values may vary between `SequenceExample` protos,
and even between `feature_list` keys within the same `SequenceExample`. <p></p> `context_features` contains `VarLenFeature` and `FixedLenFeature` objects.
Each `VarLenFeature` is mapped to a `SparseTensor`, and each `FixedLenFeature`
is mapped to a `Tensor`, of the specified type, shape, and default value. <p></p> `sequence_features` contains `VarLenFeature` and `FixedLenSequenceFeature`
objects. Each `VarLenFeature` is mapped to a `SparseTensor`, and each
`FixedLenSequenceFeature` is mapped to a `Tensor`, each of the specified type.
The shape will be `(B,T,) + df.dense_shape` for `FixedLenSequenceFeature`
`df`, where `B` is the batch size, and `T` is the length of the associated
`FeatureList` in the `SequenceExample`. For instance,
`FixedLenSequenceFeature([])` yields a scalar 2-D `Tensor` of static shape
`[None, None]` and dynamic shape `[B, T]`, while
`FixedLenSequenceFeature([k])` (for `int k >= 1`) yields a 3-D matrix `Tensor`
of static shape `[None, None, k]` and dynamic shape `[B, T, k]`. <p></p> Like the input, the resulting output tensors have a batch dimension. This
means that the original per-example shapes of `VarLenFeature`s and
`FixedLenSequenceFeature`s can be lost. To handle that situation, this op also
provides dicts of shape tensors as part of the output. There is one dict for
the context features, and one for the feature_list features. Context features
of type `FixedLenFeature`s will not be present, since their shapes are already
known by the caller. In situations where the input 'FixedLenFeature`s are of
different lengths across examples, the shorter examples will be padded with
default datatype values: 0 for numeric types, and the empty string for string
types. <p></p> Each `SparseTensor` corresponding to `sequence_features` represents a ragged
vector.  Its indices are `[time, index]`, where `time` is the `FeatureList`
entry and `index` is the value's index in the list of values associated with
that time. <p></p> `FixedLenFeature` entries with a `default_value` and `FixedLenSequenceFeature`
entries with `allow_missing=True` are optional; otherwise, we will fail if
that `Feature` or `FeatureList` is missing from any example in `serialized`. <p></p> `example_name` may contain a descriptive name for the corresponding serialized
proto. This may be useful for debugging purposes, but it has no effect on the
output. If not `None`, `example_name` must be a scalar. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> serialized
						</dt>
						<dd>A vector (1-D Tensor) of type string containing binary
serialized `SequenceExample` protos. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> context_features
						</dt>
						<dd>A `dict` mapping feature keys to `FixedLenFeature` or
`VarLenFeature` values. These features are associated with a
`SequenceExample` as a whole. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> sequence_features
						</dt>
						<dd>A `dict` mapping feature keys to
`FixedLenSequenceFeature` or `VarLenFeature` values. These features are
associated with data within the `FeatureList` section of the
`SequenceExample` proto. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> example_names
						</dt>
						<dd>A vector (1-D Tensor) of strings (optional), the name of the
serialized protos. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for this operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A tuple of three `dict`s, each mapping keys to `Tensor`s and
`SparseTensor`s. The first dict contains the context key/values,
the second dict contains the feature_list key/values, and the final dict
contains the lengths of any dense feature_list features. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="tf_record_iterator" class="method">
		<h4>
			<span title="System.Collections.Generic.IEnumerator<object>">IEnumerator&lt;object&gt;</span> <strong>tf_record_iterator</strong>(<span title="System.string">string</span> path, <a href="../tensorflow.io/TFRecordOptions.htm">TFRecordOptions</a> options)
		</h4>
		<div class="content">An iterator that read the records from a TFRecords file. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Use eager execution and:
`tf.data.TFRecordDataset(path)` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> path
						</dt>
						<dd>The path to the TFRecords file. 
						</dd>
						<dt>
							<code><a href="../tensorflow.io/TFRecordOptions.htm">TFRecordOptions</a></code> options
						</dt>
						<dd>(optional) A TFRecordOptions object. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="tf_record_iterator" class="method">
		<h4>
			<span title="System.Collections.Generic.IEnumerator<object>">IEnumerator&lt;object&gt;</span> <strong>tf_record_iterator</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> path, <a href="../tensorflow.io/TFRecordOptions.htm">TFRecordOptions</a> options)
		</h4>
		<div class="content">An iterator that read the records from a TFRecords file. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Use eager execution and:
`tf.data.TFRecordDataset(path)` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> path
						</dt>
						<dd>The path to the TFRecords file. 
						</dd>
						<dt>
							<code><a href="../tensorflow.io/TFRecordOptions.htm">TFRecordOptions</a></code> options
						</dt>
						<dd>(optional) A TFRecordOptions object. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="tf_record_iterator_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>tf_record_iterator_dyn</strong>(<span title="System.object">object</span> path, <span title="System.object">object</span> options)
		</h4>
		<div class="content">An iterator that read the records from a TFRecords file. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Use eager execution and:
`tf.data.TFRecordDataset(path)` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> path
						</dt>
						<dd>The path to the TFRecords file. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> options
						</dt>
						<dd>(optional) A TFRecordOptions object. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="write_graph" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_graph</strong>(<span title="System.object">object</span> graph_or_graph_def, <span title="System.string">string</span> logdir, <span title="System.string">string</span> name, <span title="System.bool">bool</span> as_text)
		</h4>
		<div class="content">Writes a graph proto to a file. <p></p> The graph is written as a text proto unless `as_text` is `False`.
or 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph_or_graph_def
						</dt>
						<dd>A `Graph` or a `GraphDef` protocol buffer. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> logdir
						</dt>
						<dd>Directory where to write the graph. This can refer to remote
filesystems, such as Google Cloud Storage (GCS). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Filename for the graph. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_text
						</dt>
						<dd>If `True`, writes the graph as an ASCII proto. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The path of the output proto file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>v = tf.Variable(0, name='my_variable')
            sess = tf.compat.v1.Session()
            tf.io.write_graph(sess.graph_def, '/tmp/my-model', 'train.pbtxt') </pre>
</div>
		</div>
	</div>
	<div id="write_graph" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_graph</strong>(<span title="System.object">object</span> graph_or_graph_def, <span title="System.Byte[]">Byte[]</span> logdir, <span title="System.string">string</span> name, <span title="System.bool">bool</span> as_text)
		</h4>
		<div class="content">Writes a graph proto to a file. <p></p> The graph is written as a text proto unless `as_text` is `False`.
or 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph_or_graph_def
						</dt>
						<dd>A `Graph` or a `GraphDef` protocol buffer. 
						</dd>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> logdir
						</dt>
						<dd>Directory where to write the graph. This can refer to remote
filesystems, such as Google Cloud Storage (GCS). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Filename for the graph. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_text
						</dt>
						<dd>If `True`, writes the graph as an ASCII proto. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The path of the output proto file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>v = tf.Variable(0, name='my_variable')
            sess = tf.compat.v1.Session()
            tf.io.write_graph(sess.graph_def, '/tmp/my-model', 'train.pbtxt') </pre>
</div>
		</div>
	</div>
	<div id="write_graph" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_graph</strong>(<a href="../tensorflow/Graph.htm">Graph</a> graph_or_graph_def, <span title="System.string">string</span> logdir, <span title="System.string">string</span> name, <span title="System.bool">bool</span> as_text)
		</h4>
		<div class="content">Writes a graph proto to a file. <p></p> The graph is written as a text proto unless `as_text` is `False`.
or 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Graph.htm">Graph</a></code> graph_or_graph_def
						</dt>
						<dd>A `Graph` or a `GraphDef` protocol buffer. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> logdir
						</dt>
						<dd>Directory where to write the graph. This can refer to remote
filesystems, such as Google Cloud Storage (GCS). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Filename for the graph. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_text
						</dt>
						<dd>If `True`, writes the graph as an ASCII proto. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The path of the output proto file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>v = tf.Variable(0, name='my_variable')
            sess = tf.compat.v1.Session()
            tf.io.write_graph(sess.graph_def, '/tmp/my-model', 'train.pbtxt') </pre>
</div>
		</div>
	</div>
	<div id="write_graph" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_graph</strong>(<a href="../tensorflow/Graph.htm">Graph</a> graph_or_graph_def, <span title="System.Byte[]">Byte[]</span> logdir, <span title="System.string">string</span> name, <span title="System.bool">bool</span> as_text)
		</h4>
		<div class="content">Writes a graph proto to a file. <p></p> The graph is written as a text proto unless `as_text` is `False`.
or 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Graph.htm">Graph</a></code> graph_or_graph_def
						</dt>
						<dd>A `Graph` or a `GraphDef` protocol buffer. 
						</dd>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> logdir
						</dt>
						<dd>Directory where to write the graph. This can refer to remote
filesystems, such as Google Cloud Storage (GCS). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Filename for the graph. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_text
						</dt>
						<dd>If `True`, writes the graph as an ASCII proto. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The path of the output proto file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>v = tf.Variable(0, name='my_variable')
            sess = tf.compat.v1.Session()
            tf.io.write_graph(sess.graph_def, '/tmp/my-model', 'train.pbtxt') </pre>
</div>
		</div>
	</div>
	<div id="write_graph_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_graph_dyn</strong>(<span title="System.object">object</span> graph_or_graph_def, <span title="System.object">object</span> logdir, <span title="System.object">object</span> name, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> as_text)
		</h4>
		<div class="content">Writes a graph proto to a file. <p></p> The graph is written as a text proto unless `as_text` is `False`.
or 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph_or_graph_def
						</dt>
						<dd>A `Graph` or a `GraphDef` protocol buffer. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> logdir
						</dt>
						<dd>Directory where to write the graph. This can refer to remote
filesystems, such as Google Cloud Storage (GCS). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>Filename for the graph. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> as_text
						</dt>
						<dd>If `True`, writes the graph as an ASCII proto. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The path of the output proto file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>v = tf.Variable(0, name='my_variable')
            sess = tf.compat.v1.Session()
            tf.io.write_graph(sess.graph_def, '/tmp/my-model', 'train.pbtxt') </pre>
</div>
		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="decode_image_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>decode_image_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_jpeg_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>is_jpeg_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="match_filenames_once_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>match_filenames_once_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="parse_sequence_example_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>parse_sequence_example_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tf_record_iterator_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>tf_record_iterator_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="write_graph_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>write_graph_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>