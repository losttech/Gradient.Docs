<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>Dimension - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow/AggregationMethod.htm">AggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulator.htm">ConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulatorBase.htm">ConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/constant_initializer.htm">constant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/CriticalSection.htm">CriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/DeviceSpec.htm">DeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Dimension.htm" class="current">Dimension</a>
        </li>
				<li>
            <a href="../tensorflow/DType.htm">DType</a>
        </li>
				<li>
            <a href="../tensorflow/FIFOQueue.htm">FIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenFeature.htm">FixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLengthRecordReader.htm">FixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenSequenceFeature.htm">FixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_normal_initializer.htm">glorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_uniform_initializer.htm">glorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/GradientTape.htm">GradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.htm">Graph</a>
        </li>
				<li>
            <a href="../tensorflow/Graph._ControlDependenciesController.htm">Graph._ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.I_ControlDependenciesController.htm">Graph.I_ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/GraphKeys.htm">GraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/HeadingAxes.htm">HeadingAxes</a>
        </li>
				<li>
            <a href="../tensorflow/IAggregationMethod.htm">IAggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulator.htm">IConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulatorBase.htm">IConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/Iconstant_initializer.htm">Iconstant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ICriticalSection.htm">ICriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/IdentityReader.htm">IdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IDeviceSpec.htm">IDeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IDimension.htm">IDimension</a>
        </li>
				<li>
            <a href="../tensorflow/IDType.htm">IDType</a>
        </li>
				<li>
            <a href="../tensorflow/IFIFOQueue.htm">IFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenFeature.htm">IFixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLengthRecordReader.htm">IFixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenSequenceFeature.htm">IFixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_normal_initializer.htm">Iglorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_uniform_initializer.htm">Iglorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IGradientTape.htm">IGradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/IGraph.htm">IGraph</a>
        </li>
				<li>
            <a href="../tensorflow/IGraphKeys.htm">IGraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/IIdentityReader.htm">IIdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlices.htm">IIndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlicesSpec.htm">IIndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IInteractiveSession.htm">IInteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/ILazyLoader.htm">ILazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/ILMDBReader.htm">ILMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/IModule.htm">IModule</a>
        </li>
				<li>
            <a href="../tensorflow/Iname_scope.htm">Iname_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlicesSpec.htm">IndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/InteractiveSession.htm">InteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/Iones_initializer.htm">Iones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IOperation.htm">IOperation</a>
        </li>
				<li>
            <a href="../tensorflow/IOpError.htm">IOpError</a>
        </li>
				<li>
            <a href="../tensorflow/IOptionalSpec.htm">IOptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Iorthogonal_initializer.htm">Iorthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IPaddingFIFOQueue.htm">IPaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IPriorityQueue.htm">IPriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IQueueBase.htm">IQueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensor.htm">IRaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensorSpec.htm">IRaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_normal_initializer.htm">Irandom_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_uniform_initializer.htm">Irandom_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IRandomShuffleQueue.htm">IRandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IReaderBase.htm">IReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRegisterGradient.htm">IRegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/ISession.htm">ISession</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseConditionalAccumulator.htm">ISparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseFeature.htm">ISparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensor.htm">ISparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorSpec.htm">ISparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorValue.htm">ISparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/ITensor.htm">ITensor</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArray.htm">ITensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArraySpec.htm">ITensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorShape.htm">ITensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorSpec.htm">ITensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITextLineReader.htm">ITextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/ITFRecordReader.htm">ITFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/Itruncated_normal_initializer.htm">Itruncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ITypeSpec.htm">ITypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IUnconnectedGradients.htm">IUnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/Iuniform_unit_scaling_initializer.htm">Iuniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVariable.htm">IVariable</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariable_scope.htm">Ivariable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IVariableScope.htm">IVariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariance_scaling_initializer.htm">Ivariance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVarLenFeature.htm">IVarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IWholeFileReader.htm">IWholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/Izeros_initializer.htm">Izeros_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/LazyLoader.htm">LazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/LMDBReader.htm">LMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/Module.htm">Module</a>
        </li>
				<li>
            <a href="../tensorflow/name_scope.htm">name_scope</a>
        </li>
				<li>
            <a href="../tensorflow/ones_initializer.htm">ones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.htm">Operation</a>
        </li>
				<li>
            <a href="../tensorflow/Operation._InputList.htm">Operation._InputList</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.I_InputList.htm">Operation.I_InputList</a>
        </li>
				<li>
            <a href="../tensorflow/OpError.htm">OpError</a>
        </li>
				<li>
            <a href="../tensorflow/OptionalSpec.htm">OptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/orthogonal_initializer.htm">orthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/PaddingFIFOQueue.htm">PaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/PriorityQueue.htm">PriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/QueueBase.htm">QueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensor.htm">RaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensorSpec.htm">RaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/random_normal_initializer.htm">random_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/random_uniform_initializer.htm">random_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/RandomShuffleQueue.htm">RandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/ReaderBase.htm">ReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/RegisterGradient.htm">RegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/Session.htm">Session</a>
        </li>
				<li>
            <a href="../tensorflow/SparseConditionalAccumulator.htm">SparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/SparseFeature.htm">SparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensor.htm">SparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorSpec.htm">SparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorValue.htm">SparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor.htm">Tensor</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor`1.htm">Tensor&lt;T&gt;</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArray.htm">TensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArraySpec.htm">TensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimension.htm">TensorDimension</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimensionSlice.htm">TensorDimensionSlice</a>
        </li>
				<li>
            <a href="../tensorflow/TensorShape.htm">TensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/TensorSpec.htm">TensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/TextLineReader.htm">TextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.htm">tf</a>
        </li>
				<li>
            <a href="../tensorflow/tf.audio.htm">tf.audio</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.htm">tf.autograph</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.experimental.htm">tf.autograph.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.bitwise.htm">tf.bitwise</a>
        </li>
				<li>
            <a href="../tensorflow/tf.compat.htm">tf.compat</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.htm">tf.config</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.experimental.htm">tf.config.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.optimizer.htm">tf.config.optimizer</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.threading.htm">tf.config.threading</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.htm">tf.data</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.experimental.htm">tf.data.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.debugging.htm">tf.debugging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distribute.htm">tf.distribute</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distributions.htm">tf.distributions</a>
        </li>
				<li>
            <a href="../tensorflow/tf.errors.htm">tf.errors</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.htm">tf.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.experimental.htm">tf.estimator.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.export.htm">tf.estimator.export</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.inputs.htm">tf.estimator.inputs</a>
        </li>
				<li>
            <a href="../tensorflow/tf.experimental.htm">tf.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.feature_column.htm">tf.feature_column</a>
        </li>
				<li>
            <a href="../tensorflow/tf.gfile.htm">tf.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.graph_util.htm">tf.graph_util</a>
        </li>
				<li>
            <a href="../tensorflow/tf.image.htm">tf.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.initializers.htm">tf.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.htm">tf.io</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.gfile.htm">tf.io.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.htm">tf.keras</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.activations.htm">tf.keras.activations</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.htm">tf.keras.applications</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.densenet.htm">tf.keras.applications.densenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.imagenet_utils.htm">tf.keras.applications.imagenet_utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_resnet_v2.htm">tf.keras.applications.inception_resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_v3.htm">tf.keras.applications.inception_v3</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet.htm">tf.keras.applications.mobilenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet_v2.htm">tf.keras.applications.mobilenet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.nasnet.htm">tf.keras.applications.nasnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet.htm">tf.keras.applications.resnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet_v2.htm">tf.keras.applications.resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg16.htm">tf.keras.applications.vgg16</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg19.htm">tf.keras.applications.vgg19</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.xception.htm">tf.keras.applications.xception</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.backend.htm">tf.keras.backend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.constraints.htm">tf.keras.constraints</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.htm">tf.keras.datasets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.boston_housing.htm">tf.keras.datasets.boston_housing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar10.htm">tf.keras.datasets.cifar10</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar100.htm">tf.keras.datasets.cifar100</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.fashion_mnist.htm">tf.keras.datasets.fashion_mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.imdb.htm">tf.keras.datasets.imdb</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.mnist.htm">tf.keras.datasets.mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.reuters.htm">tf.keras.datasets.reuters</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.estimator.htm">tf.keras.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.experimental.htm">tf.keras.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.initializers.htm">tf.keras.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.layers.htm">tf.keras.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.losses.htm">tf.keras.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.metrics.htm">tf.keras.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.htm">tf.keras.mixed_precision</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.experimental.htm">tf.keras.mixed_precision.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.models.htm">tf.keras.models</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.htm">tf.keras.optimizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.schedules.htm">tf.keras.optimizers.schedules</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.htm">tf.keras.preprocessing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.image.htm">tf.keras.preprocessing.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.regularizers.htm">tf.keras.regularizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.utils.htm">tf.keras.utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.htm">tf.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.experimental.htm">tf.layers.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.linalg.htm">tf.linalg</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.htm">tf.lite</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.htm">tf.lite.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.htm">tf.lite.experimental.microfrontend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.htm">tf.lite.experimental.microfrontend.python</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.ops.htm">tf.lite.experimental.microfrontend.python.ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.nn.htm">tf.lite.experimental.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.logging.htm">tf.logging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.losses.htm">tf.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.math.htm">tf.math</a>
        </li>
				<li>
            <a href="../tensorflow/tf.metrics.htm">tf.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nest.htm">tf.nest</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nn.htm">tf.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.profiler.htm">tf.profiler</a>
        </li>
				<li>
            <a href="../tensorflow/tf.quantization.htm">tf.quantization</a>
        </li>
				<li>
            <a href="../tensorflow/tf.ragged.htm">tf.ragged</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.htm">tf.random</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.experimental.htm">tf.random.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.resource_loader.htm">tf.resource_loader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.htm">tf.saved_model</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.main_op.htm">tf.saved_model.main_op</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sets.htm">tf.sets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.signal.htm">tf.signal</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sparse.htm">tf.sparse</a>
        </li>
				<li>
            <a href="../tensorflow/tf.strings.htm">tf.strings</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.htm">tf.summary</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.experimental.htm">tf.summary.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sysconfig.htm">tf.sysconfig</a>
        </li>
				<li>
            <a href="../tensorflow/tf.test.htm">tf.test</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.htm">tf.tpu</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.experimental.htm">tf.tpu.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.htm">tf.train</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.experimental.htm">tf.train.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.user_ops.htm">tf.user_ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.htm">tf.xla</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.experimental.htm">tf.xla.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/TFRecordReader.htm">TFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/truncated_normal_initializer.htm">truncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/TypeSpec.htm">TypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/UnconnectedGradients.htm">UnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/uniform_unit_scaling_initializer.htm">uniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Variable.htm">Variable</a>
        </li>
				<li>
            <a href="../tensorflow/variable_scope.htm">variable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableAggregation.htm">VariableAggregation</a>
        </li>
				<li>
            <a href="../tensorflow/VariableScope.htm">VariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableSynchronization.htm">VariableSynchronization</a>
        </li>
				<li>
            <a href="../tensorflow/variance_scaling_initializer.htm">variance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/VarLenFeature.htm">VarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/WholeFileReader.htm">WholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/zeros_initializer.htm">zeros_initializer</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> Dimension</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow</p>
		<p><strong>Parent</strong> <a href="../LostTech.Gradient/PythonObjectContainer.htm">PythonObjectContainer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow/IDimension.htm">IDimension</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Represents the value of one dimension in a TensorShape. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow/Dimension.htm#__add__">__add__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__add___dyn">__add___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__div___dyn">__div___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__floordiv__">__floordiv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__floordiv__">__floordiv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__floordiv___dyn">__floordiv___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__ge___dyn">__ge___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__gt___dyn">__gt___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__index__">__index__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__index___dyn">__index___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__int__">__int__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__int___dyn">__int___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__le___dyn">__le___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__long__">__long__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__long___dyn">__long___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__lt___dyn">__lt___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__mod__">__mod__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__mod__">__mod__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__mod__">__mod__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__mod___dyn">__mod___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__mul___dyn">__mul___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__radd__">__radd__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__radd___dyn">__radd___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rdiv___dyn">__rdiv___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rfloordiv__">__rfloordiv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rfloordiv__">__rfloordiv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rfloordiv___dyn">__rfloordiv___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rmod__">__rmod__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rmod___dyn">__rmod___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rmul___dyn">__rmul___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rsub__">__rsub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rsub__">__rsub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rsub___dyn">__rsub___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rtruediv__">__rtruediv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__rtruediv___dyn">__rtruediv___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__sub__">__sub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__sub__">__sub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__sub__">__sub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__sub__">__sub__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__sub___dyn">__sub___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#__truediv__">__truediv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__truediv__">__truediv__</a></li>
				<li><a href="../tensorflow/Dimension.htm#__truediv___dyn">__truediv___dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with">assert_is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with">assert_is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with">assert_is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with">assert_is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with">assert_is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#assert_is_compatible_with_dyn">assert_is_compatible_with_dyn</a></li>
				<li><a href="../tensorflow/Dimension.htm#is_compatible_with">is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#is_compatible_with">is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#is_compatible_with">is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#is_compatible_with">is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#is_compatible_with">is_compatible_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with">merge_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with">merge_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with">merge_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with">merge_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with">merge_with</a></li>
				<li><a href="../tensorflow/Dimension.htm#merge_with_dyn">merge_with_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow/Dimension.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow/Dimension.htm#value">value</a></li>
				<li><a href="../tensorflow/Dimension.htm#value_dyn">value_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="__add__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__add__</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> other)
		</h4>
		<div class="content">Returns the sum of `self` and `other`. <p></p> Dimensions are summed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the sum of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m + n)
            tf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__add___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__add___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the sum of `self` and `other`. <p></p> Dimensions are summed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the sum of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m + n)
            tf.compat.v1.Dimension(m)    + tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) + tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__div___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__div___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">DEPRECATED: Use `__floordiv__` via `x // y` instead. <p></p> This function exists only for backwards compatibility purposes; new code
should use `__floordiv__` via the syntax `x // y`.  Using `x // y`
communicates clearly that the result rounds down, and is forward compatible
to Python 3. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__floordiv__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__floordiv__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns the quotient of `self` and `other` rounded down. <p></p> Dimensions are divided as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m // n)
            tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__floordiv__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__floordiv__</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Returns the quotient of `self` and `other` rounded down. <p></p> Dimensions are divided as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m // n)
            tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__floordiv___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__floordiv___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the quotient of `self` and `other` rounded down. <p></p> Dimensions are divided as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m // n)
            tf.compat.v1.Dimension(m)    // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) // tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__ge___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__ge___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns True if `self` is known to be greater than or equal to `other`. <p></p> Dimensions are compared as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The value of `self.value >= other.value` if both are known, otherwise
None. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>(tf.compat.v1.Dimension(m)    >= tf.compat.v1.Dimension(n))    == (m >= n)
            (tf.compat.v1.Dimension(m)    >= tf.compat.v1.Dimension(None)) == None
            (tf.compat.v1.Dimension(None) >= tf.compat.v1.Dimension(n))    == None
            (tf.compat.v1.Dimension(None) >= tf.compat.v1.Dimension(None)) == None </pre>
</div>
		</div>
	</div>
	<div id="__gt___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__gt___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns True if `self` is known to be greater than `other`. <p></p> Dimensions are compared as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The value of `self.value > other.value` if both are known, otherwise
None. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>(tf.compat.v1.Dimension(m)    > tf.compat.v1.Dimension(n))    == (m > n)
            (tf.compat.v1.Dimension(m)    > tf.compat.v1.Dimension(None)) == None
            (tf.compat.v1.Dimension(None) > tf.compat.v1.Dimension(n))    == None
            (tf.compat.v1.Dimension(None) > tf.compat.v1.Dimension(None)) == None </pre>
</div>
		</div>
	</div>
	<div id="__index__" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>__index__</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__index___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__index___dyn</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__int__" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>__int__</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__int___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__int___dyn</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__le___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__le___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns True if `self` is known to be less than or equal to `other`. <p></p> Dimensions are compared as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The value of `self.value <= other.value` if both are known, otherwise
None. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>(tf.compat.v1.Dimension(m)    <= tf.compat.v1.Dimension(n))    == (m <= n)
            (tf.compat.v1.Dimension(m)    <= tf.compat.v1.Dimension(None)) == None
            (tf.compat.v1.Dimension(None) <= tf.compat.v1.Dimension(n))    == None
            (tf.compat.v1.Dimension(None) <= tf.compat.v1.Dimension(None)) == None </pre>
</div>
		</div>
	</div>
	<div id="__long__" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>__long__</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__long___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__long___dyn</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="__lt___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__lt___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns True if `self` is known to be less than `other`. <p></p> Dimensions are compared as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The value of `self.value < other.value` if both are known, otherwise
None. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>(tf.compat.v1.Dimension(m)    < tf.compat.v1.Dimension(n))    == (m < n)
            (tf.compat.v1.Dimension(m)    < tf.compat.v1.Dimension(None)) == None
            (tf.compat.v1.Dimension(None) < tf.compat.v1.Dimension(n))    == None
            (tf.compat.v1.Dimension(None) < tf.compat.v1.Dimension(None)) == None </pre>
</div>
		</div>
	</div>
	<div id="__mod__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__mod__</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Returns `self` modulo `other`. <p></p> Dimension moduli are computed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is `self` modulo `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m % n)
            tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__mod__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__mod__</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> other)
		</h4>
		<div class="content">Returns `self` modulo `other`. <p></p> Dimension moduli are computed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is `self` modulo `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m % n)
            tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__mod__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__mod__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns `self` modulo `other`. <p></p> Dimension moduli are computed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is `self` modulo `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m % n)
            tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__mod___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__mod___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns `self` modulo `other`. <p></p> Dimension moduli are computed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is `self` modulo `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m % n)
            tf.compat.v1.Dimension(m)    % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) % tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__mul___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__mul___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the product of `self` and `other`. <p></p> Dimensions are summed as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the product of `self` and `other`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    * tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m * n)
            tf.compat.v1.Dimension(m)    * tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) * tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) * tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__radd__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__radd__</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> other)
		</h4>
		<div class="content">Returns the sum of `other` and `self`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the sum of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__radd___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__radd___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the sum of `other` and `self`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the sum of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rdiv___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rdiv___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'int' and 'Dimension'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="__rfloordiv__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__rfloordiv__</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> other)
		</h4>
		<div class="content">Returns the quotient of `other` and `self` rounded down. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rfloordiv__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__rfloordiv__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns the quotient of `other` and `self` rounded down. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rfloordiv___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rfloordiv___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the quotient of `other` and `self` rounded down. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Dimension` whose value is the integer quotient of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rmod__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__rmod__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns `other` modulo `self`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is `other` modulo `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rmod___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rmod___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns `other` modulo `self`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is `other` modulo `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rmul___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rmul___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the product of `self` and `other`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the product of `self` and `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rsub__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__rsub__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns the subtraction of `self` from `other`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `self` from `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rsub__" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>__rsub__</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> other)
		</h4>
		<div class="content">Returns the subtraction of `self` from `other`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Dimension.htm">Dimension</a></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `self` from `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rsub___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rsub___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the subtraction of `self` from `other`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `self` from `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="__rtruediv__" class="method">
		<h4>
			<span title="System.void">void</span> <strong>__rtruediv__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'int' and 'Dimension'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="__rtruediv___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__rtruediv___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'int' and 'Dimension'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="__sub__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__sub__</strong>(<a href="../numpy/ndarray.htm">ndarray</a> other)
		</h4>
		<div class="content">Returns the subtraction of `other` from `self`. <p></p> Dimensions are subtracted as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `other` from `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m - n)
            tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__sub__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__sub__</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Returns the subtraction of `other` from `self`. <p></p> Dimensions are subtracted as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `other` from `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m - n)
            tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__sub__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__sub__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns the subtraction of `other` from `self`. <p></p> Dimensions are subtracted as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `other` from `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m - n)
            tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__sub__" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__sub__</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> other)
		</h4>
		<div class="content">Returns the subtraction of `other` from `self`. <p></p> Dimensions are subtracted as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `other` from `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m - n)
            tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__sub___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__sub___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns the subtraction of `other` from `self`. <p></p> Dimensions are subtracted as follows: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension, or a value accepted by `as_dimension`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A Dimension whose value is the subtraction of `other` from `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(n)     ==
            tf.compat.v1.Dimension(m - n)
            tf.compat.v1.Dimension(m)    - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(n)     # equiv. to
            tf.compat.v1.Dimension(None)
            tf.compat.v1.Dimension(None) - tf.compat.v1.Dimension(None)  # equiv. to
            tf.compat.v1.Dimension(None) </pre>
</div>
		</div>
	</div>
	<div id="__truediv__" class="method">
		<h4>
			<span title="System.void">void</span> <strong>__truediv__</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'Dimension' and 'int'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="__truediv__" class="method">
		<h4>
			<span title="System.void">void</span> <strong>__truediv__</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'Dimension' and 'int'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="__truediv___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__truediv___dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Use `__floordiv__` via `x // y` instead. <p></p> This function exists only to have a better error message. Instead of:
`TypeError: unsupported operand type(s) for /: 'Dimension' and 'int'`,
this function will explicitly call for usage of `//` instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `Dimension`. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assert_is_compatible_with</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Raises an exception if `other` is not compatible with this Dimension. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assert_is_compatible_with</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> other)
		</h4>
		<div class="content">Raises exception if `self` and `other` do not represent the same shape. <p></p> This method can be used to assert that there exists a shape that both
`self` and `other` represent. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assert_is_compatible_with</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Raises exception if `self` and `other` do not represent the same shape. <p></p> This method can be used to assert that there exists a shape that both
`self` and `other` represent. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assert_is_compatible_with</strong>(<a href="../tensorflow/TensorShape.htm">TensorShape</a> other)
		</h4>
		<div class="content">Raises exception if `self` and `other` do not represent the same shape. <p></p> This method can be used to assert that there exists a shape that both
`self` and `other` represent. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorShape.htm">TensorShape</a></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assert_is_compatible_with</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Raises exception if `self` and `other` do not represent the same shape. <p></p> This method can be used to assert that there exists a shape that both
`self` and `other` represent. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assert_is_compatible_with_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assert_is_compatible_with_dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Raises exception if `self` and `other` do not represent the same shape. <p></p> This method can be used to assert that there exists a shape that both
`self` and `other` represent. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="is_compatible_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_compatible_with</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> other)
		</h4>
		<div class="content">Returns true if `other` is compatible with this Dimension. <p></p> Two known Dimensions are compatible if they have the same value.
An unknown Dimension is compatible with all other Dimensions. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>True if this Dimension and `other` are compatible. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_compatible_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_compatible_with</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Returns true if `other` is compatible with this Dimension. <p></p> Two known Dimensions are compatible if they have the same value.
An unknown Dimension is compatible with all other Dimensions. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>True if this Dimension and `other` are compatible. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_compatible_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_compatible_with</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> other)
		</h4>
		<div class="content">Returns true if `other` is compatible with this Dimension. <p></p> Two known Dimensions are compatible if they have the same value.
An unknown Dimension is compatible with all other Dimensions. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> other
						</dt>
						<dd>Another Dimension. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>True if this Dimension and `other` are compatible. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_compatible_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_compatible_with</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns True iff `self` is compatible with `other`. <p></p> Two possibly-partially-defined shapes are compatible if there
exists a fully-defined shape that both shapes can represent. Thus,
compatibility allows the shape inference code to reason about
partially-defined shapes. For example: <p></p> * TensorShape(None) is compatible with all shapes. <p></p> * TensorShape([None, None]) is compatible with all two-dimensional
shapes, such as TensorShape([32, 784]), and also TensorShape(None). It is
not compatible with, for example, TensorShape([None]) or
TensorShape([None, None, None]). <p></p> * TensorShape([32, None]) is compatible with all two-dimensional shapes
with size 32 in the 0th dimension, and also TensorShape([None, None])
and TensorShape(None). It is not compatible with, for example,
TensorShape([32]), TensorShape([32, None, 1]) or TensorShape([64, None]). <p></p> * TensorShape([32, 784]) is compatible with itself, and also
TensorShape([32, None]), TensorShape([None, 784]), TensorShape([None,
None]) and TensorShape(None). It is not compatible with, for example,
TensorShape([32, 1, 784]) or TensorShape([None]). <p></p> The compatibility relation is reflexive and symmetric, but not
transitive. For example, TensorShape([32, 784]) is compatible with
TensorShape(None), and TensorShape(None) is compatible with
TensorShape([4, 4]), but TensorShape([32, 784]) is not compatible with
TensorShape([4, 4]). 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>True iff `self` is compatible with `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="is_compatible_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_compatible_with</strong>(<a href="../tensorflow/TensorShape.htm">TensorShape</a> other)
		</h4>
		<div class="content">Returns True iff `self` is compatible with `other`. <p></p> Two possibly-partially-defined shapes are compatible if there
exists a fully-defined shape that both shapes can represent. Thus,
compatibility allows the shape inference code to reason about
partially-defined shapes. For example: <p></p> * TensorShape(None) is compatible with all shapes. <p></p> * TensorShape([None, None]) is compatible with all two-dimensional
shapes, such as TensorShape([32, 784]), and also TensorShape(None). It is
not compatible with, for example, TensorShape([None]) or
TensorShape([None, None, None]). <p></p> * TensorShape([32, None]) is compatible with all two-dimensional shapes
with size 32 in the 0th dimension, and also TensorShape([None, None])
and TensorShape(None). It is not compatible with, for example,
TensorShape([32]), TensorShape([32, None, 1]) or TensorShape([64, None]). <p></p> * TensorShape([32, 784]) is compatible with itself, and also
TensorShape([32, None]), TensorShape([None, 784]), TensorShape([None,
None]) and TensorShape(None). It is not compatible with, for example,
TensorShape([32, 1, 784]) or TensorShape([None]). <p></p> The compatibility relation is reflexive and symmetric, but not
transitive. For example, TensorShape([32, 784]) is compatible with
TensorShape(None), and TensorShape(None) is compatible with
TensorShape([4, 4]), but TensorShape([32, 784]) is not compatible with
TensorShape([4, 4]). 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorShape.htm">TensorShape</a></code> other
						</dt>
						<dd>Another TensorShape. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>True iff `self` is compatible with `other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with</strong>(<a href="../tensorflow/TensorShape.htm">TensorShape</a> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorShape.htm">TensorShape</a></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with</strong>(<span title="System.int">int</span> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_with_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_with_dyn</strong>(<span title="System.object">object</span> other)
		</h4>
		<div class="content">Returns a `TensorShape` combining the information in `self` and `other`. <p></p> The dimensions in `self` and `other` are merged elementwise,
according to the rules defined for `Dimension.merge_with()`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> other
						</dt>
						<dd>Another `TensorShape`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `TensorShape` containing the combined information of `self` and
`other`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="value" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>value</strong> get; 
		</h4>
		<div class="content">The value of this dimension, or None if it is unknown. 

		</div>
	</div>
	<div id="value_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>value_dyn</strong> get; 
		</h4>
		<div class="content">The value of this dimension, or None if it is unknown. 

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>