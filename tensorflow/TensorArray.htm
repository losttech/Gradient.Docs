<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>TensorArray - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow/AggregationMethod.htm">AggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulator.htm">ConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ConditionalAccumulatorBase.htm">ConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/constant_initializer.htm">constant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/CriticalSection.htm">CriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/DeviceSpec.htm">DeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Dimension.htm">Dimension</a>
        </li>
				<li>
            <a href="../tensorflow/DType.htm">DType</a>
        </li>
				<li>
            <a href="../tensorflow/FIFOQueue.htm">FIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenFeature.htm">FixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLengthRecordReader.htm">FixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/FixedLenSequenceFeature.htm">FixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_normal_initializer.htm">glorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/glorot_uniform_initializer.htm">glorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/GradientTape.htm">GradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.htm">Graph</a>
        </li>
				<li>
            <a href="../tensorflow/Graph._ControlDependenciesController.htm">Graph._ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/Graph.I_ControlDependenciesController.htm">Graph.I_ControlDependenciesController</a>
        </li>
				<li>
            <a href="../tensorflow/GraphKeys.htm">GraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/HeadingAxes.htm">HeadingAxes</a>
        </li>
				<li>
            <a href="../tensorflow/IAggregationMethod.htm">IAggregationMethod</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulator.htm">IConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/IConditionalAccumulatorBase.htm">IConditionalAccumulatorBase</a>
        </li>
				<li>
            <a href="../tensorflow/Iconstant_initializer.htm">Iconstant_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ICriticalSection.htm">ICriticalSection</a>
        </li>
				<li>
            <a href="../tensorflow/IdentityReader.htm">IdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IDeviceSpec.htm">IDeviceSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IDimension.htm">IDimension</a>
        </li>
				<li>
            <a href="../tensorflow/IDType.htm">IDType</a>
        </li>
				<li>
            <a href="../tensorflow/IFIFOQueue.htm">IFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenFeature.htm">IFixedLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLengthRecordReader.htm">IFixedLengthRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/IFixedLenSequenceFeature.htm">IFixedLenSequenceFeature</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_normal_initializer.htm">Iglorot_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Iglorot_uniform_initializer.htm">Iglorot_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IGradientTape.htm">IGradientTape</a>
        </li>
				<li>
            <a href="../tensorflow/IGraph.htm">IGraph</a>
        </li>
				<li>
            <a href="../tensorflow/IGraphKeys.htm">IGraphKeys</a>
        </li>
				<li>
            <a href="../tensorflow/IIdentityReader.htm">IIdentityReader</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlices.htm">IIndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IIndexedSlicesSpec.htm">IIndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IInteractiveSession.htm">IInteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/ILazyLoader.htm">ILazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/ILMDBReader.htm">ILMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/IModule.htm">IModule</a>
        </li>
				<li>
            <a href="../tensorflow/Iname_scope.htm">Iname_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a>
        </li>
				<li>
            <a href="../tensorflow/IndexedSlicesSpec.htm">IndexedSlicesSpec</a>
        </li>
				<li>
            <a href="../tensorflow/InteractiveSession.htm">InteractiveSession</a>
        </li>
				<li>
            <a href="../tensorflow/Iones_initializer.htm">Iones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IOperation.htm">IOperation</a>
        </li>
				<li>
            <a href="../tensorflow/IOpError.htm">IOpError</a>
        </li>
				<li>
            <a href="../tensorflow/IOptionalSpec.htm">IOptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Iorthogonal_initializer.htm">Iorthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IPaddingFIFOQueue.htm">IPaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IPriorityQueue.htm">IPriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IQueueBase.htm">IQueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensor.htm">IRaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/IRaggedTensorSpec.htm">IRaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_normal_initializer.htm">Irandom_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Irandom_uniform_initializer.htm">Irandom_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IRandomShuffleQueue.htm">IRandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/IReaderBase.htm">IReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/IRegisterGradient.htm">IRegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/ISession.htm">ISession</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseConditionalAccumulator.htm">ISparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseFeature.htm">ISparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensor.htm">ISparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorSpec.htm">ISparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ISparseTensorValue.htm">ISparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/ITensor.htm">ITensor</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArray.htm">ITensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorArraySpec.htm">ITensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorShape.htm">ITensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/ITensorSpec.htm">ITensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/ITextLineReader.htm">ITextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/ITFRecordReader.htm">ITFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/Itruncated_normal_initializer.htm">Itruncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/ITypeSpec.htm">ITypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/IUnconnectedGradients.htm">IUnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/Iuniform_unit_scaling_initializer.htm">Iuniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVariable.htm">IVariable</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariable_scope.htm">Ivariable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/IVariableScope.htm">IVariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/Ivariance_scaling_initializer.htm">Ivariance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/IVarLenFeature.htm">IVarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/IWholeFileReader.htm">IWholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/Izeros_initializer.htm">Izeros_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/LazyLoader.htm">LazyLoader</a>
        </li>
				<li>
            <a href="../tensorflow/LMDBReader.htm">LMDBReader</a>
        </li>
				<li>
            <a href="../tensorflow/Module.htm">Module</a>
        </li>
				<li>
            <a href="../tensorflow/name_scope.htm">name_scope</a>
        </li>
				<li>
            <a href="../tensorflow/ones_initializer.htm">ones_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.htm">Operation</a>
        </li>
				<li>
            <a href="../tensorflow/Operation._InputList.htm">Operation._InputList</a>
        </li>
				<li>
            <a href="../tensorflow/Operation.I_InputList.htm">Operation.I_InputList</a>
        </li>
				<li>
            <a href="../tensorflow/OpError.htm">OpError</a>
        </li>
				<li>
            <a href="../tensorflow/OptionalSpec.htm">OptionalSpec</a>
        </li>
				<li>
            <a href="../tensorflow/orthogonal_initializer.htm">orthogonal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/PaddingFIFOQueue.htm">PaddingFIFOQueue</a>
        </li>
				<li>
            <a href="../tensorflow/PriorityQueue.htm">PriorityQueue</a>
        </li>
				<li>
            <a href="../tensorflow/QueueBase.htm">QueueBase</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensor.htm">RaggedTensor</a>
        </li>
				<li>
            <a href="../tensorflow/RaggedTensorSpec.htm">RaggedTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/random_normal_initializer.htm">random_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/random_uniform_initializer.htm">random_uniform_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/RandomShuffleQueue.htm">RandomShuffleQueue</a>
        </li>
				<li>
            <a href="../tensorflow/ReaderBase.htm">ReaderBase</a>
        </li>
				<li>
            <a href="../tensorflow/RegisterGradient.htm">RegisterGradient</a>
        </li>
				<li>
            <a href="../tensorflow/Session.htm">Session</a>
        </li>
				<li>
            <a href="../tensorflow/SparseConditionalAccumulator.htm">SparseConditionalAccumulator</a>
        </li>
				<li>
            <a href="../tensorflow/SparseFeature.htm">SparseFeature</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensor.htm">SparseTensor</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorSpec.htm">SparseTensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/SparseTensorValue.htm">SparseTensorValue</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor.htm">Tensor</a>
        </li>
				<li>
            <a href="../tensorflow/Tensor`1.htm">Tensor&lt;T&gt;</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArray.htm" class="current">TensorArray</a>
        </li>
				<li>
            <a href="../tensorflow/TensorArraySpec.htm">TensorArraySpec</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimension.htm">TensorDimension</a>
        </li>
				<li>
            <a href="../tensorflow/TensorDimensionSlice.htm">TensorDimensionSlice</a>
        </li>
				<li>
            <a href="../tensorflow/TensorShape.htm">TensorShape</a>
        </li>
				<li>
            <a href="../tensorflow/TensorSpec.htm">TensorSpec</a>
        </li>
				<li>
            <a href="../tensorflow/TextLineReader.htm">TextLineReader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.htm">tf</a>
        </li>
				<li>
            <a href="../tensorflow/tf.audio.htm">tf.audio</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.htm">tf.autograph</a>
        </li>
				<li>
            <a href="../tensorflow/tf.autograph.experimental.htm">tf.autograph.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.bitwise.htm">tf.bitwise</a>
        </li>
				<li>
            <a href="../tensorflow/tf.compat.htm">tf.compat</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.htm">tf.config</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.experimental.htm">tf.config.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.optimizer.htm">tf.config.optimizer</a>
        </li>
				<li>
            <a href="../tensorflow/tf.config.threading.htm">tf.config.threading</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.htm">tf.data</a>
        </li>
				<li>
            <a href="../tensorflow/tf.data.experimental.htm">tf.data.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.debugging.htm">tf.debugging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distribute.htm">tf.distribute</a>
        </li>
				<li>
            <a href="../tensorflow/tf.distributions.htm">tf.distributions</a>
        </li>
				<li>
            <a href="../tensorflow/tf.errors.htm">tf.errors</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.htm">tf.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.experimental.htm">tf.estimator.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.export.htm">tf.estimator.export</a>
        </li>
				<li>
            <a href="../tensorflow/tf.estimator.inputs.htm">tf.estimator.inputs</a>
        </li>
				<li>
            <a href="../tensorflow/tf.experimental.htm">tf.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.feature_column.htm">tf.feature_column</a>
        </li>
				<li>
            <a href="../tensorflow/tf.gfile.htm">tf.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.graph_util.htm">tf.graph_util</a>
        </li>
				<li>
            <a href="../tensorflow/tf.image.htm">tf.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.initializers.htm">tf.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.htm">tf.io</a>
        </li>
				<li>
            <a href="../tensorflow/tf.io.gfile.htm">tf.io.gfile</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.htm">tf.keras</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.activations.htm">tf.keras.activations</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.htm">tf.keras.applications</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.densenet.htm">tf.keras.applications.densenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.imagenet_utils.htm">tf.keras.applications.imagenet_utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_resnet_v2.htm">tf.keras.applications.inception_resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.inception_v3.htm">tf.keras.applications.inception_v3</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet.htm">tf.keras.applications.mobilenet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.mobilenet_v2.htm">tf.keras.applications.mobilenet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.nasnet.htm">tf.keras.applications.nasnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet.htm">tf.keras.applications.resnet</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.resnet_v2.htm">tf.keras.applications.resnet_v2</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg16.htm">tf.keras.applications.vgg16</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.vgg19.htm">tf.keras.applications.vgg19</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.applications.xception.htm">tf.keras.applications.xception</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.backend.htm">tf.keras.backend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.constraints.htm">tf.keras.constraints</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.htm">tf.keras.datasets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.boston_housing.htm">tf.keras.datasets.boston_housing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar10.htm">tf.keras.datasets.cifar10</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.cifar100.htm">tf.keras.datasets.cifar100</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.fashion_mnist.htm">tf.keras.datasets.fashion_mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.imdb.htm">tf.keras.datasets.imdb</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.mnist.htm">tf.keras.datasets.mnist</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.datasets.reuters.htm">tf.keras.datasets.reuters</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.estimator.htm">tf.keras.estimator</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.experimental.htm">tf.keras.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.initializers.htm">tf.keras.initializers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.layers.htm">tf.keras.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.losses.htm">tf.keras.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.metrics.htm">tf.keras.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.htm">tf.keras.mixed_precision</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.mixed_precision.experimental.htm">tf.keras.mixed_precision.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.models.htm">tf.keras.models</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.htm">tf.keras.optimizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.optimizers.schedules.htm">tf.keras.optimizers.schedules</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.htm">tf.keras.preprocessing</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.preprocessing.image.htm">tf.keras.preprocessing.image</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.regularizers.htm">tf.keras.regularizers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.keras.utils.htm">tf.keras.utils</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.htm">tf.layers</a>
        </li>
				<li>
            <a href="../tensorflow/tf.layers.experimental.htm">tf.layers.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.linalg.htm">tf.linalg</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.htm">tf.lite</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.htm">tf.lite.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.htm">tf.lite.experimental.microfrontend</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.htm">tf.lite.experimental.microfrontend.python</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.microfrontend.python.ops.htm">tf.lite.experimental.microfrontend.python.ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.lite.experimental.nn.htm">tf.lite.experimental.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.logging.htm">tf.logging</a>
        </li>
				<li>
            <a href="../tensorflow/tf.losses.htm">tf.losses</a>
        </li>
				<li>
            <a href="../tensorflow/tf.math.htm">tf.math</a>
        </li>
				<li>
            <a href="../tensorflow/tf.metrics.htm">tf.metrics</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nest.htm">tf.nest</a>
        </li>
				<li>
            <a href="../tensorflow/tf.nn.htm">tf.nn</a>
        </li>
				<li>
            <a href="../tensorflow/tf.profiler.htm">tf.profiler</a>
        </li>
				<li>
            <a href="../tensorflow/tf.quantization.htm">tf.quantization</a>
        </li>
				<li>
            <a href="../tensorflow/tf.ragged.htm">tf.ragged</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.htm">tf.random</a>
        </li>
				<li>
            <a href="../tensorflow/tf.random.experimental.htm">tf.random.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.resource_loader.htm">tf.resource_loader</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.htm">tf.saved_model</a>
        </li>
				<li>
            <a href="../tensorflow/tf.saved_model.main_op.htm">tf.saved_model.main_op</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sets.htm">tf.sets</a>
        </li>
				<li>
            <a href="../tensorflow/tf.signal.htm">tf.signal</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sparse.htm">tf.sparse</a>
        </li>
				<li>
            <a href="../tensorflow/tf.strings.htm">tf.strings</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.htm">tf.summary</a>
        </li>
				<li>
            <a href="../tensorflow/tf.summary.experimental.htm">tf.summary.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.sysconfig.htm">tf.sysconfig</a>
        </li>
				<li>
            <a href="../tensorflow/tf.test.htm">tf.test</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.htm">tf.tpu</a>
        </li>
				<li>
            <a href="../tensorflow/tf.tpu.experimental.htm">tf.tpu.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.htm">tf.train</a>
        </li>
				<li>
            <a href="../tensorflow/tf.train.experimental.htm">tf.train.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/tf.user_ops.htm">tf.user_ops</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.htm">tf.xla</a>
        </li>
				<li>
            <a href="../tensorflow/tf.xla.experimental.htm">tf.xla.experimental</a>
        </li>
				<li>
            <a href="../tensorflow/TFRecordReader.htm">TFRecordReader</a>
        </li>
				<li>
            <a href="../tensorflow/truncated_normal_initializer.htm">truncated_normal_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/TypeSpec.htm">TypeSpec</a>
        </li>
				<li>
            <a href="../tensorflow/UnconnectedGradients.htm">UnconnectedGradients</a>
        </li>
				<li>
            <a href="../tensorflow/uniform_unit_scaling_initializer.htm">uniform_unit_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/Variable.htm">Variable</a>
        </li>
				<li>
            <a href="../tensorflow/variable_scope.htm">variable_scope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableAggregation.htm">VariableAggregation</a>
        </li>
				<li>
            <a href="../tensorflow/VariableScope.htm">VariableScope</a>
        </li>
				<li>
            <a href="../tensorflow/VariableSynchronization.htm">VariableSynchronization</a>
        </li>
				<li>
            <a href="../tensorflow/variance_scaling_initializer.htm">variance_scaling_initializer</a>
        </li>
				<li>
            <a href="../tensorflow/VarLenFeature.htm">VarLenFeature</a>
        </li>
				<li>
            <a href="../tensorflow/WholeFileReader.htm">WholeFileReader</a>
        </li>
				<li>
            <a href="../tensorflow/zeros_initializer.htm">zeros_initializer</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> TensorArray</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow</p>
		<p><strong>Parent</strong> <a href="../LostTech.Gradient/PythonObjectContainer.htm">PythonObjectContainer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow/ITensorArray.htm">ITensorArray</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Class wrapping dynamic-sized, per-time-step, write-once Tensor arrays. <p></p> This class is meant to be used with dynamic iteration primitives such as
`while_loop` and `map_fn`.  It supports gradient back-propagation via special
"flow" control flow dependencies. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow/TensorArray.htm#close">close</a></li>
				<li><a href="../tensorflow/TensorArray.htm#close_dyn">close_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#concat">concat</a></li>
				<li><a href="../tensorflow/TensorArray.htm#concat_dyn">concat_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#gather">gather</a></li>
				<li><a href="../tensorflow/TensorArray.htm#gather">gather</a></li>
				<li><a href="../tensorflow/TensorArray.htm#gather_dyn">gather_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#grad">grad</a></li>
				<li><a href="../tensorflow/TensorArray.htm#grad_dyn">grad_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#identity">identity</a></li>
				<li><a href="../tensorflow/TensorArray.htm#identity_dyn">identity_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#NewDyn">NewDyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#read">read</a></li>
				<li><a href="../tensorflow/TensorArray.htm#read">read</a></li>
				<li><a href="../tensorflow/TensorArray.htm#read">read</a></li>
				<li><a href="../tensorflow/TensorArray.htm#read">read</a></li>
				<li><a href="../tensorflow/TensorArray.htm#scatter">scatter</a></li>
				<li><a href="../tensorflow/TensorArray.htm#scatter">scatter</a></li>
				<li><a href="../tensorflow/TensorArray.htm#scatter">scatter</a></li>
				<li><a href="../tensorflow/TensorArray.htm#scatter">scatter</a></li>
				<li><a href="../tensorflow/TensorArray.htm#scatter_dyn">scatter_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split">split</a></li>
				<li><a href="../tensorflow/TensorArray.htm#split_dyn">split_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#stack">stack</a></li>
				<li><a href="../tensorflow/TensorArray.htm#stack_dyn">stack_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#unstack">unstack</a></li>
				<li><a href="../tensorflow/TensorArray.htm#unstack">unstack</a></li>
				<li><a href="../tensorflow/TensorArray.htm#unstack_dyn">unstack_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write">write</a></li>
				<li><a href="../tensorflow/TensorArray.htm#write_dyn">write_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow/TensorArray.htm#dtype">dtype</a></li>
				<li><a href="../tensorflow/TensorArray.htm#dtype_dyn">dtype_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#dynamic_size">dynamic_size</a></li>
				<li><a href="../tensorflow/TensorArray.htm#dynamic_size_dyn">dynamic_size_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#element_shape">element_shape</a></li>
				<li><a href="../tensorflow/TensorArray.htm#element_shape_dyn">element_shape_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#flow">flow</a></li>
				<li><a href="../tensorflow/TensorArray.htm#flow_dyn">flow_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#handle">handle</a></li>
				<li><a href="../tensorflow/TensorArray.htm#handle_dyn">handle_dyn</a></li>
				<li><a href="../tensorflow/TensorArray.htm#PythonObject">PythonObject</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="close" class="method">
		<h4>
			<span title="System.object">object</span> <strong>close</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Close the current TensorArray. <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="close_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>close_dyn</strong>(<span title="System.object">object</span> name)
		</h4>
		<div class="content">Close the current TensorArray. <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="concat" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>concat</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Return the values in the TensorArray as a concatenated `Tensor`. <p></p> All of the values must have been written, their ranks must match, and
and their shapes must all match for all dimensions except the first. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>All the tensors in the TensorArray concatenated into one tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="concat_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>concat_dyn</strong>(<span title="System.object">object</span> name)
		</h4>
		<div class="content">Return the values in the TensorArray as a concatenated `Tensor`. <p></p> All of the values must have been written, their ranks must match, and
and their shapes must all match for all dimensions except the first. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>All the tensors in the TensorArray concatenated into one tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="gather" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>gather</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> indices, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Return selected values in the TensorArray as a packed `Tensor`. <p></p> All of selected values must have been written and their shapes
must all match. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> indices
						</dt>
						<dd>A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensors in the `TensorArray` selected by `indices`, packed into one
tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="gather" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>gather</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> indices, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Return selected values in the TensorArray as a packed `Tensor`. <p></p> All of selected values must have been written and their shapes
must all match. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> indices
						</dt>
						<dd>A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensors in the `TensorArray` selected by `indices`, packed into one
tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="gather_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>gather_dyn</strong>(<span title="System.object">object</span> indices, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Return selected values in the TensorArray as a packed `Tensor`. <p></p> All of selected values must have been written and their shapes
must all match. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> indices
						</dt>
						<dd>A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The tensors in the `TensorArray` selected by `indices`, packed into one
tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="grad" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>grad</strong>(<span title="System.string">string</span> source, <span title="System.object">object</span> flow, <span title="System.string">string</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="grad_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>grad_dyn</strong>(<span title="System.object">object</span> source, <span title="System.object">object</span> flow, <span title="System.object">object</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="identity" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>identity</strong>()
		</h4>
		<div class="content">Returns a TensorArray with the same content and properties. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the control dependencies
from the contexts will become control dependencies for writes, reads, etc.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="identity_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>identity_dyn</strong>()
		</h4>
		<div class="content">Returns a TensorArray with the same content and properties. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the control dependencies
from the contexts will become control dependencies for writes, reads, etc.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="read" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>read</strong>(<span title="System.object">object</span> index, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Read the value at location `index` in the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> index
						</dt>
						<dd>0-D.  int32 tensor with the index to read from. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensor at index `index`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="read" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>read</strong>(<span title="System.int">int</span> index, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Read the value at location `index` in the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> index
						</dt>
						<dd>0-D.  int32 tensor with the index to read from. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensor at index `index`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="read" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>read</strong>(<a href="../tensorflow/Dimension.htm">Dimension</a> index, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Read the value at location `index` in the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Dimension.htm">Dimension</a></code> index
						</dt>
						<dd>0-D.  int32 tensor with the index to read from. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensor at index `index`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="read" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>read</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> index, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Read the value at location `index` in the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> index
						</dt>
						<dd>0-D.  int32 tensor with the index to read from. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>The tensor at index `index`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="scatter" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>scatter</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> indices, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Scatter the values of a `Tensor` in specific indices of a `TensorArray`. <p></p> Args:
indices: A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`.
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unpack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the scatter occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="scatter" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>scatter</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> indices, <span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Scatter the values of a `Tensor` in specific indices of a `TensorArray`. <p></p> Args:
indices: A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`.
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unpack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the scatter occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="scatter" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>scatter</strong>(<span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> indices, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Scatter the values of a `Tensor` in specific indices of a `TensorArray`. <p></p> Args:
indices: A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`.
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unpack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the scatter occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="scatter" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>scatter</strong>(<span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> indices, <span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Scatter the values of a `Tensor` in specific indices of a `TensorArray`. <p></p> Args:
indices: A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`.
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unpack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the scatter occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="scatter_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>scatter_dyn</strong>(<span title="System.object">object</span> indices, <span title="System.object">object</span> value, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Scatter the values of a `Tensor` in specific indices of a `TensorArray`. <p></p> Args:
indices: A `1-D` `Tensor` taking values in `[0, max_value)`.  If
the `TensorArray` is not dynamic, `max_value=size()`.
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unpack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the scatter occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> value, <span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.double">double</span> value, <span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> value, <span title="System.int">int</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> value, <span title="System.Collections.Generic.IEnumerable<int>">IEnumerable&lt;int&gt;</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.double">double</span> value, <span title="System.int">int</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> value, <span title="System.int">int</span> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> value, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> value, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>split</strong>(<span title="System.double">double</span> value, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> lengths, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="split_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>split_dyn</strong>(<span title="System.object">object</span> value, <span title="System.object">object</span> lengths, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Split the values of a `Tensor` into the TensorArray. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to split.
lengths: 1-D.  int32 vector with the lengths to use when splitting
`value` along its first dimension.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the split occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="stack" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>stack</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Return the values in the TensorArray as a stacked `Tensor`. <p></p> All of the values must have been written and their shapes must all match.
If input shapes have rank-`R`, then output shape will have rank-`(R+1)`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>All the tensors in the TensorArray stacked into one tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="stack_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>stack_dyn</strong>(<span title="System.object">object</span> name)
		</h4>
		<div class="content">Return the values in the TensorArray as a stacked `Tensor`. <p></p> All of the values must have been written and their shapes must all match.
If input shapes have rank-`R`, then output shape will have rank-`(R+1)`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>All the tensors in the TensorArray stacked into one tensor. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="unstack" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>unstack</strong>(<span title="System.Collections.Generic.IEnumerable<IGraphNodeBase>">IEnumerable&lt;IGraphNodeBase&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Unstack the values of a `Tensor` in the TensorArray. <p></p> If input value shapes have rank-`R`, then the output TensorArray will
contain elements whose shapes are rank-`(R-1)`. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unstack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the unstack occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="unstack" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>unstack</strong>(<span title="System.object">object</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Unstack the values of a `Tensor` in the TensorArray. <p></p> If input value shapes have rank-`R`, then the output TensorArray will
contain elements whose shapes are rank-`(R-1)`. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unstack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the unstack occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="unstack_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>unstack_dyn</strong>(<span title="System.object">object</span> value, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Unstack the values of a `Tensor` in the TensorArray. <p></p> If input value shapes have rank-`R`, then the output TensorArray will
contain elements whose shapes are rank-`(R-1)`. <p></p> Args:
value: (N+1)-D.  Tensor of type `dtype`.  The Tensor to unstack.
name: A name for the operation (optional). <p></p> Returns:
A new TensorArray object with flow that ensures the unstack occurs.
Use this object all for subsequent operations. <p></p> Raises:
ValueError: if the shape inference fails. <p></p> <p></p> **NOTE** The output of this function should be used.  If it is not, a warning will be logged.  To mark the output as used, call its.mark_used() method. 




		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<a href="../tensorflow/TensorArray.htm">TensorArray</a> index, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<a href="../tensorflow/TensorArray.htm">TensorArray</a> index, <span title="System.object">object</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> index, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<span title="System.int">int</span> index, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> index, <span title="System.object">object</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>write</strong>(<span title="System.int">int</span> index, <span title="System.object">object</span> value, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.int">int</span></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/TensorArray.htm">TensorArray</a></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="write_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>write_dyn</strong>(<span title="System.object">object</span> index, <span title="System.object">object</span> value, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Write `value` into index `index` of the TensorArray. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> index
						</dt>
						<dd>0-D.  int32 scalar with the index to write to. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> value
						</dt>
						<dd>N-D.  Tensor of type `dtype`.  The Tensor to write to this index. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A new TensorArray object with flow that ensures the write occurs.
Use this object all for subsequent operations. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public static methods</h3>

	<div id="NewDyn" class="method">
		<h4>
			<a href="../tensorflow/TensorArray.htm">TensorArray</a> <strong>NewDyn</strong>(<span title="System.object">object</span> dtype, <span title="System.object">object</span> size, <span title="System.object">object</span> dynamic_size, <span title="System.object">object</span> clear_after_read, <span title="System.object">object</span> tensor_array_name, <span title="System.object">object</span> handle, <span title="System.object">object</span> flow, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> infer_shape, <span title="System.object">object</span> element_shape, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> colocate_with_first_write_call, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Construct a new TensorArray or wrap an existing TensorArray handle. <p></p> A note about the parameter `name`: <p></p> The name of the `TensorArray` (even if passed in) is uniquified: each time
a new `TensorArray` is created at runtime it is assigned its own name for
the duration of the run.  This avoids name collisions if a `TensorArray`
is created within a `while_loop`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> dtype
						</dt>
						<dd>(required) data type of the TensorArray. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> size
						</dt>
						<dd>(optional) int32 scalar `Tensor`: the size of the TensorArray.
Required if handle is not provided. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> dynamic_size
						</dt>
						<dd>(optional) Python bool: If true, writes to the TensorArray
can grow the TensorArray past its initial size.  Default: False. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> clear_after_read
						</dt>
						<dd>Boolean (optional, default: True).  If True, clear
TensorArray values after reading them.  This disables read-many
semantics, but allows early release of memory. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> tensor_array_name
						</dt>
						<dd>(optional) Python string: the name of the TensorArray.
This is used when creating the TensorArray handle.  If this value is
set, handle should be None. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> handle
						</dt>
						<dd>(optional) A `Tensor` handle to an existing TensorArray.  If this
is set, tensor_array_name should be None. Only supported in graph mode. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> flow
						</dt>
						<dd>(optional) A float `Tensor` scalar coming from an existing
`TensorArray.flow`. Only supported in graph mode. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> infer_shape
						</dt>
						<dd>(optional, default: True) If True, shape inference
is enabled.  In this case, all elements must have the same shape. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> element_shape
						</dt>
						<dd>(optional, default: None) A `TensorShape` object specifying
the shape constraints of each of the elements of the TensorArray.
Need not be fully defined. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> colocate_with_first_write_call
						</dt>
						<dd>If `True`, the TensorArray will be
colocated on the same device as the Tensor used on its first write
(write operations include `write`, `unstack`, and `split`).  If `False`,
the TensorArray will be placed on the device determined by the
device context available during its initialization. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>A name for the operation (optional). 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="dtype" class="method">
		<h4>
			<a href="../tensorflow/DType.htm">DType</a> <strong>dtype</strong> get; 
		</h4>
		<div class="content">The data type of this TensorArray. 

		</div>
	</div>
	<div id="dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype_dyn</strong> get; 
		</h4>
		<div class="content">The data type of this TensorArray. 

		</div>
	</div>
	<div id="dynamic_size" class="method">
		<h4>
			<span title="System.Nullable<bool>">Nullable&lt;bool&gt;</span> <strong>dynamic_size</strong> get; 
		</h4>
		<div class="content">Python bool; if `True` the TensorArray can grow dynamically. 

		</div>
	</div>
	<div id="dynamic_size_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dynamic_size_dyn</strong> get; 
		</h4>
		<div class="content">Python bool; if `True` the TensorArray can grow dynamically. 

		</div>
	</div>
	<div id="element_shape" class="method">
		<h4>
			<span title="System.object">object</span> <strong>element_shape</strong> get; 
		</h4>
		<div class="content">The <a href="..\tf\TensorShape.md"><code>tf.TensorShape</code></a> of elements in this TensorArray. 

		</div>
	</div>
	<div id="element_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>element_shape_dyn</strong> get; 
		</h4>
		<div class="content">The <a href="..\tf\TensorShape.md"><code>tf.TensorShape</code></a> of elements in this TensorArray. 

		</div>
	</div>
	<div id="flow" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>flow</strong> get; 
		</h4>
		<div class="content">The flow `Tensor` forcing ops leading to this TensorArray state. 

		</div>
	</div>
	<div id="flow_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>flow_dyn</strong> get; 
		</h4>
		<div class="content">The flow `Tensor` forcing ops leading to this TensorArray state. 

		</div>
	</div>
	<div id="handle" class="method">
		<h4>
			<span title="System.object">object</span> <strong>handle</strong> get; 
		</h4>
		<div class="content">The reference to the TensorArray. 

		</div>
	</div>
	<div id="handle_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>handle_dyn</strong> get; 
		</h4>
		<div class="content">The reference to the TensorArray. 

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>