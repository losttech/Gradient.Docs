<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>BasicDecoder - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.contrib.seq2seq</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.contrib.seq2seq/_BaseAttentionMechanism.htm">_BaseAttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/_BaseAttentionMechanismV2.htm">_BaseAttentionMechanismV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/_BaseMonotonicAttentionMechanism.htm">_BaseMonotonicAttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/_BaseMonotonicAttentionMechanismV2.htm">_BaseMonotonicAttentionMechanismV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/AttentionMechanism.htm">AttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/AttentionWrapper.htm">AttentionWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/AttentionWrapperState.htm">AttentionWrapperState</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BahdanauAttention.htm">BahdanauAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BahdanauAttentionV2.htm">BahdanauAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BahdanauMonotonicAttention.htm">BahdanauMonotonicAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BahdanauMonotonicAttentionV2.htm">BahdanauMonotonicAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BaseDecoder.htm">BaseDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm" class="current">BasicDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BasicDecoderOutput.htm">BasicDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BasicDecoderV2.htm">BasicDecoderV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoder.htm">BeamSearchDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderMixin.htm">BeamSearchDecoderMixin</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderOutput.htm">BeamSearchDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderV2.htm">BeamSearchDecoderV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/CustomHelper.htm">CustomHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/Decoder.htm">Decoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/GreedyEmbeddingHelper.htm">GreedyEmbeddingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/Helper.htm">Helper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/I_BaseAttentionMechanism.htm">I_BaseAttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/I_BaseAttentionMechanismV2.htm">I_BaseAttentionMechanismV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/I_BaseMonotonicAttentionMechanism.htm">I_BaseMonotonicAttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/I_BaseMonotonicAttentionMechanismV2.htm">I_BaseMonotonicAttentionMechanismV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IAttentionMechanism.htm">IAttentionMechanism</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IAttentionWrapper.htm">IAttentionWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IAttentionWrapperState.htm">IAttentionWrapperState</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBahdanauAttention.htm">IBahdanauAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBahdanauAttentionV2.htm">IBahdanauAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBahdanauMonotonicAttention.htm">IBahdanauMonotonicAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBahdanauMonotonicAttentionV2.htm">IBahdanauMonotonicAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBaseDecoder.htm">IBaseDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBasicDecoder.htm">IBasicDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBasicDecoderOutput.htm">IBasicDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBasicDecoderV2.htm">IBasicDecoderV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBeamSearchDecoder.htm">IBeamSearchDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBeamSearchDecoderMixin.htm">IBeamSearchDecoderMixin</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBeamSearchDecoderOutput.htm">IBeamSearchDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBeamSearchDecoderState.htm">IBeamSearchDecoderState</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IBeamSearchDecoderV2.htm">IBeamSearchDecoderV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ICustomHelper.htm">ICustomHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IDecoder.htm">IDecoder</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IFinalBeamSearchDecoderOutput.htm">IFinalBeamSearchDecoderOutput</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IGreedyEmbeddingHelper.htm">IGreedyEmbeddingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IHelper.htm">IHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IInferenceHelper.htm">IInferenceHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ILuongAttention.htm">ILuongAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ILuongAttentionV2.htm">ILuongAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ILuongMonotonicAttention.htm">ILuongMonotonicAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ILuongMonotonicAttentionV2.htm">ILuongMonotonicAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/InferenceHelper.htm">InferenceHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ISampleEmbeddingHelper.htm">ISampleEmbeddingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IScheduledEmbeddingTrainingHelper.htm">IScheduledEmbeddingTrainingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/IScheduledOutputTrainingHelper.htm">IScheduledOutputTrainingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ISequenceLoss.htm">ISequenceLoss</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ITrainingHelper.htm">ITrainingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/LuongAttention.htm">LuongAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/LuongAttentionV2.htm">LuongAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/LuongMonotonicAttention.htm">LuongMonotonicAttention</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/LuongMonotonicAttentionV2.htm">LuongMonotonicAttentionV2</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/SampleEmbeddingHelper.htm">SampleEmbeddingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ScheduledEmbeddingTrainingHelper.htm">ScheduledEmbeddingTrainingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/ScheduledOutputTrainingHelper.htm">ScheduledOutputTrainingHelper</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/seq2seq.htm">seq2seq</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/SequenceLoss.htm">SequenceLoss</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.seq2seq/TrainingHelper.htm">TrainingHelper</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> BasicDecoder</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.contrib.seq2seq</p>
		<p><strong>Parent</strong> <a href="../tensorflow.contrib.seq2seq/Decoder.htm">Decoder</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.contrib.seq2seq/IBasicDecoder.htm">IBasicDecoder</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Basic sampling decoder. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize">finalize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#finalize_dyn">finalize_dyn</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#initialize">initialize</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#step">step</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#step">step</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#step">step</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#step">step</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#step_dyn">step_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#batch_size">batch_size</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#batch_size_dyn">batch_size_dyn</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#output_dtype">output_dtype</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#output_dtype_dyn">output_dtype_dyn</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#output_size">output_size</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#output_size_dyn">output_size_dyn</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#tracks_own_finished">tracks_own_finished</a></li>
				<li><a href="../tensorflow.contrib.seq2seq/BasicDecoder.htm#tracks_own_finished_dyn">tracks_own_finished_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.bool">bool</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.bool">bool</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.object">object</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.object">object</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.int">int</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.int">int</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.object">object</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.bool">bool</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a> outputs, <span title="System.bool">bool</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/FinalBeamSearchDecoderOutput.htm">FinalBeamSearchDecoderOutput</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.object">object</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.object">object</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.int">int</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.int">int</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.bool">bool</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> outputs, <span title="System.bool">bool</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.int">int</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.int">int</span> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <span title="System.object">object</span> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <span title="System.int">int</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>finalize</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> outputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> final_state, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="finalize_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>finalize_dyn</strong>(<span title="System.object">object</span> outputs, <span title="System.object">object</span> final_state, <span title="System.object">object</span> sequence_lengths)
		</h4>
		<div class="content">Called after decoding iterations complete. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> outputs
						</dt>
						<dd>RNNCell outputs (possibly nested tuple of) tensor[s] for all time
steps. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> final_state
						</dt>
						<dd>RNNCell final state (possibly nested tuple of) tensor[s] for
last time step. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> sequence_lengths
						</dt>
						<dd>1-D `int32` tensor containing lengths of each sequence. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(final_outputs, final_state)`: `final_outputs` is an object containing
the final decoder output, `final_state` is a (structure of) state tensors
and TensorArrays. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="initialize" class="method">
		<h4>
			<span title="System.object">object</span> <strong>initialize</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Initialize the decoder. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(finished, first_inputs, initial_state)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="step" class="method">
		<h4>
			<span title="System.object">object</span> <strong>step</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> time, <span title="System.object">object</span> inputs, <span title="System.object">object</span> state, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Perform a decoding step. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> time
						</dt>
						<dd>scalar `int32` tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> inputs
						</dt>
						<dd>A (structure of) input tensors. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> state
						</dt>
						<dd>A (structure of) state tensors and TensorArrays. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(outputs, next_state, next_inputs, finished)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="step" class="method">
		<h4>
			<span title="System.object">object</span> <strong>step</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> time, <span title="System.object">object</span> inputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> state, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Perform a decoding step. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> time
						</dt>
						<dd>scalar `int32` tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> inputs
						</dt>
						<dd>A (structure of) input tensors. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> state
						</dt>
						<dd>A (structure of) state tensors and TensorArrays. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(outputs, next_state, next_inputs, finished)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="step" class="method">
		<h4>
			<span title="System.object">object</span> <strong>step</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> time, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> inputs, <span title="System.object">object</span> state, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Perform a decoding step. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> time
						</dt>
						<dd>scalar `int32` tensor. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> inputs
						</dt>
						<dd>A (structure of) input tensors. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> state
						</dt>
						<dd>A (structure of) state tensors and TensorArrays. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(outputs, next_state, next_inputs, finished)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="step" class="method">
		<h4>
			<span title="System.object">object</span> <strong>step</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> time, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> inputs, <a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a> state, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Perform a decoding step. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> time
						</dt>
						<dd>scalar `int32` tensor. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> inputs
						</dt>
						<dd>A (structure of) input tensors. 
						</dd>
						<dt>
							<code><a href="../tensorflow.contrib.seq2seq/BeamSearchDecoderState.htm">BeamSearchDecoderState</a></code> state
						</dt>
						<dd>A (structure of) state tensors and TensorArrays. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(outputs, next_state, next_inputs, finished)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="step_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>step_dyn</strong>(<span title="System.object">object</span> time, <span title="System.object">object</span> inputs, <span title="System.object">object</span> state, <span title="System.object">object</span> name)
		</h4>
		<div class="content">Perform a decoding step. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> time
						</dt>
						<dd>scalar `int32` tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> inputs
						</dt>
						<dd>A (structure of) input tensors. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> state
						</dt>
						<dd>A (structure of) state tensors and TensorArrays. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> name
						</dt>
						<dd>Name scope for any created operations. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`(outputs, next_state, next_inputs, finished)`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="batch_size" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_size</strong> get; 
		</h4>
		<div class="content">The batch size of input values. 

		</div>
	</div>
	<div id="batch_size_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_size_dyn</strong> get; 
		</h4>
		<div class="content">The batch size of input values. 

		</div>
	</div>
	<div id="output_dtype" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_dtype</strong> get; 
		</h4>
		<div class="content">A (possibly nested tuple of...) dtype[s]. 

		</div>
	</div>
	<div id="output_dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_dtype_dyn</strong> get; 
		</h4>
		<div class="content">A (possibly nested tuple of...) dtype[s]. 

		</div>
	</div>
	<div id="output_size" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_size</strong> get; 
		</h4>
		<div class="content">A (possibly nested tuple of...) integer[s] or `TensorShape` object[s]. 

		</div>
	</div>
	<div id="output_size_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_size_dyn</strong> get; 
		</h4>
		<div class="content">A (possibly nested tuple of...) integer[s] or `TensorShape` object[s]. 

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tracks_own_finished" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>tracks_own_finished</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tracks_own_finished_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>tracks_own_finished_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>