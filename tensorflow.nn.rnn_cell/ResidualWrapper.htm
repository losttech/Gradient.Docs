<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>ResidualWrapper - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.nn.rnn_cell</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.nn.rnn_cell/_LSTMStateTuple.htm">_LSTMStateTuple</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/_RNNCellWrapperV1.htm">_RNNCellWrapperV1</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/BasicLSTMCell.htm">BasicLSTMCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/BasicRNNCell.htm">BasicRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/DeviceWrapper.htm">DeviceWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/DropoutWrapper.htm">DropoutWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/GRUCell.htm">GRUCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/I_LSTMStateTuple.htm">I_LSTMStateTuple</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/I_RNNCellWrapperV1.htm">I_RNNCellWrapperV1</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IBasicLSTMCell.htm">IBasicLSTMCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IBasicRNNCell.htm">IBasicRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IDeviceWrapper.htm">IDeviceWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IDropoutWrapper.htm">IDropoutWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IGRUCell.htm">IGRUCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/ILayerRNNCell.htm">ILayerRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/ILSTMCell.htm">ILSTMCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/ILSTMStateTuple.htm">ILSTMStateTuple</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IMultiRNNCell.htm">IMultiRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IResidualWrapper.htm">IResidualWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/IRNNCell.htm">IRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/LayerRNNCell.htm">LayerRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/LSTMCell.htm">LSTMCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/LSTMStateTuple.htm">LSTMStateTuple</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/MultiRNNCell.htm">MultiRNNCell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm" class="current">ResidualWrapper</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/rnn_cell.htm">rnn_cell</a>
        </li>
				<li>
            <a href="../tensorflow.nn.rnn_cell/RNNCell.htm">RNNCell</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> ResidualWrapper</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.nn.rnn_cell</p>
		<p><strong>Parent</strong> <a href="../tensorflow.python.ops.rnn_cell_wrapper_impl/ResidualWrapperBase.htm">ResidualWrapperBase</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.nn.rnn_cell/IResidualWrapper.htm">IResidualWrapper</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">RNNCell wrapper that ensures cell inputs are added to the outputs. 
			</div>
		
		
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#activity_regularizer">activity_regularizer</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#activity_regularizer_dyn">activity_regularizer_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#built">built</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#cell">cell</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#dtype">dtype</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#dtype_dyn">dtype_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#dynamic">dynamic</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#dynamic_dyn">dynamic_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#graph">graph</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#graph_dyn">graph_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#inbound_nodes">inbound_nodes</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#inbound_nodes_dyn">inbound_nodes_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input">input</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_dyn">input_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_mask">input_mask</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_mask_dyn">input_mask_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_shape">input_shape</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_shape_dyn">input_shape_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_spec">input_spec</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#input_spec_dyn">input_spec_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#losses">losses</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#losses_dyn">losses_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#metrics">metrics</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#metrics_dyn">metrics_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#name">name</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#name_dyn">name_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#name_scope">name_scope</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#name_scope_dyn">name_scope_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#non_trainable_variables">non_trainable_variables</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#non_trainable_variables_dyn">non_trainable_variables_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#non_trainable_weights">non_trainable_weights</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#non_trainable_weights_dyn">non_trainable_weights_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#outbound_nodes">outbound_nodes</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#outbound_nodes_dyn">outbound_nodes_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output">output</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_dyn">output_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_mask">output_mask</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_mask_dyn">output_mask_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_shape">output_shape</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_shape_dyn">output_shape_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_size">output_size</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#output_size_dyn">output_size_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#rnncell_scope">rnncell_scope</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#scope_name">scope_name</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#scope_name_dyn">scope_name_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#state_size">state_size</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#state_size_dyn">state_size_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#stateful">stateful</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#submodules">submodules</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#submodules_dyn">submodules_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#supports_masking">supports_masking</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable">trainable</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable_dyn">trainable_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable_variables">trainable_variables</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable_variables_dyn">trainable_variables_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable_weights">trainable_weights</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#trainable_weights_dyn">trainable_weights_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#updates">updates</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#updates_dyn">updates_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#variables">variables</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#variables_dyn">variables_dyn</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#weights">weights</a></li>
				<li><a href="../tensorflow.nn.rnn_cell/ResidualWrapper.htm#weights_dyn">weights_dyn</a></li>
			</ul>
		
	</div>
	
	
	
	<h3 class="section">Public properties</h3>

	<div id="activity_regularizer" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>activity_regularizer</strong> get; set;
		</h4>
		<div class="content">Optional regularizer function for the output of this layer. 

		</div>
	</div>
	<div id="activity_regularizer_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>activity_regularizer_dyn</strong> get; set;
		</h4>
		<div class="content">Optional regularizer function for the output of this layer. 

		</div>
	</div>
	<div id="built" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>built</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="cell" class="method">
		<h4>
			<span title="System.object">object</span> <strong>cell</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dynamic" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>dynamic</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dynamic_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dynamic_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="graph" class="method">
		<h4>
			<span title="System.object">object</span> <strong>graph</strong> get; 
		</h4>
		<div class="content">DEPRECATED FUNCTION <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Stop using this property because tf.layers layers no longer track their graph. 

		</div>
	</div>
	<div id="graph_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>graph_dyn</strong> get; 
		</h4>
		<div class="content">DEPRECATED FUNCTION <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Stop using this property because tf.layers layers no longer track their graph. 

		</div>
	</div>
	<div id="inbound_nodes" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<Node>">IList&lt;Node&gt;</span> <strong>inbound_nodes</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="inbound_nodes_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>inbound_nodes_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="input" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>input</strong> get; 
		</h4>
		<div class="content">Retrieves the input tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one input,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="input_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the input tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one input,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="input_mask" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_mask</strong> get; 
		</h4>
		<div class="content">Retrieves the input mask tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one inbound node,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="input_mask_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_mask_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the input mask tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one inbound node,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="input_shape" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>input_shape</strong> get; 
		</h4>
		<div class="content">Retrieves the input shape(s) of a layer. <p></p> Only applicable if the layer has exactly one input,
i.e. if it is connected to one incoming layer, or if all inputs
have the same shape. 

		</div>
	</div>
	<div id="input_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_shape_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the input shape(s) of a layer. <p></p> Only applicable if the layer has exactly one input,
i.e. if it is connected to one incoming layer, or if all inputs
have the same shape. 

		</div>
	</div>
	<div id="input_spec" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_spec</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="input_spec_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>input_spec_dyn</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="losses" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>losses</strong> get; 
		</h4>
		<div class="content">Losses which are associated with this `Layer`. <p></p> Variable regularization tensors are created when this property is accessed,
so it is eager safe: accessing `losses` under a <a href="..\..\..\tf\GradientTape.md"><code>tf.GradientTape</code></a> will
propagate gradients back to the corresponding variables. 

		</div>
	</div>
	<div id="losses_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>losses_dyn</strong> get; 
		</h4>
		<div class="content">Losses which are associated with this `Layer`. <p></p> Variable regularization tensors are created when this property is accessed,
so it is eager safe: accessing `losses` under a <a href="..\..\..\tf\GradientTape.md"><code>tf.GradientTape</code></a> will
propagate gradients back to the corresponding variables. 

		</div>
	</div>
	<div id="metrics" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>metrics</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="metrics_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>metrics_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name</strong> get; 
		</h4>
		<div class="content">Returns the name of this module as passed or determined in the ctor. <p></p> NOTE: This is not the same as the `self.name_scope.name` which includes
parent module names. 

		</div>
	</div>
	<div id="name_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_dyn</strong> get; 
		</h4>
		<div class="content">Returns the name of this module as passed or determined in the ctor. <p></p> NOTE: This is not the same as the `self.name_scope.name` which includes
parent module names. 

		</div>
	</div>
	<div id="name_scope" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope</strong> get; 
		</h4>
		<div class="content">Returns a <a href="..\tf\name_scope.md"><code>tf.name_scope</code></a> instance for this class. 

		</div>
	</div>
	<div id="name_scope_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope_dyn</strong> get; 
		</h4>
		<div class="content">Returns a <a href="..\tf\name_scope.md"><code>tf.name_scope</code></a> instance for this class. 

		</div>
	</div>
	<div id="non_trainable_variables" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>non_trainable_variables</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="non_trainable_variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>non_trainable_variables_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="non_trainable_weights" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>non_trainable_weights</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="non_trainable_weights_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>non_trainable_weights_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="outbound_nodes" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>outbound_nodes</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="outbound_nodes_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>outbound_nodes_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="output" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>output</strong> get; 
		</h4>
		<div class="content">Retrieves the output tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one output,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="output_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the output tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one output,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="output_mask" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_mask</strong> get; 
		</h4>
		<div class="content">Retrieves the output mask tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one inbound node,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="output_mask_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_mask_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the output mask tensor(s) of a layer. <p></p> Only applicable if the layer has exactly one inbound node,
i.e. if it is connected to one incoming layer. 

		</div>
	</div>
	<div id="output_shape" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_shape</strong> get; 
		</h4>
		<div class="content">Retrieves the output shape(s) of a layer. <p></p> Only applicable if the layer has one output,
or if all outputs have the same shape. 

		</div>
	</div>
	<div id="output_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_shape_dyn</strong> get; 
		</h4>
		<div class="content">Retrieves the output shape(s) of a layer. <p></p> Only applicable if the layer has one output,
or if all outputs have the same shape. 

		</div>
	</div>
	<div id="output_size" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_size</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="output_size_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>output_size_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="rnncell_scope" class="method">
		<h4>
			<span title="System.object">object</span> <strong>rnncell_scope</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="scope_name" class="method">
		<h4>
			<span title="System.string">string</span> <strong>scope_name</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="scope_name_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>scope_name_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="state_size" class="method">
		<h4>
			<span title="System.object">object</span> <strong>state_size</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="state_size_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>state_size_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="stateful" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>stateful</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="submodules" class="method">
		<h4>
			<span title="System.ValueTuple<object>">ValueTuple&lt;object&gt;</span> <strong>submodules</strong> get; 
		</h4>
		<div class="content">Sequence of all sub-modules. <p></p> Submodules are modules which are properties of this module, or found as
properties of modules which are properties of this module (and so on). <p></p> ```
a = tf.Module()
b = tf.Module()
c = tf.Module()
a.b = b
b.c = c
assert list(a.submodules) == [b, c]
assert list(b.submodules) == [c]
assert list(c.submodules) == []
``` 

		</div>
	</div>
	<div id="submodules_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>submodules_dyn</strong> get; 
		</h4>
		<div class="content">Sequence of all sub-modules. <p></p> Submodules are modules which are properties of this module, or found as
properties of modules which are properties of this module (and so on). <p></p> ```
a = tf.Module()
b = tf.Module()
c = tf.Module()
a.b = b
b.c = c
assert list(a.submodules) == [b, c]
assert list(b.submodules) == [c]
assert list(c.submodules) == []
``` 

		</div>
	</div>
	<div id="supports_masking" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>supports_masking</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>trainable</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_dyn</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables</strong> get; 
		</h4>
		<div class="content">Sequence of variables owned by this module and it's submodules. <p></p> Note: this method uses reflection to find variables on the current instance
and submodules. For performance reasons you may wish to cache the result
of calling this method if you don't expect the return value to change. 

		</div>
	</div>
	<div id="trainable_variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables_dyn</strong> get; 
		</h4>
		<div class="content">Sequence of variables owned by this module and it's submodules. <p></p> Note: this method uses reflection to find variables on the current instance
and submodules. For performance reasons you may wish to cache the result
of calling this method if you don't expect the return value to change. 

		</div>
	</div>
	<div id="trainable_weights" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>trainable_weights</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_weights_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_weights_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="updates" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>updates</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="updates_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>updates_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables</strong> get; 
		</h4>
		<div class="content">Returns the list of all layer variables/weights. <p></p> Alias of `self.weights`. 

		</div>
	</div>
	<div id="variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables_dyn</strong> get; 
		</h4>
		<div class="content">Returns the list of all layer variables/weights. <p></p> Alias of `self.weights`. 

		</div>
	</div>
	<div id="weights" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>weights</strong> get; 
		</h4>
		<div class="content">Returns the list of all layer variables/weights. 

		</div>
	</div>
	<div id="weights_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>weights_dyn</strong> get; 
		</h4>
		<div class="content">Returns the list of all layer variables/weights. 

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>