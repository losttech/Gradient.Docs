<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>TestCase - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.test</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.test/Benchmark.htm">Benchmark</a>
        </li>
				<li>
            <a href="../tensorflow.test/IBenchmark.htm">IBenchmark</a>
        </li>
				<li>
            <a href="../tensorflow.test/IStubOutForTesting.htm">IStubOutForTesting</a>
        </li>
				<li>
            <a href="../tensorflow.test/ITestCase.htm">ITestCase</a>
        </li>
				<li>
            <a href="../tensorflow.test/StubOutForTesting.htm">StubOutForTesting</a>
        </li>
				<li>
            <a href="../tensorflow.test/TestCase.htm" class="current">TestCase</a>
        </li>
				<li>
            <a href="../tensorflow.test/TestCase._CheckedThread.htm">TestCase._CheckedThread</a>
        </li>
				<li>
            <a href="../tensorflow.test/TestCase.I_CheckedThread.htm">TestCase.I_CheckedThread</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> TestCase</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.test</p>
		<p><strong>Parent</strong> <a href="../LostTech.Gradient/PythonObjectContainer.htm">PythonObjectContainer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.test/ITestCase.htm">ITestCase</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Base class for tests that need to test TensorFlow. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllClose">assertAllClose</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllClose_dyn">assertAllClose_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType">assertAllCloseAccordingToType</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllCloseAccordingToType_dyn">assertAllCloseAccordingToType_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual">assertAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllEqual_dyn">assertAllEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreater">assertAllGreater</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreater">assertAllGreater</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreater">assertAllGreater</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreater_dyn">assertAllGreater_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreaterEqual">assertAllGreaterEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreaterEqual">assertAllGreaterEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreaterEqual">assertAllGreaterEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllGreaterEqual_dyn">assertAllGreaterEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInRange">assertAllInRange</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInRange">assertAllInRange</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInRange">assertAllInRange</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInRange_dyn">assertAllInRange_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInSet">assertAllInSet</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInSet">assertAllInSet</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInSet">assertAllInSet</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllInSet_dyn">assertAllInSet_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLess">assertAllLess</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLess">assertAllLess</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLess">assertAllLess</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLess_dyn">assertAllLess_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLessEqual">assertAllLessEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLessEqual">assertAllLessEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLessEqual">assertAllLessEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertAllLessEqual_dyn">assertAllLessEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertArrayNear_dyn">assertArrayNear_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDeviceEqual">assertDeviceEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDeviceEqual_dyn">assertDeviceEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDTypeEqual">assertDTypeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDTypeEqual">assertDTypeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDTypeEqual">assertDTypeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertDTypeEqual_dyn">assertDTypeEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNDArrayNear_dyn">assertNDArrayNear_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNear_dyn">assertNear_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNotAllClose">assertNotAllClose</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNotAllClose_dyn">assertNotAllClose_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNotAllEqual">assertNotAllEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertNotAllEqual_dyn">assertNotAllEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertProtoEquals">assertProtoEquals</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertProtoEquals_dyn">assertProtoEquals_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertProtoEqualsVersion">assertProtoEqualsVersion</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertProtoEqualsVersion_dyn">assertProtoEqualsVersion_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesOpError">assertRaisesOpError</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesOpError">assertRaisesOpError</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesOpError_dyn">assertRaisesOpError_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesWithPredicateMatch">assertRaisesWithPredicateMatch</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesWithPredicateMatch">assertRaisesWithPredicateMatch</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesWithPredicateMatch">assertRaisesWithPredicateMatch</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesWithPredicateMatch">assertRaisesWithPredicateMatch</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesWithPredicateMatch_dyn">assertRaisesWithPredicateMatch_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual">assertShapeEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertShapeEqual_dyn">assertShapeEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertStartsWith">assertStartsWith</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertStartsWith">assertStartsWith</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertStartsWith_dyn">assertStartsWith_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#cached_session">cached_session</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#cached_session_dyn">cached_session_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#captureWritesToStream">captureWritesToStream</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#captureWritesToStream_dyn">captureWritesToStream_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#checkedThread">checkedThread</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#checkedThread_dyn">checkedThread_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#evaluate">evaluate</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#get_temp_dir">get_temp_dir</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#get_temp_dir_dyn">get_temp_dir_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#session">session</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#session_dyn">session_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#test_session">test_session</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#test_session_dyn">test_session_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.test/TestCase.htm#assertItemsEqual">assertItemsEqual</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertItemsEqual_dyn">assertItemsEqual_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#assertRaisesRegexp_dyn">assertRaisesRegexp_dyn</a></li>
				<li><a href="../tensorflow.test/TestCase.htm#PythonObject">PythonObject</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="assertAllClose" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllClose</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two structures of numpy arrays or Tensors, have near values. <p></p> `a` and `b` can be arbitrarily nested structures. A layer of a nested
structure can be a `dict`, `namedtuple`, `tuple` or `list`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The expected numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor), or any arbitrarily nested of
structure of these. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>The actual numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor), or any arbitrarily nested of
structure of these. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllClose_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllClose_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> rtol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two structures of numpy arrays or Tensors, have near values. <p></p> `a` and `b` can be arbitrarily nested structures. A layer of a nested
structure can be a `dict`, `namedtuple`, `tuple` or `list`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The expected numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor), or any arbitrarily nested of
structure of these. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>The actual numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor), or any arbitrarily nested of
structure of these. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.double">double</span> rtol, <span title="System.double">double</span> atol, <span title="System.double">double</span> float_rtol, <span title="System.double">double</span> float_atol, <span title="System.double">double</span> half_rtol, <span title="System.double">double</span> half_atol, <span title="System.double">double</span> bfloat16_rtol, <span title="System.double">double</span> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.double">double</span></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllCloseAccordingToType_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllCloseAccordingToType_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> rtol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> atol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> float_rtol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> float_atol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> half_rtol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> half_atol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> bfloat16_rtol, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> bfloat16_atol, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Like assertAllClose, but also suitable for comparing fp16 arrays. <p></p> In particular, the tolerance is reduced to 1e-3 if at least
one of the arguments is of type float16. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> rtol
						</dt>
						<dd>relative tolerance. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> atol
						</dt>
						<dd>absolute tolerance. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> float_rtol
						</dt>
						<dd>relative tolerance for float32. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> float_atol
						</dt>
						<dd>absolute tolerance for float32. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> half_rtol
						</dt>
						<dd>relative tolerance for float16. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> half_atol
						</dt>
						<dd>absolute tolerance for float16. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> bfloat16_rtol
						</dt>
						<dd>relative tolerance for bfloat16. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> bfloat16_atol
						</dt>
						<dd>absolute tolerance for bfloat16. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <a href="../numpy/ndarray.htm">ndarray</a> b, <span title="System.string">string</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllEqual_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreater" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreater</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreater" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreater</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreater" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreater</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreater_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreater_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreaterEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreaterEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreaterEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreaterEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreaterEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreaterEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllGreaterEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllGreaterEqual_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all greater than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInRange" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInRange</strong>(<a href="../numpy/ndarray.htm">ndarray</a> target, <span title="System.object">object</span> lower_bound, <span title="System.object">object</span> upper_bound, <span title="System.bool">bool</span> open_lower_bound, <span title="System.bool">bool</span> open_upper_bound)
		</h4>
		<div class="content">Assert that elements in a Tensor are all in a given range. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> lower_bound
						</dt>
						<dd>lower bound of the range 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> upper_bound
						</dt>
						<dd>upper bound of the range 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_lower_bound
						</dt>
						<dd>(`bool`) whether the lower bound is open (i.e., > rather
than the default >=) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_upper_bound
						</dt>
						<dd>(`bool`) whether the upper bound is open (i.e., < rather
than the default <=) 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInRange" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInRange</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> target, <span title="System.object">object</span> lower_bound, <span title="System.object">object</span> upper_bound, <span title="System.bool">bool</span> open_lower_bound, <span title="System.bool">bool</span> open_upper_bound)
		</h4>
		<div class="content">Assert that elements in a Tensor are all in a given range. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> lower_bound
						</dt>
						<dd>lower bound of the range 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> upper_bound
						</dt>
						<dd>upper bound of the range 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_lower_bound
						</dt>
						<dd>(`bool`) whether the lower bound is open (i.e., > rather
than the default >=) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_upper_bound
						</dt>
						<dd>(`bool`) whether the upper bound is open (i.e., < rather
than the default <=) 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInRange" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInRange</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> target, <span title="System.object">object</span> lower_bound, <span title="System.object">object</span> upper_bound, <span title="System.bool">bool</span> open_lower_bound, <span title="System.bool">bool</span> open_upper_bound)
		</h4>
		<div class="content">Assert that elements in a Tensor are all in a given range. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> lower_bound
						</dt>
						<dd>lower bound of the range 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> upper_bound
						</dt>
						<dd>upper bound of the range 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_lower_bound
						</dt>
						<dd>(`bool`) whether the lower bound is open (i.e., > rather
than the default >=) 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> open_upper_bound
						</dt>
						<dd>(`bool`) whether the upper bound is open (i.e., < rather
than the default <=) 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInRange_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInRange_dyn</strong>(<span title="System.object">object</span> target, <span title="System.object">object</span> lower_bound, <span title="System.object">object</span> upper_bound, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> open_lower_bound, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> open_upper_bound)
		</h4>
		<div class="content">Assert that elements in a Tensor are all in a given range. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> lower_bound
						</dt>
						<dd>lower bound of the range 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> upper_bound
						</dt>
						<dd>upper bound of the range 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> open_lower_bound
						</dt>
						<dd>(`bool`) whether the lower bound is open (i.e., > rather
than the default >=) 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> open_upper_bound
						</dt>
						<dd>(`bool`) whether the upper bound is open (i.e., < rather
than the default <=) 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInSet" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInSet</strong>(<a href="../numpy/ndarray.htm">ndarray</a> target, <span title="System.object">object</span> expected_set)
		</h4>
		<div class="content">Assert that elements of a Tensor are all in a given closed set. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_set
						</dt>
						<dd>(`list`, `tuple` or `set`) The closed set that the elements
of the value of `target` are expected to fall into. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInSet" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInSet</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> target, <span title="System.object">object</span> expected_set)
		</h4>
		<div class="content">Assert that elements of a Tensor are all in a given closed set. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_set
						</dt>
						<dd>(`list`, `tuple` or `set`) The closed set that the elements
of the value of `target` are expected to fall into. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInSet" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInSet</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> target, <span title="System.object">object</span> expected_set)
		</h4>
		<div class="content">Assert that elements of a Tensor are all in a given closed set. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_set
						</dt>
						<dd>(`list`, `tuple` or `set`) The closed set that the elements
of the value of `target` are expected to fall into. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllInSet_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllInSet_dyn</strong>(<span title="System.object">object</span> target, <span title="System.object">object</span> expected_set)
		</h4>
		<div class="content">Assert that elements of a Tensor are all in a given closed set. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_set
						</dt>
						<dd>(`list`, `tuple` or `set`) The closed set that the elements
of the value of `target` are expected to fall into. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLess" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLess</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLess" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLess</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLess" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLess</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLess_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLess_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLessEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLessEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLessEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLessEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLessEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLessEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertAllLessEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertAllLessEqual_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> comparison_target)
		</h4>
		<div class="content">Assert element values are all less than or equal to a target value. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a numpy
`ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> comparison_target
						</dt>
						<dd>The target value of comparison. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertArrayNear_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertArrayNear_dyn</strong>(<span title="System.object">object</span> farray1, <span title="System.object">object</span> farray2, <span title="System.object">object</span> err, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two float arrays are near each other. <p></p> Checks that for all elements of farray1 and farray2
|f1 - f2| < err.  Asserts a test failure if not. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> farray1
						</dt>
						<dd>a list of float values. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> farray2
						</dt>
						<dd>a list of float values. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> err
						</dt>
						<dd>a float value. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDeviceEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertDeviceEqual</strong>(<span title="System.string">string</span> device1, <span title="System.string">string</span> device2, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that the two given devices are the same. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> device1
						</dt>
						<dd>A string device name or TensorFlow `DeviceSpec` object. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> device2
						</dt>
						<dd>A string device name or TensorFlow `DeviceSpec` object. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDeviceEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertDeviceEqual_dyn</strong>(<span title="System.object">object</span> device1, <span title="System.object">object</span> device2, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that the two given devices are the same. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> device1
						</dt>
						<dd>A string device name or TensorFlow `DeviceSpec` object. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> device2
						</dt>
						<dd>A string device name or TensorFlow `DeviceSpec` object. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDTypeEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertDTypeEqual</strong>(<span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> target, <span title="System.object">object</span> expected_dtype)
		</h4>
		<div class="content">Assert ndarray data type is equal to expected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_dtype
						</dt>
						<dd>Expected data type. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDTypeEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertDTypeEqual</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> target, <span title="System.object">object</span> expected_dtype)
		</h4>
		<div class="content">Assert ndarray data type is equal to expected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_dtype
						</dt>
						<dd>Expected data type. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDTypeEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertDTypeEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> target, <span title="System.object">object</span> expected_dtype)
		</h4>
		<div class="content">Assert ndarray data type is equal to expected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_dtype
						</dt>
						<dd>Expected data type. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertDTypeEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertDTypeEqual_dyn</strong>(<span title="System.object">object</span> target, <span title="System.object">object</span> expected_dtype)
		</h4>
		<div class="content">Assert ndarray data type is equal to expected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> target
						</dt>
						<dd>The numpy `ndarray`, or anything that can be converted into a
numpy `ndarray` (including Tensor). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_dtype
						</dt>
						<dd>Expected data type. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNDArrayNear_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNDArrayNear_dyn</strong>(<span title="System.object">object</span> ndarray1, <span title="System.object">object</span> ndarray2, <span title="System.object">object</span> err, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays have near values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> ndarray1
						</dt>
						<dd>a numpy ndarray. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> ndarray2
						</dt>
						<dd>a numpy ndarray. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> err
						</dt>
						<dd>a float. The maximum absolute difference allowed. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNear_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNear_dyn</strong>(<span title="System.object">object</span> f1, <span title="System.object">object</span> f2, <span title="System.object">object</span> err, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two floats are near each other. <p></p> Checks that |f1 - f2| < err and asserts a test failure
if not. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> f1
						</dt>
						<dd>A float value. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> f2
						</dt>
						<dd>A float value. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> err
						</dt>
						<dd>A float value. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>An optional string message to append to the failure message. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNotAllClose" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNotAllClose</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> kwargs)
		</h4>
		<div class="content">Assert that two numpy arrays, or Tensors, do not have near values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the first value to compare. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the second value to compare. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> kwargs
						</dt>
						<dd>additional keyword arguments to be passed to the underlying
`assertAllClose` call. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNotAllClose_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNotAllClose_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> kwargs)
		</h4>
		<div class="content">Assert that two numpy arrays, or Tensors, do not have near values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the first value to compare. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the second value to compare. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> kwargs
						</dt>
						<dd>additional keyword arguments to be passed to the underlying
`assertAllClose` call. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNotAllEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNotAllEqual</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors do not have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertNotAllEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertNotAllEqual_dyn</strong>(<span title="System.object">object</span> a, <span title="System.object">object</span> b, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that two numpy arrays or Tensors do not have the same values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> a
						</dt>
						<dd>the expected numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> b
						</dt>
						<dd>the actual numpy ndarray or anything can be converted to one. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertProtoEquals" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertProtoEquals</strong>(<span title="System.object">object</span> expected_message_maybe_ascii, <a href="../tensorflow.python.ops.boosted_trees_ops/TreeEnsemble.htm">TreeEnsemble</a> message, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that message is same as parsed expected_message_ascii. <p></p> Creates another prototype of message, reads the ascii message into it and
then compares them using self._AssertProtoEqual(). 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> expected_message_maybe_ascii
						</dt>
						<dd>proto message in original or ascii form. 
						</dd>
						<dt>
							<code><a href="../tensorflow.python.ops.boosted_trees_ops/TreeEnsemble.htm">TreeEnsemble</a></code> message
						</dt>
						<dd>the message to validate. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertProtoEquals_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertProtoEquals_dyn</strong>(<span title="System.object">object</span> expected_message_maybe_ascii, <span title="System.object">object</span> message, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that message is same as parsed expected_message_ascii. <p></p> Creates another prototype of message, reads the ascii message into it and
then compares them using self._AssertProtoEqual(). 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> expected_message_maybe_ascii
						</dt>
						<dd>proto message in original or ascii form. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> message
						</dt>
						<dd>the message to validate. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertProtoEqualsVersion" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertProtoEqualsVersion</strong>(<span title="System.string">string</span> expected, <span title="System.object">object</span> actual, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> producer, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> min_consumer, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assertProtoEqualsVersion_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertProtoEqualsVersion_dyn</strong>(<span title="System.object">object</span> expected, <span title="System.object">object</span> actual, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> producer, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> min_consumer, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assertRaisesOpError" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertRaisesOpError</strong>(<span title="System.string">string</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assertRaisesOpError" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertRaisesOpError</strong>(<span title="System.object">object</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assertRaisesOpError_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertRaisesOpError_dyn</strong>(<span title="System.object">object</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assertRaisesWithPredicateMatch" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>assertRaisesWithPredicateMatch</strong>(<span title="System.object">object</span> exception_type, <span title="System.object">object</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">Returns a context manager to enclose code expected to raise an exception. <p></p> If the exception is an OpError, the op stack is also included in the message
predicate search. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> exception_type
						</dt>
						<dd>The expected type of exception that should be raised. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_err_re_or_predicate
						</dt>
						<dd>If this is callable, it should be a function
of one argument that inspects the passed-in exception and returns True
(success) or False (please fail the test). Otherwise, the error message
is expected to match this regular expression partially. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a></code>
					</dt>
					<dd>A context manager to surround code that is expected to raise an
exception. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="assertRaisesWithPredicateMatch" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>assertRaisesWithPredicateMatch</strong>(<span title="System.Exception">Exception</span> exception_type, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> expected_err_re_or_predicate)
		</h4>
		<div class="content">Returns a context manager to enclose code expected to raise an exception. <p></p> If the exception is an OpError, the op stack is also included in the message
predicate search. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Exception">Exception</span></code> exception_type
						</dt>
						<dd>The expected type of exception that should be raised. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> expected_err_re_or_predicate
						</dt>
						<dd>If this is callable, it should be a function
of one argument that inspects the passed-in exception and returns True
(success) or False (please fail the test). Otherwise, the error message
is expected to match this regular expression partially. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a></code>
					</dt>
					<dd>A context manager to surround code that is expected to raise an
exception. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="assertRaisesWithPredicateMatch" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>assertRaisesWithPredicateMatch</strong>(<span title="System.object">object</span> exception_type, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> expected_err_re_or_predicate)
		</h4>
		<div class="content">Returns a context manager to enclose code expected to raise an exception. <p></p> If the exception is an OpError, the op stack is also included in the message
predicate search. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> exception_type
						</dt>
						<dd>The expected type of exception that should be raised. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> expected_err_re_or_predicate
						</dt>
						<dd>If this is callable, it should be a function
of one argument that inspects the passed-in exception and returns True
(success) or False (please fail the test). Otherwise, the error message
is expected to match this regular expression partially. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a></code>
					</dt>
					<dd>A context manager to surround code that is expected to raise an
exception. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="assertRaisesWithPredicateMatch" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>assertRaisesWithPredicateMatch</strong>(<span title="System.Exception">Exception</span> exception_type, <span title="System.object">object</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">Returns a context manager to enclose code expected to raise an exception. <p></p> If the exception is an OpError, the op stack is also included in the message
predicate search. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Exception">Exception</span></code> exception_type
						</dt>
						<dd>The expected type of exception that should be raised. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_err_re_or_predicate
						</dt>
						<dd>If this is callable, it should be a function
of one argument that inspects the passed-in exception and returns True
(success) or False (please fail the test). Otherwise, the error message
is expected to match this regular expression partially. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a></code>
					</dt>
					<dd>A context manager to surround code that is expected to raise an
exception. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="assertRaisesWithPredicateMatch_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertRaisesWithPredicateMatch_dyn</strong>(<span title="System.object">object</span> exception_type, <span title="System.object">object</span> expected_err_re_or_predicate)
		</h4>
		<div class="content">Returns a context manager to enclose code expected to raise an exception. <p></p> If the exception is an OpError, the op stack is also included in the message
predicate search. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> exception_type
						</dt>
						<dd>The expected type of exception that should be raised. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_err_re_or_predicate
						</dt>
						<dd>If this is callable, it should be a function
of one argument that inspects the passed-in exception and returns True
(success) or False (please fail the test). Otherwise, the error message
is expected to match this regular expression partially. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A context manager to surround code that is expected to raise an
exception. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Numerics.Complex">Complex</span> np_array, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Numerics.Complex">Complex</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> np_array, <span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> np_array, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Numerics.Complex">Complex</span> np_array, <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Numerics.Complex">Complex</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> np_array, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<a href="../numpy/ndarray.htm">ndarray</a> np_array, <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span> np_array, <span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span> np_array, <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span> np_array, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Numerics.Complex">Complex</span> np_array, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Numerics.Complex">Complex</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Numerics.Complex">Complex</span> np_array, <span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Numerics.Complex">Complex</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.object">object</span> np_array, <a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.object">object</span> np_array, <a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.object">object</span> np_array, <span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.object">object</span> np_array, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertShapeEqual</strong>(<span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span> np_array, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<ndarray>">IEnumerable&lt;ndarray&gt;</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertShapeEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertShapeEqual_dyn</strong>(<span title="System.object">object</span> np_array, <span title="System.object">object</span> tf_tensor, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> np_array
						</dt>
						<dd>A Numpy ndarray or Numpy scalar. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> tf_tensor
						</dt>
						<dd>A Tensor. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertStartsWith" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertStartsWith</strong>(<span title="System.string">string</span> actual, <span title="System.string">string</span> expected_start, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Assert that actual.startswith(expected_start) is True. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> actual
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> expected_start
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertStartsWith" class="method">
		<h4>
			<span title="System.void">void</span> <strong>assertStartsWith</strong>(<span title="System.object">object</span> actual, <span title="System.string">string</span> expected_start, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Assert that actual.startswith(expected_start) is True. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> actual
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> expected_start
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="assertStartsWith_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertStartsWith_dyn</strong>(<span title="System.object">object</span> actual, <span title="System.object">object</span> expected_start, <span title="System.object">object</span> msg)
		</h4>
		<div class="content">Assert that actual.startswith(expected_start) is True. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> actual
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> expected_start
						</dt>
						<dd>str 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> msg
						</dt>
						<dd>Optional message to report on failure. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	<div id="cached_session" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>cached_session</strong>(<a href="../tensorflow/Graph.htm">Graph</a> graph, <span title="System.object">object</span> config, <span title="System.bool">bool</span> use_gpu, <span title="System.bool">bool</span> force_gpu)
		</h4>
		<div class="content">Returns a TensorFlow Session for use in executing tests. <p></p> This method behaves differently than self.session(): for performance reasons
`cached_session` will by default reuse the same session within the same
test. The session returned by this function will only be closed at the end
of the test (in the TearDown function). <p></p> Use the `use_gpu` and `force_gpu` options to control where ops are run. If
`force_gpu` is True, all ops are pinned to `/device:GPU:0`. Otherwise, if
`use_gpu` is True, TensorFlow tries to run as many ops on the GPU as
possible. If both `force_gpu and `use_gpu` are False, all ops are pinned to
the CPU. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Graph.htm">Graph</a></code> graph
						</dt>
						<dd>Optional graph to use during the returned session. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> config
						</dt>
						<dd>An optional config_pb2.ConfigProto to use to configure the
session. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_gpu
						</dt>
						<dd>If True, attempt to run as many ops as possible on GPU. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> force_gpu
						</dt>
						<dd>If True, pin all ops to `/device:GPU:0`. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                with self.cached_session(use_gpu=True) as sess:
                  valid_input = [1.0, 2.0, 3.0, 4.0, 5.0]
                  result = MyOperator(valid_input).eval()
                  self.assertEqual(result, [1.0, 2.0, 3.0, 5.0, 8.0]
                  invalid_input = [-1.0, 2.0, 7.0]
                  with self.assertRaisesOpError("negative input not supported"):
                    MyOperator(invalid_input).eval() </pre>
</div>
		</div>
	</div>
	<div id="cached_session_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>cached_session_dyn</strong>(<span title="System.object">object</span> graph, <span title="System.object">object</span> config, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> use_gpu, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> force_gpu)
		</h4>
		<div class="content">Returns a TensorFlow Session for use in executing tests. <p></p> This method behaves differently than self.session(): for performance reasons
`cached_session` will by default reuse the same session within the same
test. The session returned by this function will only be closed at the end
of the test (in the TearDown function). <p></p> Use the `use_gpu` and `force_gpu` options to control where ops are run. If
`force_gpu` is True, all ops are pinned to `/device:GPU:0`. Otherwise, if
`use_gpu` is True, TensorFlow tries to run as many ops on the GPU as
possible. If both `force_gpu and `use_gpu` are False, all ops are pinned to
the CPU. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph
						</dt>
						<dd>Optional graph to use during the returned session. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> config
						</dt>
						<dd>An optional config_pb2.ConfigProto to use to configure the
session. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> use_gpu
						</dt>
						<dd>If True, attempt to run as many ops as possible on GPU. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> force_gpu
						</dt>
						<dd>If True, pin all ops to `/device:GPU:0`. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                with self.cached_session(use_gpu=True) as sess:
                  valid_input = [1.0, 2.0, 3.0, 4.0, 5.0]
                  result = MyOperator(valid_input).eval()
                  self.assertEqual(result, [1.0, 2.0, 3.0, 5.0, 8.0]
                  invalid_input = [-1.0, 2.0, 7.0]
                  with self.assertRaisesOpError("negative input not supported"):
                    MyOperator(invalid_input).eval() </pre>
</div>
		</div>
	</div>
	<div id="captureWritesToStream" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>captureWritesToStream</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> stream)
		</h4>
		<div class="content">A context manager that captures the writes to a given stream. <p></p> This context manager captures all writes to a given stream inside of a
`CapturedWrites` object. When this context manager is created, it yields
the `CapturedWrites` object. The captured contents can be accessed  by
calling `.contents()` on the `CapturedWrites`. <p></p> For this function to work, the stream must have a file descriptor that
can be modified using `os.dup` and `os.dup2`, and the stream must support
a `.flush()` method. The default python sys.stdout and sys.stderr are
examples of this. Note that this does not work in Colab or Jupyter
notebooks, because those use alternate stdout streams. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> stream
						</dt>
						<dd>The stream whose writes should be captured. This stream must have
a file descriptor, support writing via using that file descriptor, and
must have a `.flush()` method. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                input = [1.0, 2.0, 3.0, 4.0, 5.0]
                with self.captureWritesToStream(sys.stdout) as captured:
                  result = MyOperator(input).eval()
                self.assertStartsWith(captured.contents(), "This was printed.") </pre>
</div>
		</div>
	</div>
	<div id="captureWritesToStream_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>captureWritesToStream_dyn</strong>(<span title="System.object">object</span> stream)
		</h4>
		<div class="content">A context manager that captures the writes to a given stream. <p></p> This context manager captures all writes to a given stream inside of a
`CapturedWrites` object. When this context manager is created, it yields
the `CapturedWrites` object. The captured contents can be accessed  by
calling `.contents()` on the `CapturedWrites`. <p></p> For this function to work, the stream must have a file descriptor that
can be modified using `os.dup` and `os.dup2`, and the stream must support
a `.flush()` method. The default python sys.stdout and sys.stderr are
examples of this. Note that this does not work in Colab or Jupyter
notebooks, because those use alternate stdout streams. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> stream
						</dt>
						<dd>The stream whose writes should be captured. This stream must have
a file descriptor, support writing via using that file descriptor, and
must have a `.flush()` method. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                input = [1.0, 2.0, 3.0, 4.0, 5.0]
                with self.captureWritesToStream(sys.stdout) as captured:
                  result = MyOperator(input).eval()
                self.assertStartsWith(captured.contents(), "This was printed.") </pre>
</div>
		</div>
	</div>
	<div id="checkedThread" class="method">
		<h4>
			<a href="../tensorflow.test/TestCase._CheckedThread.htm">TestCase._CheckedThread</a> <strong>checkedThread</strong>(<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> target, <span title="System.Nullable<ValueTuple<object, Session>>">Nullable&lt;ValueTuple&lt;object, Session&gt;&gt;</span> args, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> kwargs)
		</h4>
		<div class="content">Returns a Thread wrapper that asserts 'target' completes successfully. <p></p> This method should be used to create all threads in test cases, as
otherwise there is a risk that a thread will silently fail, and/or
assertions made in the thread will not be respected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> target
						</dt>
						<dd>A callable object to be executed in the thread. 
						</dd>
						<dt>
							<code><span title="System.Nullable<ValueTuple<object, Session>>">Nullable&lt;ValueTuple&lt;object, Session&gt;&gt;</span></code> args
						</dt>
						<dd>The argument tuple for the target invocation. Defaults to (). 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> kwargs
						</dt>
						<dd>A dictionary of keyword arguments for the target invocation.
Defaults to {}. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow.test/TestCase._CheckedThread.htm">TestCase._CheckedThread</a></code>
					</dt>
					<dd>A wrapper for threading.Thread that supports start() and join() methods. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="checkedThread_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>checkedThread_dyn</strong>(<span title="System.object">object</span> target, <span title="System.object">object</span> args, <span title="System.object">object</span> kwargs)
		</h4>
		<div class="content">Returns a Thread wrapper that asserts 'target' completes successfully. <p></p> This method should be used to create all threads in test cases, as
otherwise there is a risk that a thread will silently fail, and/or
assertions made in the thread will not be respected. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> target
						</dt>
						<dd>A callable object to be executed in the thread. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> args
						</dt>
						<dd>The argument tuple for the target invocation. Defaults to (). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> kwargs
						</dt>
						<dd>A dictionary of keyword arguments for the target invocation.
Defaults to {}. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A wrapper for threading.Thread that supports start() and join() methods. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="evaluate" class="method">
		<h4>
			<span title="System.object">object</span> <strong>evaluate</strong>(<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> tensors)
		</h4>
		<div class="content">Evaluates tensors and returns numpy values. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> tensors
						</dt>
						<dd>A Tensor or a nested list/tuple of Tensors. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>tensors numpy values. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_temp_dir" class="method">
		<h4>
			<span title="System.string">string</span> <strong>get_temp_dir</strong>()
		</h4>
		<div class="content">Returns a unique temporary directory for the test to use. <p></p> If you call this method multiple times during in a test, it will return the
same folder. However, across different runs the directories will be
different. This will ensure that across different runs tests will not be
able to pollute each others environment.
If you need multiple unique directories within a single test, you should
use tempfile.mkdtemp as follows:
tempfile.mkdtemp(dir=self.get_temp_dir()): 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.string">string</span></code>
					</dt>
					<dd>string, the path to the unique temporary directory created for this test. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_temp_dir_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_temp_dir_dyn</strong>()
		</h4>
		<div class="content">Returns a unique temporary directory for the test to use. <p></p> If you call this method multiple times during in a test, it will return the
same folder. However, across different runs the directories will be
different. This will ensure that across different runs tests will not be
able to pollute each others environment.
If you need multiple unique directories within a single test, you should
use tempfile.mkdtemp as follows:
tempfile.mkdtemp(dir=self.get_temp_dir()): 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>string, the path to the unique temporary directory created for this test. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="session" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>session</strong>(<a href="../tensorflow/Graph.htm">Graph</a> graph, <span title="System.object">object</span> config, <span title="System.bool">bool</span> use_gpu, <span title="System.bool">bool</span> force_gpu)
		</h4>
		<div class="content">Returns a TensorFlow Session for use in executing tests. <p></p> Note that this will set this session and the graph as global defaults. <p></p> Use the `use_gpu` and `force_gpu` options to control where ops are run. If
`force_gpu` is True, all ops are pinned to `/device:GPU:0`. Otherwise, if
`use_gpu` is True, TensorFlow tries to run as many ops on the GPU as
possible. If both `force_gpu and `use_gpu` are False, all ops are pinned to
the CPU. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Graph.htm">Graph</a></code> graph
						</dt>
						<dd>Optional graph to use during the returned session. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> config
						</dt>
						<dd>An optional config_pb2.ConfigProto to use to configure the
session. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_gpu
						</dt>
						<dd>If True, attempt to run as many ops as possible on GPU. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> force_gpu
						</dt>
						<dd>If True, pin all ops to `/device:GPU:0`. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                with self.session(use_gpu=True):
                  valid_input = [1.0, 2.0, 3.0, 4.0, 5.0]
                  result = MyOperator(valid_input).eval()
                  self.assertEqual(result, [1.0, 2.0, 3.0, 5.0, 8.0]
                  invalid_input = [-1.0, 2.0, 7.0]
                  with self.assertRaisesOpError("negative input not supported"):
                    MyOperator(invalid_input).eval() </pre>
</div>
		</div>
	</div>
	<div id="session_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>session_dyn</strong>(<span title="System.object">object</span> graph, <span title="System.object">object</span> config, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> use_gpu, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> force_gpu)
		</h4>
		<div class="content">Returns a TensorFlow Session for use in executing tests. <p></p> Note that this will set this session and the graph as global defaults. <p></p> Use the `use_gpu` and `force_gpu` options to control where ops are run. If
`force_gpu` is True, all ops are pinned to `/device:GPU:0`. Otherwise, if
`use_gpu` is True, TensorFlow tries to run as many ops on the GPU as
possible. If both `force_gpu and `use_gpu` are False, all ops are pinned to
the CPU. <p></p> Example: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph
						</dt>
						<dd>Optional graph to use during the returned session. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> config
						</dt>
						<dd>An optional config_pb2.ConfigProto to use to configure the
session. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> use_gpu
						</dt>
						<dd>If True, attempt to run as many ops as possible on GPU. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> force_gpu
						</dt>
						<dd>If True, pin all ops to `/device:GPU:0`. 
						</dd>
				</dl>
			</div>

<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>class MyOperatorTest(test_util.TensorFlowTestCase):
              def testMyOperator(self):
                with self.session(use_gpu=True):
                  valid_input = [1.0, 2.0, 3.0, 4.0, 5.0]
                  result = MyOperator(valid_input).eval()
                  self.assertEqual(result, [1.0, 2.0, 3.0, 5.0, 8.0]
                  invalid_input = [-1.0, 2.0, 7.0]
                  with self.assertRaisesOpError("negative input not supported"):
                    MyOperator(invalid_input).eval() </pre>
</div>
		</div>
	</div>
	<div id="test_session" class="method">
		<h4>
			<a href="../LostTech.Gradient/IContextManager`1.htm">IContextManager&lt;T&gt;</a> <strong>test_session</strong>(<a href="../tensorflow/Graph.htm">Graph</a> graph, <span title="System.object">object</span> config, <span title="System.bool">bool</span> use_gpu, <span title="System.bool">bool</span> force_gpu)
		</h4>
		<div class="content">Use cached_session instead. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Use `self.session()` or `self.cached_session()` instead. 




		</div>
	</div>
	<div id="test_session_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>test_session_dyn</strong>(<span title="System.object">object</span> graph, <span title="System.object">object</span> config, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> use_gpu, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> force_gpu)
		</h4>
		<div class="content">Use cached_session instead. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Use `self.session()` or `self.cached_session()` instead. 




		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="assertItemsEqual" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertItemsEqual</strong> get; set;
		</h4>
		<div class="content">An unordered sequence comparison asserting that the same elements,
regardless of order.  If the same element occurs more than once,
it verifies that the elements occur the same number of times. <p></p> self.assertEqual(Counter(list(first)),
Counter(list(second))) <p></p> Example:
- [0, 1, 1] and [1, 0, 1] compare equal.
- [0, 0, 1] and [0, 1] compare unequal. 

		</div>
	</div>
	<div id="assertItemsEqual_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertItemsEqual_dyn</strong> get; set;
		</h4>
		<div class="content">An unordered sequence comparison asserting that the same elements,
regardless of order.  If the same element occurs more than once,
it verifies that the elements occur the same number of times. <p></p> self.assertEqual(Counter(list(first)),
Counter(list(second))) <p></p> Example:
- [0, 1, 1] and [1, 0, 1] compare equal.
- [0, 0, 1] and [0, 1] compare unequal. 

		</div>
	</div>
	<div id="assertRaisesRegexp_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assertRaisesRegexp_dyn</strong> get; set;
		</h4>
		<div class="content">Asserts that the message in a raised exception matches a regex. 

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>