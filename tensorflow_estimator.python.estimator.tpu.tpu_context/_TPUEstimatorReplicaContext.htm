<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>_TPUEstimatorReplicaContext - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow_estimator.python.estimator.tpu.tpu_context</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_InternalTPUContext.htm">_InternalTPUContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_OneCoreTPUContext.htm">_OneCoreTPUContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm" class="current">_TPUEstimatorReplicaContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/I_InternalTPUContext.htm">I_InternalTPUContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/I_OneCoreTPUContext.htm">I_OneCoreTPUContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/I_TPUEstimatorReplicaContext.htm">I_TPUEstimatorReplicaContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/ITPUContext.htm">ITPUContext</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/tpu_context.htm">tpu_context</a>
        </li>
				<li>
            <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/TPUContext.htm">TPUContext</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> _TPUEstimatorReplicaContext</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow_estimator.python.estimator.tpu.tpu_context</p>
		<p><strong>Parent</strong> <a href="../tensorflow.distribute/ReplicaContext.htm">ReplicaContext</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/I_TPUEstimatorReplicaContext.htm">I_TPUEstimatorReplicaContext</a></p>
		</header>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#__enter___dyn">__enter___dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#__exit___dyn">__exit___dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#all_reduce">all_reduce</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#all_reduce_dyn">all_reduce_dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#merge_call">merge_call</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#merge_call_dyn">merge_call_dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#Use">Use</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#Use">Use</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#UseSelf">UseSelf</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#devices">devices</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#devices_dyn">devices_dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#num_replicas_in_sync">num_replicas_in_sync</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#num_replicas_in_sync_dyn">num_replicas_in_sync_dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#replica_id_in_sync_group">replica_id_in_sync_group</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#replica_id_in_sync_group_dyn">replica_id_in_sync_group_dyn</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#strategy">strategy</a></li>
				<li><a href="../tensorflow_estimator.python.estimator.tpu.tpu_context/_TPUEstimatorReplicaContext.htm#strategy_dyn">strategy_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="__enter___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__enter___dyn</strong>()
		</h4>
		<div class="content">Make usable with "with" statement. 




		</div>
	</div>
	<div id="__exit___dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>__exit___dyn</strong>(<span title="System.object">object</span> exception_type, <span title="System.object">object</span> exception_value, <span title="System.object">object</span> traceback)
		</h4>
		<div class="content">Make usable with "with" statement. 




		</div>
	</div>
	<div id="all_reduce" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>all_reduce</strong>(<span title="System.object">object</span> reduce_op, <span title="System.ValueTuple">ValueTuple</span> value)
		</h4>
		<div class="content">All-reduces the given `value Tensor` nest across replicas. <p></p> If `all_reduce` is called in any replica, it must be called in all replicas.
The nested structure and `Tensor` shapes must be identical in all replicas. <p></p> IMPORTANT: The ordering of communications must be identical in all replicas. <p></p> Example with two replicas:
Replica 0 `value`: {'a': 1, 'b': [40, 1]}
Replica 1 `value`: {'a': 3, 'b': [ 2, 98]} <p></p> If `reduce_op` == `SUM`:
Result (on all replicas): {'a': 4, 'b': [42, 99]} <p></p> If `reduce_op` == `MEAN`:
Result (on all replicas): {'a': 2, 'b': [21, 49.5]} 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> reduce_op
						</dt>
						<dd>Reduction type, an instance of <a href="..\..\tf\distribute\ReduceOp.md"><code>tf.distribute.ReduceOp</code></a> enum. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple">ValueTuple</span></code> value
						</dt>
						<dd>The nested structure of `Tensor`s to all-reduce. The structure must
be compatible with <a href="..\..\tf\nest.md"><code>tf.nest</code></a>. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A `Tensor` nest with the reduced `value`s from each replica. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="all_reduce_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>all_reduce_dyn</strong>(<span title="System.object">object</span> reduce_op, <span title="System.object">object</span> value)
		</h4>
		<div class="content">All-reduces the given `value Tensor` nest across replicas. <p></p> If `all_reduce` is called in any replica, it must be called in all replicas.
The nested structure and `Tensor` shapes must be identical in all replicas. <p></p> IMPORTANT: The ordering of communications must be identical in all replicas. <p></p> Example with two replicas:
Replica 0 `value`: {'a': 1, 'b': [40, 1]}
Replica 1 `value`: {'a': 3, 'b': [ 2, 98]} <p></p> If `reduce_op` == `SUM`:
Result (on all replicas): {'a': 4, 'b': [42, 99]} <p></p> If `reduce_op` == `MEAN`:
Result (on all replicas): {'a': 2, 'b': [21, 49.5]} 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> reduce_op
						</dt>
						<dd>Reduction type, an instance of <a href="..\..\tf\distribute\ReduceOp.md"><code>tf.distribute.ReduceOp</code></a> enum. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> value
						</dt>
						<dd>The nested structure of `Tensor`s to all-reduce. The structure must
be compatible with <a href="..\..\tf\nest.md"><code>tf.nest</code></a>. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Tensor` nest with the reduced `value`s from each replica. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_call" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_call</strong>(<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> merge_fn, <span title="System.ValueTuple<object>">ValueTuple&lt;object&gt;</span> args, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> kwargs)
		</h4>
		<div class="content">Merge args across replicas and run `merge_fn` in a cross-replica context. <p></p> This allows communication and coordination when there are multiple calls
to the step_fn triggered by a call to
`strategy.experimental_run_v2(step_fn,...)`. <p></p> See <a href="..\..\tf\distribute\MirroredStrategy\experimental_run_v2.md"><code>tf.distribute.Strategy.experimental_run_v2</code></a> for an
explanation. <p></p> If not inside a distributed scope, this is equivalent to: <p></p> ```
strategy = tf.distribute.get_strategy()
with cross-replica-context(strategy):
return merge_fn(strategy, *args, **kwargs)
``` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> merge_fn
						</dt>
						<dd>Function that joins arguments from threads that are given as
PerReplica. It accepts <a href="..\..\tf\distribute\Strategy.md"><code>tf.distribute.Strategy</code></a> object as
the first argument. 
						</dd>
						<dt>
							<code><span title="System.ValueTuple<object>">ValueTuple&lt;object&gt;</span></code> args
						</dt>
						<dd>List or tuple with positional per-thread arguments for `merge_fn`. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> kwargs
						</dt>
						<dd>Dict with keyword per-thread arguments for `merge_fn`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The return value of `merge_fn`, except for `PerReplica` values which are
unpacked. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="merge_call_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>merge_call_dyn</strong>(<span title="System.object">object</span> merge_fn, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> args, <span title="System.object">object</span> kwargs)
		</h4>
		<div class="content">Merge args across replicas and run `merge_fn` in a cross-replica context. <p></p> This allows communication and coordination when there are multiple calls
to the step_fn triggered by a call to
`strategy.experimental_run_v2(step_fn,...)`. <p></p> See <a href="..\..\tf\distribute\MirroredStrategy\experimental_run_v2.md"><code>tf.distribute.Strategy.experimental_run_v2</code></a> for an
explanation. <p></p> If not inside a distributed scope, this is equivalent to: <p></p> ```
strategy = tf.distribute.get_strategy()
with cross-replica-context(strategy):
return merge_fn(strategy, *args, **kwargs)
``` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> merge_fn
						</dt>
						<dd>Function that joins arguments from threads that are given as
PerReplica. It accepts <a href="..\..\tf\distribute\Strategy.md"><code>tf.distribute.Strategy</code></a> object as
the first argument. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> args
						</dt>
						<dd>List or tuple with positional per-thread arguments for `merge_fn`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> kwargs
						</dt>
						<dd>Dict with keyword per-thread arguments for `merge_fn`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The return value of `merge_fn`, except for `PerReplica` values which are
unpacked. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="Use" class="method">
		<h4>
			<span title="System.void">void</span> <strong>Use</strong>(<span title="System.Action<object>">Action&lt;object&gt;</span> action)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="Use" class="method">
		<h4>
			<span title="System.void">void</span> <strong>Use</strong>(<span title="System.Action<ReplicaContext, object>">Action&lt;ReplicaContext, object&gt;</span> action)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="UseSelf" class="method">
		<h4>
			<span title="System.void">void</span> <strong>UseSelf</strong>(<span title="System.Action<ReplicaContext>">Action&lt;ReplicaContext&gt;</span> action)
		</h4>
		<div class="content">




		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="devices" class="method">
		<h4>
			<span title="System.object">object</span> <strong>devices</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="devices_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>devices_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="num_replicas_in_sync" class="method">
		<h4>
			<span title="System.object">object</span> <strong>num_replicas_in_sync</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="num_replicas_in_sync_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>num_replicas_in_sync_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="replica_id_in_sync_group" class="method">
		<h4>
			<span title="System.object">object</span> <strong>replica_id_in_sync_group</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="replica_id_in_sync_group_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>replica_id_in_sync_group_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="strategy" class="method">
		<h4>
			<span title="System.object">object</span> <strong>strategy</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="strategy_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>strategy_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>