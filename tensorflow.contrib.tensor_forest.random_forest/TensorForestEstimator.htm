<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>TensorForestEstimator - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.contrib.tensor_forest.random_forest</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/CoreTensorForestEstimator.htm">CoreTensorForestEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/ICoreTensorForestEstimator.htm">ICoreTensorForestEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/IModelBuilderOutputType.htm">IModelBuilderOutputType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/IMultiForestMultiHeadEstimator.htm">IMultiForestMultiHeadEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/ITensorForestEstimator.htm">ITensorForestEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/ITensorForestLossHook.htm">ITensorForestLossHook</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/ITensorForestRunOpAtEndHook.htm">ITensorForestRunOpAtEndHook</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/ModelBuilderOutputType.htm">ModelBuilderOutputType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/MultiForestMultiHeadEstimator.htm">MultiForestMultiHeadEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/random_forest.htm">random_forest</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm" class="current">TensorForestEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestLossHook.htm">TensorForestLossHook</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestRunOpAtEndHook.htm">TensorForestRunOpAtEndHook</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> TensorForestEstimator</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.contrib.tensor_forest.random_forest</p>
		<p><strong>Parent</strong> <a href="../tensorflow.contrib.learn/Estimator.htm">Estimator</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.contrib.tensor_forest.random_forest/ITensorForestEstimator.htm">ITensorForestEstimator</a></p>
		</header>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#evaluate">evaluate</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#evaluate">evaluate</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#evaluate_dyn">evaluate_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#evaluate_dyn">evaluate_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export">export</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export_dyn">export_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export_savedmodel">export_savedmodel</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#export_savedmodel_dyn">export_savedmodel_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit">fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#fit_dyn">fit_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#get_params">get_params</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#get_params_dyn">get_params_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#NewDyn">NewDyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#partial_fit">partial_fit</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#partial_fit_dyn">partial_fit_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#predict">predict</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#predict">predict</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#predict_dyn">predict_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#config">config</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#config_dyn">config_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#model_dir">model_dir</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#model_dir_dyn">model_dir_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#model_fn">model_fn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#model_fn_dyn">model_fn_dyn</a></li>
				<li><a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm#PythonObject">PythonObject</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="evaluate" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, object>">IDictionary&lt;object, object&gt;</span> <strong>evaluate</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> feed_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Collections.Generic.IDictionary<string, MetricSpec>">IDictionary&lt;string, MetricSpec&gt;</span> metrics, <span title="System.string">string</span> name, <span title="System.string">string</span> checkpoint_path, <span title="System.Collections.Generic.IEnumerable<SessionRunHook>">IEnumerable&lt;SessionRunHook&gt;</span> hooks)
		</h4>
		<div class="content">See evaluable.Evaluable. 




		</div>
	</div>
	<div id="evaluate" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, object>">IDictionary&lt;object, object&gt;</span> <strong>evaluate</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> feed_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Collections.Generic.IDictionary<string, MetricSpec>">IDictionary&lt;string, MetricSpec&gt;</span> metrics, <span title="System.string">string</span> name, <span title="System.string">string</span> checkpoint_path, <span title="System.Collections.Generic.IEnumerable<SessionRunHook>">IEnumerable&lt;SessionRunHook&gt;</span> hooks, <span title="System.bool">bool</span> log_progress)
		</h4>
		<div class="content">See `Evaluable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="evaluate_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>evaluate_dyn</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <span title="System.object">object</span> input_fn, <span title="System.object">object</span> feed_fn, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> steps, <span title="System.object">object</span> metrics, <span title="System.object">object</span> name, <span title="System.object">object</span> checkpoint_path, <span title="System.object">object</span> hooks)
		</h4>
		<div class="content">See evaluable.Evaluable. 




		</div>
	</div>
	<div id="evaluate_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>evaluate_dyn</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <span title="System.object">object</span> input_fn, <span title="System.object">object</span> feed_fn, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> steps, <span title="System.object">object</span> metrics, <span title="System.object">object</span> name, <span title="System.object">object</span> checkpoint_path, <span title="System.object">object</span> hooks, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> log_progress)
		</h4>
		<div class="content">See `Evaluable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.string">string</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.string">string</span> default_batch_size, <span title="System.string">string</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.string">string</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.int">int</span> default_batch_size, <span title="System.string">string</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.string">string</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.int">int</span> default_batch_size, <span title="System.int">int</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.string">string</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.string">string</span> default_batch_size, <span title="System.int">int</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.Byte[]">Byte[]</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.int">int</span> default_batch_size, <span title="System.int">int</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.Byte[]">Byte[]</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.string">string</span> default_batch_size, <span title="System.int">int</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.Byte[]">Byte[]</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.int">int</span> default_batch_size, <span title="System.string">string</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export</strong>(<span title="System.Byte[]">Byte[]</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.string">string</span> input_feature_key, <span title="System.bool">bool</span> use_deprecated_input_fn, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> signature_fn, <span title="System.string">string</span> prediction_key, <span title="System.string">string</span> default_batch_size, <span title="System.string">string</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Byte[]">Byte[]</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export_dyn</strong>(<span title="System.object">object</span> export_dir, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> input_fn, <span title="System.object">object</span> input_feature_key, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> use_deprecated_input_fn, <span title="System.object">object</span> signature_fn, <span title="System.object">object</span> prediction_key, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> default_batch_size, <span title="System.object">object</span> exports_to_keep, <span title="System.object">object</span> checkpoint_path)
		</h4>
		<div class="content">Exports inference graph into given dir. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2017-03-25.
Instructions for updating:
Please use Estimator.export_savedmodel() instead. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> export_dir
						</dt>
						<dd>A string containing a directory to write the exported graph
and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> input_fn
						</dt>
						<dd>If `use_deprecated_input_fn` is true, then a function that given
`Tensor` of `Example` strings, parses it into features that are then
passed to the model. Otherwise, a function that takes no argument and
returns a tuple of (features, labels), where features is a dict of
string key to `Tensor` and labels is a `Tensor` that's currently not
used (and so can be `None`). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_feature_key
						</dt>
						<dd>Only used if `use_deprecated_input_fn` is false. String
key into the features dict returned by `input_fn` that corresponds to a
the raw `Example` strings `Tensor` that the exported model will take as
input. Can only be `None` if you're using a custom `signature_fn` that
does not use the first arg (examples). 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> use_deprecated_input_fn
						</dt>
						<dd>Determines the signature format of `input_fn`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> signature_fn
						</dt>
						<dd>Function that returns a default signature and a named
signature map, given `Tensor` of `Example` strings, `dict` of `Tensor`s
for features and `Tensor` or `dict` of `Tensor`s for predictions. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> prediction_key
						</dt>
						<dd>The key for a tensor in the `predictions` dict (output
from the `model_fn`) to use as the `predictions` input to the
`signature_fn`. Optional. If `None`, predictions will pass to
`signature_fn` without filtering. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> default_batch_size
						</dt>
						<dd>Default batch size of the `Example` placeholder. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> exports_to_keep
						</dt>
						<dd>Number of exports to keep. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>the checkpoint path of the model to be exported. If it is
`None` (which is default), will use the latest checkpoint in
export_dir. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. NB: this functionality was
added ca. 2016/09/25; clients that depend on the return value may need
to handle the case where this function returns None because subclasses
are not returning a value. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export_savedmodel" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export_savedmodel</strong>(<span title="System.object">object</span> export_dir_base, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> serving_input_fn, <span title="System.object">object</span> default_output_alternative_key, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> assets_extra, <span title="System.bool">bool</span> as_text, <span title="System.object">object</span> checkpoint_path, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> graph_rewrite_specs, <span title="System.bool">bool</span> strip_default_attrs)
		</h4>
		<div class="content">Exports inference graph as a SavedModel into given dir. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> export_dir_base
						</dt>
						<dd>A string containing a directory to write the exported
graph and checkpoints. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> serving_input_fn
						</dt>
						<dd>A function that takes no argument and
returns an `InputFnOps`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> default_output_alternative_key
						</dt>
						<dd>the name of the head to serve when none is
specified.  Not needed for single-headed models. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> assets_extra
						</dt>
						<dd>A dict specifying how to populate the assets.extra directory
within the exported SavedModel.  Each key should give the destination
path (including the filename) relative to the assets.extra directory.
The corresponding value gives the full path of the source file to be
copied.  For example, the simple case of copying a single file without
renaming it is specified as
`{'my_asset_file.txt': '/path/to/my_asset_file.txt'}`. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_text
						</dt>
						<dd>whether to write the SavedModel proto in text format. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>The checkpoint path to export.  If None (the default),
the most recent checkpoint found within the model directory is chosen. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> graph_rewrite_specs
						</dt>
						<dd>an iterable of `GraphRewriteSpec`.  Each element will
produce a separate MetaGraphDef within the exported SavedModel, tagged
and rewritten as specified.  Defaults to a single entry using the
default serving tag ("serve") and no rewriting. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> strip_default_attrs
						</dt>
						<dd>Boolean. If `True`, default-valued attributes will be
removed from the NodeDefs. For a detailed guide, see
[Stripping Default-Valued
Attributes](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="export_savedmodel_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>export_savedmodel_dyn</strong>(<span title="System.object">object</span> export_dir_base, <span title="System.object">object</span> serving_input_fn, <span title="System.object">object</span> default_output_alternative_key, <span title="System.object">object</span> assets_extra, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> as_text, <span title="System.object">object</span> checkpoint_path, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> graph_rewrite_specs, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> strip_default_attrs)
		</h4>
		<div class="content">Exports inference graph as a SavedModel into given dir. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> export_dir_base
						</dt>
						<dd>A string containing a directory to write the exported
graph and checkpoints. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> serving_input_fn
						</dt>
						<dd>A function that takes no argument and
returns an `InputFnOps`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> default_output_alternative_key
						</dt>
						<dd>the name of the head to serve when none is
specified.  Not needed for single-headed models. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> assets_extra
						</dt>
						<dd>A dict specifying how to populate the assets.extra directory
within the exported SavedModel.  Each key should give the destination
path (including the filename) relative to the assets.extra directory.
The corresponding value gives the full path of the source file to be
copied.  For example, the simple case of copying a single file without
renaming it is specified as
`{'my_asset_file.txt': '/path/to/my_asset_file.txt'}`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> as_text
						</dt>
						<dd>whether to write the SavedModel proto in text format. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> checkpoint_path
						</dt>
						<dd>The checkpoint path to export.  If None (the default),
the most recent checkpoint found within the model directory is chosen. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> graph_rewrite_specs
						</dt>
						<dd>an iterable of `GraphRewriteSpec`.  Each element will
produce a separate MetaGraphDef within the exported SavedModel, tagged
and rewritten as specified.  Defaults to a single entry using the
default serving tag ("serve") and no rewriting. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> strip_default_attrs
						</dt>
						<dd>Boolean. If `True`, default-valued attributes will be
removed from the NodeDefs. For a detailed guide, see
[Stripping Default-Valued
Attributes](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md#stripping-default-valued-attributes). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The string path to the exported directory. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<a href="../numpy/ndarray.htm">ndarray</a> x, <a href="../numpy/ndarray.htm">ndarray</a> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.object">object</span> x, <span title="System.Collections.Generic.IEnumerator<ndarray>">IEnumerator&lt;ndarray&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.object">object</span> x, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.object">object</span> x, <a href="../numpy/ndarray.htm">ndarray</a> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <a href="../numpy/ndarray.htm">ndarray</a> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<a href="../numpy/ndarray.htm">ndarray</a> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<a href="../numpy/ndarray.htm">ndarray</a> x, <span title="System.Collections.Generic.IEnumerator<ndarray>">IEnumerator&lt;ndarray&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<a href="../numpy/ndarray.htm">ndarray</a> x, <span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <span title="System.Collections.Generic.IEnumerator<ndarray>">IEnumerator&lt;ndarray&gt;</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> steps, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<BaseMonitor>">IEnumerable&lt;BaseMonitor&gt;</span> monitors, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="fit_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>fit_dyn</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <span title="System.object">object</span> input_fn, <span title="System.object">object</span> steps, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> monitors, <span title="System.object">object</span> max_steps)
		</h4>
		<div class="content">See `Trainable`. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 




		</div>
	</div>
	<div id="get_params" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, object>">IDictionary&lt;object, object&gt;</span> <strong>get_params</strong>(<span title="System.bool">bool</span> deep)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="get_params_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_params_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> deep)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="partial_fit" class="method">
		<h4>
			<span title="System.object">object</span> <strong>partial_fit</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.int">int</span> steps, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> monitors)
		</h4>
		<div class="content">Incremental fit on a batch of samples. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) <p></p> This method is expected to be called several times consecutively
on different or the same chunks of the dataset. This either can
implement iterative training or out-of-core/online training. <p></p> This is especially useful when the whole dataset is too big to
fit in memory at the same time. Or when model is taking long time
to converge, and you want to split up training into subparts. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> x
						</dt>
						<dd>Matrix of shape [n_samples, n_features...]. Can be iterator that
returns arrays of features. The training input samples for fitting the
model. If set, `input_fn` must be `None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> y
						</dt>
						<dd>Vector or matrix [n_samples] or [n_samples, n_outputs]. Can be
iterator that returns array of labels. The training label values
(class labels in classification, real numbers in regression). If set,
`input_fn` must be `None`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> input_fn
						</dt>
						<dd>Input function. If set, `x`, `y`, and `batch_size` must be
`None`. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> steps
						</dt>
						<dd>Number of steps for which to train model. If `None`, train forever. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> batch_size
						</dt>
						<dd>minibatch size to use on the input, defaults to first
dimension of `x`. Must be `None` if `input_fn` is provided. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> monitors
						</dt>
						<dd>List of `BaseMonitor` subclass instances. Used for callbacks
inside the training loop. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`self`, for chaining. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="partial_fit_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>partial_fit_dyn</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> y, <span title="System.object">object</span> input_fn, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> steps, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> monitors)
		</h4>
		<div class="content">Incremental fit on a batch of samples. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(batch_size, x, y)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) <p></p> This method is expected to be called several times consecutively
on different or the same chunks of the dataset. This either can
implement iterative training or out-of-core/online training. <p></p> This is especially useful when the whole dataset is too big to
fit in memory at the same time. Or when model is taking long time
to converge, and you want to split up training into subparts. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> x
						</dt>
						<dd>Matrix of shape [n_samples, n_features...]. Can be iterator that
returns arrays of features. The training input samples for fitting the
model. If set, `input_fn` must be `None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> y
						</dt>
						<dd>Vector or matrix [n_samples] or [n_samples, n_outputs]. Can be
iterator that returns array of labels. The training label values
(class labels in classification, real numbers in regression). If set,
`input_fn` must be `None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_fn
						</dt>
						<dd>Input function. If set, `x`, `y`, and `batch_size` must be
`None`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> steps
						</dt>
						<dd>Number of steps for which to train model. If `None`, train forever. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> batch_size
						</dt>
						<dd>minibatch size to use on the input, defaults to first
dimension of `x`. Must be `None` if `input_fn` is provided. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> monitors
						</dt>
						<dd>List of `BaseMonitor` subclass instances. Used for callbacks
inside the training loop. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`self`, for chaining. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="predict" class="method">
		<h4>
			<span title="System.object">object</span> <strong>predict</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.int">int</span> batch_size, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> outputs, <span title="System.bool">bool</span> as_iterable, <span title="System.bool">bool</span> iterate_batches)
		</h4>
		<div class="content">Returns predictions for given features. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(as_iterable, batch_size, x)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> x
						</dt>
						<dd>Matrix of shape [n_samples, n_features...]. Can be iterator that
returns arrays of features. The training input samples for fitting the
model. If set, `input_fn` must be `None`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> input_fn
						</dt>
						<dd>Input function. If set, `x` and 'batch_size' must be `None`. 
						</dd>
						<dt>
							<code><span title="System.int">int</span></code> batch_size
						</dt>
						<dd>Override default batch size. If set, 'input_fn' must be
'None'. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> outputs
						</dt>
						<dd>list of `str`, name of the output to predict.
If `None`, returns all. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_iterable
						</dt>
						<dd>If True, return an iterable which keeps yielding predictions
for each example until inputs are exhausted. Note: The inputs must
terminate if you want the iterable to terminate (e.g. be sure to pass
num_epochs=1 if you are using something like read_batch_features). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> iterate_batches
						</dt>
						<dd>If True, yield the whole batch at once instead of
decomposing the batch into individual samples. Only relevant when
as_iterable is True. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A numpy array of predicted classes or regression values if the
constructor's `model_fn` returns a `Tensor` for `predictions` or a `dict`
of numpy arrays if `model_fn` returns a `dict`. Returns an iterable of
predictions if as_iterable is True. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="predict" class="method">
		<h4>
			<span title="System.object">object</span> <strong>predict</strong>(<span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span> x, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> input_fn, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> batch_size, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> outputs, <span title="System.bool">bool</span> as_iterable, <span title="System.bool">bool</span> iterate_batches)
		</h4>
		<div class="content">Returns predictions for given features. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(as_iterable, batch_size, x)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, object>">IDictionary&lt;string, object&gt;</span></code> x
						</dt>
						<dd>Matrix of shape [n_samples, n_features...]. Can be iterator that
returns arrays of features. The training input samples for fitting the
model. If set, `input_fn` must be `None`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> input_fn
						</dt>
						<dd>Input function. If set, `x` and 'batch_size' must be `None`. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> batch_size
						</dt>
						<dd>Override default batch size. If set, 'input_fn' must be
'None'. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> outputs
						</dt>
						<dd>list of `str`, name of the output to predict.
If `None`, returns all. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> as_iterable
						</dt>
						<dd>If True, return an iterable which keeps yielding predictions
for each example until inputs are exhausted. Note: The inputs must
terminate if you want the iterable to terminate (e.g. be sure to pass
num_epochs=1 if you are using something like read_batch_features). 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> iterate_batches
						</dt>
						<dd>If True, yield the whole batch at once instead of
decomposing the batch into individual samples. Only relevant when
as_iterable is True. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A numpy array of predicted classes or regression values if the
constructor's `model_fn` returns a `Tensor` for `predictions` or a `dict`
of numpy arrays if `model_fn` returns a `dict`. Returns an iterable of
predictions if as_iterable is True. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="predict_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>predict_dyn</strong>(<span title="System.object">object</span> x, <span title="System.object">object</span> input_fn, <span title="System.object">object</span> batch_size, <span title="System.object">object</span> outputs, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> as_iterable, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> iterate_batches)
		</h4>
		<div class="content">Returns predictions for given features. (deprecated arguments) <p></p> Warning: SOME ARGUMENTS ARE DEPRECATED: `(as_iterable, batch_size, x)`. They will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -> est = SKCompat(Estimator(...)) 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> x
						</dt>
						<dd>Matrix of shape [n_samples, n_features...]. Can be iterator that
returns arrays of features. The training input samples for fitting the
model. If set, `input_fn` must be `None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_fn
						</dt>
						<dd>Input function. If set, `x` and 'batch_size' must be `None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> batch_size
						</dt>
						<dd>Override default batch size. If set, 'input_fn' must be
'None'. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> outputs
						</dt>
						<dd>list of `str`, name of the output to predict.
If `None`, returns all. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> as_iterable
						</dt>
						<dd>If True, return an iterable which keeps yielding predictions
for each example until inputs are exhausted. Note: The inputs must
terminate if you want the iterable to terminate (e.g. be sure to pass
num_epochs=1 if you are using something like read_batch_features). 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> iterate_batches
						</dt>
						<dd>If True, yield the whole batch at once instead of
decomposing the batch into individual samples. Only relevant when
as_iterable is True. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A numpy array of predicted classes or regression values if the
constructor's `model_fn` returns a `Tensor` for `predictions` or a `dict`
of numpy arrays if `model_fn` returns a `dict`. Returns an iterable of
predictions if as_iterable is True. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public static methods</h3>

	<div id="NewDyn" class="method">
		<h4>
			<a href="../tensorflow.contrib.tensor_forest.random_forest/TensorForestEstimator.htm">TensorForestEstimator</a> <strong>NewDyn</strong>(<span title="System.object">object</span> params, <span title="System.object">object</span> device_assigner, <span title="System.object">object</span> model_dir, <span title="System.object">object</span> feature_columns, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> graph_builder_class, <span title="System.object">object</span> config, <span title="System.object">object</span> weight_column, <span title="System.object">object</span> keys_column, <span title="System.object">object</span> feature_engineering_fn, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> early_stopping_rounds, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> early_stopping_loss_threshold, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> num_trainers, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> trainer_id, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> report_feature_importances, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> local_eval, <span title="System.object">object</span> version, <span title="System.object">object</span> head, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> include_all_in_serving)
		</h4>
		<div class="content">




		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="config" class="method">
		<h4>
			<span title="System.object">object</span> <strong>config</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="config_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>config_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="model_dir" class="method">
		<h4>
			<span title="System.string">string</span> <strong>model_dir</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="model_dir_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>model_dir_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="model_fn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>model_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="model_fn_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>model_fn_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>