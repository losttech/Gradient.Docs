<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>feature_column - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.compat.v2.feature_column</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.compat.v2.feature_column/feature_column.htm" class="current">feature_column</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> feature_column</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.compat.v2.feature_column</p>
		</header>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file">categorical_column_with_vocabulary_file</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file_dyn">categorical_column_with_vocabulary_file_dyn</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#make_parse_example_spec">make_parse_example_spec</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#make_parse_example_spec">make_parse_example_spec</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#make_parse_example_spec_dyn">make_parse_example_spec_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#categorical_column_with_vocabulary_file_fn_">categorical_column_with_vocabulary_file_fn_</a></li>
				<li><a href="../tensorflow.compat.v2.feature_column/feature_column.htm#make_parse_example_spec_fn">make_parse_example_spec_fn</a></li>
			</ul>
		
	</div>
	
	
	<h3 class="section">Public static methods</h3>

	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> key, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> key, <span title="System.int">int</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> key, <span title="System.string">string</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.string">string</span> key, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.string">string</span> key, <span title="System.int">int</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file" class="method">
		<h4>
			<a href="../tensorflow.python.feature_column.feature_column_v2/VocabularyFileCategoricalColumn.htm">VocabularyFileCategoricalColumn</a> <strong>categorical_column_with_vocabulary_file</strong>(<span title="System.string">string</span> key, <span title="System.string">string</span> vocabulary_file, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.Nullable<int>">Nullable&lt;int&gt;</span> default_value, <span title="System.int">int</span> num_oov_buckets)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="categorical_column_with_vocabulary_file_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>categorical_column_with_vocabulary_file_dyn</strong>(<span title="System.object">object</span> key, <span title="System.object">object</span> vocabulary_file, <span title="System.object">object</span> vocabulary_size, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> dtype, <span title="System.object">object</span> default_value, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> num_oov_buckets)
		</h4>
		<div class="content">A `CategoricalColumn` with a vocabulary file. <p></p> Use this when your inputs are in string or integer format, and you have a
vocabulary file that maps each value to an integer ID. By default,
out-of-vocabulary values are ignored. Use either (but not both) of
`num_oov_buckets` and `default_value` to specify how to include
out-of-vocabulary values. <p></p> For input dictionary `features`, `features[key]` is either `Tensor` or
`SparseTensor`. If `Tensor`, missing values can be represented by `-1` for int
and `''` for string, which will be dropped by this feature column. <p></p> Example with `num_oov_buckets`:
File '/us/states.txt' contains 50 lines, each with a 2-character U.S. state
abbreviation. All inputs with values in that file are assigned an ID 0-49,
corresponding to its line number. All other values are hashed and assigned an
ID 50-54.
Example with `default_value`:
File '/us/states.txt' contains 51 lines - the first line is 'XX', and the
other 50 each have a 2-character U.S. state abbreviation. Both a literal 'XX'
in input, and other values missing from the file, will be assigned ID 0. All
others are assigned the corresponding line number 1-50.
And to make an embedding with either: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> key
						</dt>
						<dd>A unique string identifying the input feature. It is used as the
column name and the dictionary key for feature parsing configs, feature
`Tensor` objects, and feature columns. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> vocabulary_file
						</dt>
						<dd>The vocabulary file name. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> vocabulary_size
						</dt>
						<dd>Number of the elements in the vocabulary. This must be no
greater than length of `vocabulary_file`, if less than length, later
values are ignored. If None, it is set to the length of `vocabulary_file`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> dtype
						</dt>
						<dd>The type of features. Only string and integer types are supported. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> default_value
						</dt>
						<dd>The integer ID value to return for out-of-vocabulary feature
values, defaults to `-1`. This can not be specified with a positive
`num_oov_buckets`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> num_oov_buckets
						</dt>
						<dd>Non-negative integer, the number of out-of-vocabulary
buckets. All out-of-vocabulary inputs will be assigned IDs in the range
`[vocabulary_size, vocabulary_size+num_oov_buckets)` based on a hash of
the input value. A positive `num_oov_buckets` can not be specified with
`default_value`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `CategoricalColumn` with a vocabulary file. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre>states = categorical_column_with_vocabulary_file(
                key='states', vocabulary_file='/us/states.txt', vocabulary_size=50,
                num_oov_buckets=5)
            columns = [states,...]
            features = tf.io.parse_example(..., features=make_parse_example_spec(columns))
            linear_prediction = linear_model(features, columns) </pre>
</div>
		</div>
	</div>
	<div id="make_parse_example_spec" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, FixedLenFeature>">IDictionary&lt;object, FixedLenFeature&gt;</span> <strong>make_parse_example_spec</strong>(<span title="System.Collections.Generic.IEnumerable<HashedCategoricalColumn>">IEnumerable&lt;HashedCategoricalColumn&gt;</span> feature_columns)
		</h4>
		<div class="content">Creates parsing spec dictionary from input feature_columns. <p></p> The returned dictionary can be used as arg 'features' in
<a href="..\..\tf\io\parse_example.md"><code>tf.io.parse_example</code></a>. <p></p> Typical usage example:
For the above example, make_parse_example_spec would return the dict: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<HashedCategoricalColumn>">IEnumerable&lt;HashedCategoricalColumn&gt;</span></code> feature_columns
						</dt>
						<dd>An iterable containing all feature columns. All items
should be instances of classes derived from `_FeatureColumn`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.Collections.Generic.IDictionary<object, FixedLenFeature>">IDictionary&lt;object, FixedLenFeature&gt;</span></code>
					</dt>
					<dd>A dict mapping each feature key to a `FixedLenFeature` or `VarLenFeature`
value. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Define features and transformations
            feature_a = categorical_column_with_vocabulary_file(...)
            feature_b = numeric_column(...)
            feature_c_bucketized = bucketized_column(numeric_column("feature_c"),...)
            feature_a_x_feature_c = crossed_column(
                columns=["feature_a", feature_c_bucketized],...) <p></p> feature_columns = set(
    [feature_b, feature_c_bucketized, feature_a_x_feature_c])
features = tf.io.parse_example(
    serialized=serialized_examples,
    features=make_parse_example_spec(feature_columns)) </pre>
</div>
		</div>
	</div>
	<div id="make_parse_example_spec" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<object, FixedLenFeature>">IDictionary&lt;object, FixedLenFeature&gt;</span> <strong>make_parse_example_spec</strong>(<span title="System.ValueTuple<object, string>">ValueTuple&lt;object, string&gt;</span> feature_columns)
		</h4>
		<div class="content">Creates parsing spec dictionary from input feature_columns. <p></p> The returned dictionary can be used as arg 'features' in
<a href="..\..\tf\io\parse_example.md"><code>tf.io.parse_example</code></a>. <p></p> Typical usage example:
For the above example, make_parse_example_spec would return the dict: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.ValueTuple<object, string>">ValueTuple&lt;object, string&gt;</span></code> feature_columns
						</dt>
						<dd>An iterable containing all feature columns. All items
should be instances of classes derived from `_FeatureColumn`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.Collections.Generic.IDictionary<object, FixedLenFeature>">IDictionary&lt;object, FixedLenFeature&gt;</span></code>
					</dt>
					<dd>A dict mapping each feature key to a `FixedLenFeature` or `VarLenFeature`
value. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Define features and transformations
            feature_a = categorical_column_with_vocabulary_file(...)
            feature_b = numeric_column(...)
            feature_c_bucketized = bucketized_column(numeric_column("feature_c"),...)
            feature_a_x_feature_c = crossed_column(
                columns=["feature_a", feature_c_bucketized],...) <p></p> feature_columns = set(
    [feature_b, feature_c_bucketized, feature_a_x_feature_c])
features = tf.io.parse_example(
    serialized=serialized_examples,
    features=make_parse_example_spec(feature_columns)) </pre>
</div>
		</div>
	</div>
	<div id="make_parse_example_spec_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>make_parse_example_spec_dyn</strong>(<span title="System.object">object</span> feature_columns)
		</h4>
		<div class="content">Creates parsing spec dictionary from input feature_columns. <p></p> The returned dictionary can be used as arg 'features' in
<a href="..\..\tf\io\parse_example.md"><code>tf.io.parse_example</code></a>. <p></p> Typical usage example:
For the above example, make_parse_example_spec would return the dict: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> feature_columns
						</dt>
						<dd>An iterable containing all feature columns. All items
should be instances of classes derived from `_FeatureColumn`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A dict mapping each feature key to a `FixedLenFeature` or `VarLenFeature`
value. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Define features and transformations
            feature_a = categorical_column_with_vocabulary_file(...)
            feature_b = numeric_column(...)
            feature_c_bucketized = bucketized_column(numeric_column("feature_c"),...)
            feature_a_x_feature_c = crossed_column(
                columns=["feature_a", feature_c_bucketized],...) <p></p> feature_columns = set(
    [feature_b, feature_c_bucketized, feature_a_x_feature_c])
features = tf.io.parse_example(
    serialized=serialized_examples,
    features=make_parse_example_spec(feature_columns)) </pre>
</div>
		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="categorical_column_with_vocabulary_file_fn_" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>categorical_column_with_vocabulary_file_fn_</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="make_parse_example_spec_fn" class="method">
		<h4>
			<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> <strong>make_parse_example_spec_fn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>