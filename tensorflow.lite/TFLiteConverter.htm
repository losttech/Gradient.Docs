<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>TFLiteConverter - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.lite</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.lite/IOptimize.htm">IOptimize</a>
        </li>
				<li>
            <a href="../tensorflow.lite/IRepresentativeDataset.htm">IRepresentativeDataset</a>
        </li>
				<li>
            <a href="../tensorflow.lite/ITargetSpec.htm">ITargetSpec</a>
        </li>
				<li>
            <a href="../tensorflow.lite/ITFLiteConverter.htm">ITFLiteConverter</a>
        </li>
				<li>
            <a href="../tensorflow.lite/ITocoConverter.htm">ITocoConverter</a>
        </li>
				<li>
            <a href="../tensorflow.lite/Optimize.htm">Optimize</a>
        </li>
				<li>
            <a href="../tensorflow.lite/RepresentativeDataset.htm">RepresentativeDataset</a>
        </li>
				<li>
            <a href="../tensorflow.lite/TargetSpec.htm">TargetSpec</a>
        </li>
				<li>
            <a href="../tensorflow.lite/TFLiteConverter.htm" class="current">TFLiteConverter</a>
        </li>
				<li>
            <a href="../tensorflow.lite/TocoConverter.htm">TocoConverter</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> TFLiteConverter</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.lite</p>
		<p><strong>Parent</strong> <a href="../tensorflow.lite.python.lite/TFLiteConverterBase.htm">TFLiteConverterBase</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.lite/ITFLiteConverter.htm">ITFLiteConverter</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Convert a TensorFlow model into `output_format`. <p></p> This is used to convert from a TensorFlow GraphDef, SavedModel or tf.keras
model into either a TFLite FlatBuffer or graph visualization. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_frozen_graph_dyn``1">from_frozen_graph_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_frozen_graph``1">from_frozen_graph&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_keras_model_file_dyn``1">from_keras_model_file_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_keras_model_file``1">from_keras_model_file&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_saved_model_dyn``1">from_saved_model_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_saved_model``1">from_saved_model&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_session_dyn``1">from_session_dyn&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#from_session``1">from_session&lt;TClass&gt;</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#get_input_arrays">get_input_arrays</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#get_input_arrays_dyn">get_input_arrays_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#allow_custom_ops">allow_custom_ops</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#change_concat_input_ranges">change_concat_input_ranges</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#default_ranges_stats">default_ranges_stats</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#drop_control_dependency">drop_control_dependency</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#dump_graphviz_dir">dump_graphviz_dir</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#dump_graphviz_video">dump_graphviz_video</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#experimental_enable_mlir_converter">experimental_enable_mlir_converter</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#inference_input_type">inference_input_type</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#inference_output_type">inference_output_type</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#inference_type">inference_type</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#optimizations">optimizations</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#output_format">output_format</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#quantized_input_stats">quantized_input_stats</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#reorder_across_fake_quant">reorder_across_fake_quant</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#representative_dataset">representative_dataset</a></li>
				<li><a href="../tensorflow.lite/TFLiteConverter.htm#target_spec">target_spec</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="get_input_arrays" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>get_input_arrays</strong>()
		</h4>
		<div class="content">Returns a list of the names of the input tensors. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span></code>
					</dt>
					<dd>List of strings. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="get_input_arrays_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>get_input_arrays_dyn</strong>()
		</h4>
		<div class="content">Returns a list of the names of the input tensors. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>List of strings. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public static methods</h3>

	<div id="from_frozen_graph_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>from_frozen_graph_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> graph_def_file, <span title="System.object">object</span> input_arrays, <span title="System.object">object</span> output_arrays, <span title="System.object">object</span> input_shapes)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a file containing a frozen GraphDef. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> graph_def_file
						</dt>
						<dd>Full filepath of file containing frozen GraphDef. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_frozen_graph``1" class="method">
		<h4>
			<span title="tensorflow.lite.TClass">TClass</span> <strong>from_frozen_graph&lt;TClass&gt;</strong>(<span title="System.string">string</span> graph_def_file, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> input_arrays, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> output_arrays, <span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span> input_shapes)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a file containing a frozen GraphDef. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> graph_def_file
						</dt>
						<dd>Full filepath of file containing frozen GraphDef. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.lite.TClass">TClass</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_keras_model_file_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>from_keras_model_file_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> model_file, <span title="System.object">object</span> input_arrays, <span title="System.object">object</span> input_shapes, <span title="System.object">object</span> output_arrays, <span title="System.object">object</span> custom_objects)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a tf.keras model file. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> model_file
						</dt>
						<dd>Full filepath of HDF5 file containing the tf.keras model. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. Uses input
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. Uses output
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> custom_objects
						</dt>
						<dd>Dict mapping names (strings) to custom classes or
functions to be considered during model deserialization. (default None) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_keras_model_file``1" class="method">
		<h4>
			<span title="tensorflow.lite.TClass">TClass</span> <strong>from_keras_model_file&lt;TClass&gt;</strong>(<span title="System.string">string</span> model_file, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> input_arrays, <span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span> input_shapes, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> output_arrays, <span title="System.Collections.Generic.IDictionary<string, PythonClassContainer>">IDictionary&lt;string, PythonClassContainer&gt;</span> custom_objects)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a tf.keras model file. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> model_file
						</dt>
						<dd>Full filepath of HDF5 file containing the tf.keras model. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. Uses input
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. Uses output
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, PythonClassContainer>">IDictionary&lt;string, PythonClassContainer&gt;</span></code> custom_objects
						</dt>
						<dd>Dict mapping names (strings) to custom classes or
functions to be considered during model deserialization. (default None) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.lite.TClass">TClass</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_saved_model_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>from_saved_model_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> saved_model_dir, <span title="System.object">object</span> input_arrays, <span title="System.object">object</span> input_shapes, <span title="System.object">object</span> output_arrays, <span title="System.object">object</span> tag_set, <span title="System.object">object</span> signature_key)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a SavedModel. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> saved_model_dir
						</dt>
						<dd>SavedModel directory to convert. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. Uses input
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. Uses output
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> tag_set
						</dt>
						<dd>Set of tags identifying the MetaGraphDef within the SavedModel to
analyze. All tags in the tag set must be present. (default set("serve")) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> signature_key
						</dt>
						<dd>Key identifying SignatureDef containing inputs and outputs.
(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_saved_model``1" class="method">
		<h4>
			<span title="tensorflow.lite.TClass">TClass</span> <strong>from_saved_model&lt;TClass&gt;</strong>(<span title="System.object">object</span> saved_model_dir, <span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span> input_arrays, <span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span> input_shapes, <span title="System.object">object</span> output_arrays, <span title="System.object">object</span> tag_set, <span title="System.object">object</span> signature_key)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a SavedModel. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> saved_model_dir
						</dt>
						<dd>SavedModel directory to convert. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<string>">IEnumerable&lt;string&gt;</span></code> input_arrays
						</dt>
						<dd>List of input tensors to freeze graph with. Uses input
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IDictionary<string, IEnumerable<int>>">IDictionary&lt;string, IEnumerable&lt;int&gt;&gt;</span></code> input_shapes
						</dt>
						<dd>Dict of strings representing input tensor names to list of
integers representing input shapes (e.g., {"foo" : [1, 16, 16, 3]}).
Automatically determined when input shapes is None (e.g., {"foo" :
None}). (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> output_arrays
						</dt>
						<dd>List of output tensors to freeze graph with. Uses output
arrays from SignatureDef when none are provided. (default None) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> tag_set
						</dt>
						<dd>Set of tags identifying the MetaGraphDef within the SavedModel to
analyze. All tags in the tag set must be present. (default set("serve")) 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> signature_key
						</dt>
						<dd>Key identifying SignatureDef containing inputs and outputs.
(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.lite.TClass">TClass</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_session_dyn``1" class="method">
		<h4>
			<span title="System.object">object</span> <strong>from_session_dyn&lt;TClass&gt;</strong>(<span title="System.object">object</span> sess, <span title="System.object">object</span> input_tensors, <span title="System.object">object</span> output_tensors)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a TensorFlow Session. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> sess
						</dt>
						<dd>TensorFlow Session. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> input_tensors
						</dt>
						<dd>List of input tensors. Type and shape are computed using
`foo.shape` and `foo.dtype`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> output_tensors
						</dt>
						<dd>List of output tensors (only.name is used from this). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="from_session``1" class="method">
		<h4>
			<span title="tensorflow.lite.TClass">TClass</span> <strong>from_session&lt;TClass&gt;</strong>(<a href="../tensorflow/Session.htm">Session</a> sess, <span title="System.Collections.Generic.IEnumerable<IGraphNodeBase>">IEnumerable&lt;IGraphNodeBase&gt;</span> input_tensors, <span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span> output_tensors)
		</h4>
		<div class="content">Creates a TFLiteConverter class from a TensorFlow Session. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/Session.htm">Session</a></code> sess
						</dt>
						<dd>TensorFlow Session. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<IGraphNodeBase>">IEnumerable&lt;IGraphNodeBase&gt;</span></code> input_tensors
						</dt>
						<dd>List of input tensors. Type and shape are computed using
`foo.shape` and `foo.dtype`. 
						</dd>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<object>">IEnumerable&lt;object&gt;</span></code> output_tensors
						</dt>
						<dd>List of output tensors (only.name is used from this). 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="tensorflow.lite.TClass">TClass</span></code>
					</dt>
					<dd>TFLiteConverter class. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="allow_custom_ops" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>allow_custom_ops</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="change_concat_input_ranges" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>change_concat_input_ranges</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="default_ranges_stats" class="method">
		<h4>
			<span title="System.Nullable<ValueTuple<int, int>>">Nullable&lt;ValueTuple&lt;int, int&gt;&gt;</span> <strong>default_ranges_stats</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="drop_control_dependency" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>drop_control_dependency</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dump_graphviz_dir" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dump_graphviz_dir</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dump_graphviz_video" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>dump_graphviz_video</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="experimental_enable_mlir_converter" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>experimental_enable_mlir_converter</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="inference_input_type" class="method">
		<h4>
			<a href="../tensorflow/DType.htm">DType</a> <strong>inference_input_type</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="inference_output_type" class="method">
		<h4>
			<a href="../tensorflow/DType.htm">DType</a> <strong>inference_output_type</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="inference_type" class="method">
		<h4>
			<a href="../tensorflow/DType.htm">DType</a> <strong>inference_type</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="optimizations" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>optimizations</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="output_format" class="method">
		<h4>
			<span title="System.int">int</span> <strong>output_format</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="quantized_input_stats" class="method">
		<h4>
			<span title="System.Collections.Generic.IDictionary<string, ValueTuple<double, object>>">IDictionary&lt;string, ValueTuple&lt;double, object&gt;&gt;</span> <strong>quantized_input_stats</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="reorder_across_fake_quant" class="method">
		<h4>
			<span title="System.bool">bool</span> <strong>reorder_across_fake_quant</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="representative_dataset" class="method">
		<h4>
			<a href="../tensorflow.lite/RepresentativeDataset.htm">RepresentativeDataset</a> <strong>representative_dataset</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="target_spec" class="method">
		<h4>
			<a href="../tensorflow.lite/TargetSpec.htm">TargetSpec</a> <strong>target_spec</strong> get; set;
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>