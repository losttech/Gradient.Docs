<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>LinearOperatorAdjoint - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.linalg</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.linalg/ILinearOperator.htm">ILinearOperator</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorAdjoint.htm">ILinearOperatorAdjoint</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorBlockDiag.htm">ILinearOperatorBlockDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant.htm">ILinearOperatorCirculant</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant2D.htm">ILinearOperatorCirculant2D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant3D.htm">ILinearOperatorCirculant3D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorComposition.htm">ILinearOperatorComposition</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorDiag.htm">ILinearOperatorDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorFullMatrix.htm">ILinearOperatorFullMatrix</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorHouseholder.htm">ILinearOperatorHouseholder</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorIdentity.htm">ILinearOperatorIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorInversion.htm">ILinearOperatorInversion</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorKronecker.htm">ILinearOperatorKronecker</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorLowerTriangular.htm">ILinearOperatorLowerTriangular</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorLowRankUpdate.htm">ILinearOperatorLowRankUpdate</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorScaledIdentity.htm">ILinearOperatorScaledIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorToeplitz.htm">ILinearOperatorToeplitz</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorZeros.htm">ILinearOperatorZeros</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/linalg.htm">linalg</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperator.htm">LinearOperator</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorAdjoint.htm" class="current">LinearOperatorAdjoint</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorBlockDiag.htm">LinearOperatorBlockDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant.htm">LinearOperatorCirculant</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm">LinearOperatorCirculant2D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant3D.htm">LinearOperatorCirculant3D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorComposition.htm">LinearOperatorComposition</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorDiag.htm">LinearOperatorDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorFullMatrix.htm">LinearOperatorFullMatrix</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorHouseholder.htm">LinearOperatorHouseholder</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorIdentity.htm">LinearOperatorIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorInversion.htm">LinearOperatorInversion</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorKronecker.htm">LinearOperatorKronecker</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorLowerTriangular.htm">LinearOperatorLowerTriangular</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorLowRankUpdate.htm">LinearOperatorLowRankUpdate</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorScaledIdentity.htm">LinearOperatorScaledIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorToeplitz.htm">LinearOperatorToeplitz</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorZeros.htm">LinearOperatorZeros</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> LinearOperatorAdjoint</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.linalg</p>
		<p><strong>Parent</strong> <a href="../tensorflow.linalg/LinearOperator.htm">LinearOperator</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.linalg/ILinearOperatorAdjoint.htm">ILinearOperatorAdjoint</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">`LinearOperator` representing the adjoint of another operator. <p></p> This operator represents the adjoint of another operator.
#### Performance <p></p> The performance of `LinearOperatorAdjoint` depends on the underlying
operators performance. <p></p> #### Matrix property hints <p></p> This `LinearOperator` is initialized with boolean flags of the form `is_X`,
for `X = non_singular, self_adjoint, positive_definite, square`.
These have the following meaning: <p></p> * If `is_X == True`, callers should expect the operator to have the
property `X`.  This is a promise that should be fulfilled, but is *not* a
runtime assert.  For example, finite floating point precision may result
in these promises being violated.
* If `is_X == False`, callers should expect the operator to not have `X`.
* If `is_X == None` (the default), callers should have no expectation either
way. <div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Create a 2 x 2 linear operator.
            operator = LinearOperatorFullMatrix([[1 - i., 3.], [0., 1. + i]])
            operator_adjoint = LinearOperatorAdjoint(operator) <p></p> operator_adjoint.to_dense()
==> [[1. + i, 0.]
     [3., 1 - i]] <p></p> operator_adjoint.shape
==> [2, 2] <p></p> operator_adjoint.log_abs_determinant()
==> - log(2) <p></p> x =... Shape [2, 4] Tensor
operator_adjoint.matmul(x)
==> Shape [2, 4] Tensor, equal to operator.matmul(x, adjoint=True) </pre>
</div>
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#add_to_tensor">add_to_tensor</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#add_to_tensor_dyn">add_to_tensor_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#diag_part">diag_part</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#diag_part_dyn">diag_part_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#solve">solve</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#solve_dyn">solve_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#solvevec">solvevec</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#solvevec">solvevec</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#trace">trace</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#trace_dyn">trace_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#batch_shape">batch_shape</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#batch_shape_dyn">batch_shape_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#domain_dimension">domain_dimension</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#domain_dimension_dyn">domain_dimension_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#dtype">dtype</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#dtype_dyn">dtype_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#graph_parents">graph_parents</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#graph_parents_dyn">graph_parents_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_non_singular">is_non_singular</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_non_singular_dyn">is_non_singular_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_positive_definite">is_positive_definite</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_positive_definite_dyn">is_positive_definite_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_self_adjoint">is_self_adjoint</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_self_adjoint_dyn">is_self_adjoint_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_square">is_square</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#is_square_dyn">is_square_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#name">name</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#name_dyn">name_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#name_scope">name_scope</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#name_scope_dyn">name_scope_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#operator">operator</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#operator_dyn">operator_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#range_dimension">range_dimension</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#range_dimension_dyn">range_dimension_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#shape">shape</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#shape_dyn">shape_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#submodules">submodules</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#submodules_dyn">submodules_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#tensor_rank">tensor_rank</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#tensor_rank_dyn">tensor_rank_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#trainable_variables">trainable_variables</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#trainable_variables_dyn">trainable_variables_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#variables">variables</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorAdjoint.htm#variables_dyn">variables_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="add_to_tensor" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>add_to_tensor</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> x, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Add matrix represented by this operator to `mat`.  Equiv to `I + mat`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> x
						</dt>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name to give this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A `Tensor` with broadcast shape and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="add_to_tensor_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>add_to_tensor_dyn</strong>(<span title="System.object">object</span> x, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Add matrix represented by this operator to `mat`.  Equiv to `I + mat`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> x
						</dt>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>A name to give this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Tensor` with broadcast shape and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="diag_part" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>diag_part</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Efficiently get the [batch] diagonal part of this operator. <p></p> If this operator has shape `[B1,...,Bb, M, N]`, this returns a
`Tensor` `diagonal`, of shape `[B1,...,Bb, min(M, N)]`, where
`diagonal[b1,...,bb, i] = self.to_dense()[b1,...,bb, i, i]`. <p></p> ```
my_operator = LinearOperatorDiag([1., 2.]) <p></p> # Efficiently get the diagonal
my_operator.diag_part()
==> [1., 2.] <p></p> # Equivalent, but inefficient method
tf.linalg.diag_part(my_operator.to_dense())
==> [1., 2.]
``` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd><p></p> 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="diag_part_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>diag_part_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Efficiently get the [batch] diagonal part of this operator. <p></p> If this operator has shape `[B1,...,Bb, M, N]`, this returns a
`Tensor` `diagonal`, of shape `[B1,...,Bb, min(M, N)]`, where
`diagonal[b1,...,bb, i] = self.to_dense()[b1,...,bb, i, i]`. <p></p> ```
my_operator = LinearOperatorDiag([1., 2.]) <p></p> # Efficiently get the diagonal
my_operator.diag_part()
==> [1., 2.] <p></p> # Equivalent, but inefficient method
tf.linalg.diag_part(my_operator.to_dense())
==> [1., 2.]
``` 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd><p></p> 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="solve" class="method">
		<h4>
			<span title="System.object">object</span> <strong>solve</strong>(<a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a> rhs, <span title="System.bool">bool</span> adjoint, <span title="System.bool">bool</span> adjoint_arg, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Solve (exact or approx) `R` (batch) systems of equations: `A X = rhs`. <p></p> The returned `Tensor` will be close to an exact solution if `A` is well
conditioned. Otherwise closeness will vary. See class docstring for details. <p></p> Examples: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonClassContainer.htm">PythonClassContainer</a></code> rhs
						</dt>
						<dd>`Tensor` with same `dtype` as this operator and compatible shape.
`rhs` is treated like a [batch] matrix meaning for every set of leading
dimensions, the last two dimensions defines a matrix.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, solve the system involving the adjoint
of this `LinearOperator`:  `A^H X = rhs`. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint_arg
						</dt>
						<dd>Python `bool`.  If `True`, solve `A X = rhs^H` where `rhs^H`
is the hermitian transpose (transposition and complex conjugation). 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name scope to use for ops added by this method. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with shape `[...,N, R]` and same `dtype` as `rhs`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matrix A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...)
            operator.shape = [..., M, N] <p></p> # Solve R > 0 linear systems for every member of the batch.
RHS =... # shape [..., M, R] <p></p> X = operator.solve(RHS)
# X[..., :, r] is the solution to the r'th linear system
# sum_j A[..., :, j] X[..., j, r] = RHS[..., :, r] <p></p> operator.matmul(X)
==> RHS </pre>
</div>
		</div>
	</div>
	<div id="solve_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>solve_dyn</strong>(<span title="System.object">object</span> rhs, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> adjoint, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> adjoint_arg, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Solve (exact or approx) `R` (batch) systems of equations: `A X = rhs`. <p></p> The returned `Tensor` will be close to an exact solution if `A` is well
conditioned. Otherwise closeness will vary. See class docstring for details. <p></p> Examples: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> rhs
						</dt>
						<dd>`Tensor` with same `dtype` as this operator and compatible shape.
`rhs` is treated like a [batch] matrix meaning for every set of leading
dimensions, the last two dimensions defines a matrix.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, solve the system involving the adjoint
of this `LinearOperator`:  `A^H X = rhs`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> adjoint_arg
						</dt>
						<dd>Python `bool`.  If `True`, solve `A X = rhs^H` where `rhs^H`
is the hermitian transpose (transposition and complex conjugation). 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>A name scope to use for ops added by this method. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>`Tensor` with shape `[...,N, R]` and same `dtype` as `rhs`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matrix A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...)
            operator.shape = [..., M, N] <p></p> # Solve R > 0 linear systems for every member of the batch.
RHS =... # shape [..., M, R] <p></p> X = operator.solve(RHS)
# X[..., :, r] is the solution to the r'th linear system
# sum_j A[..., :, j] X[..., j, r] = RHS[..., :, r] <p></p> operator.matmul(X)
==> RHS </pre>
</div>
		</div>
	</div>
	<div id="solvevec" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>solvevec</strong>(<a href="../numpy/ndarray.htm">ndarray</a> rhs, <span title="System.bool">bool</span> adjoint, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Solve single equation with best effort: `A X = rhs`. <p></p> The returned `Tensor` will be close to an exact solution if `A` is well
conditioned. Otherwise closeness will vary. See class docstring for details. <p></p> Examples: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../numpy/ndarray.htm">ndarray</a></code> rhs
						</dt>
						<dd>`Tensor` with same `dtype` as this operator.
`rhs` is treated like a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.  See class docstring
for definition of compatibility regarding batch dimensions. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, solve the system involving the adjoint
of this `LinearOperator`:  `A^H X = rhs`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name scope to use for ops added by this method. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>`Tensor` with shape `[...,N]` and same `dtype` as `rhs`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matrix A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...)
            operator.shape = [..., M, N] <p></p> # Solve one linear system for every member of the batch.
RHS =... # shape [..., M] <p></p> X = operator.solvevec(RHS)
# X is the solution to the linear system
# sum_j A[..., :, j] X[..., j] = RHS[..., :] <p></p> operator.matvec(X)
==> RHS </pre>
</div>
		</div>
	</div>
	<div id="solvevec" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>solvevec</strong>(<span title="System.Collections.Generic.IEnumerable<PythonClassContainer>">IEnumerable&lt;PythonClassContainer&gt;</span> rhs, <span title="System.bool">bool</span> adjoint, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Solve single equation with best effort: `A X = rhs`. <p></p> The returned `Tensor` will be close to an exact solution if `A` is well
conditioned. Otherwise closeness will vary. See class docstring for details. <p></p> Examples: 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<PythonClassContainer>">IEnumerable&lt;PythonClassContainer&gt;</span></code> rhs
						</dt>
						<dd>`Tensor` with same `dtype` as this operator.
`rhs` is treated like a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.  See class docstring
for definition of compatibility regarding batch dimensions. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, solve the system involving the adjoint
of this `LinearOperator`:  `A^H X = rhs`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name scope to use for ops added by this method. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>`Tensor` with shape `[...,N]` and same `dtype` as `rhs`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matrix A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...)
            operator.shape = [..., M, N] <p></p> # Solve one linear system for every member of the batch.
RHS =... # shape [..., M] <p></p> X = operator.solvevec(RHS)
# X is the solution to the linear system
# sum_j A[..., :, j] X[..., j] = RHS[..., :] <p></p> operator.matvec(X)
==> RHS </pre>
</div>
		</div>
	</div>
	<div id="trace" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trace</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">Trace of the linear operator, equal to sum of `self.diag_part()`. <p></p> If the operator is square, this is also the sum of the eigenvalues. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>Shape `[B1,...,Bb]` `Tensor` of same `dtype` as `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="trace_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trace_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Trace of the linear operator, equal to sum of `self.diag_part()`. <p></p> If the operator is square, this is also the sum of the eigenvalues. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>Shape `[B1,...,Bb]` `Tensor` of same `dtype` as `self`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="batch_shape" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_shape</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="batch_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_shape_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="domain_dimension" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>domain_dimension</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="domain_dimension_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>domain_dimension_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="graph_parents" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>graph_parents</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="graph_parents_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>graph_parents_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_non_singular" class="method">
		<h4>
			<span title="System.Nullable<bool>">Nullable&lt;bool&gt;</span> <strong>is_non_singular</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_non_singular_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_non_singular_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_positive_definite" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_positive_definite</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_positive_definite_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_positive_definite_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_self_adjoint" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_self_adjoint</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_self_adjoint_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_self_adjoint_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_square" class="method">
		<h4>
			<span title="System.Nullable<bool>">Nullable&lt;bool&gt;</span> <strong>is_square</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_square_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_square_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_scope" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_scope_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="operator" class="method">
		<h4>
			<span title="System.object">object</span> <strong>operator</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="operator_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>operator_dyn</strong> get; 
		</h4>
		<div class="content">The operator before taking the adjoint. 

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="range_dimension" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>range_dimension</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="range_dimension_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>range_dimension_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="shape" class="method">
		<h4>
			<a href="../tensorflow/TensorShape.htm">TensorShape</a> <strong>shape</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>shape_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="submodules" class="method">
		<h4>
			<span title="System.ValueTuple<object>">ValueTuple&lt;object&gt;</span> <strong>submodules</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="submodules_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>submodules_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tensor_rank" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>tensor_rank</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tensor_rank_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>tensor_rank_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>