<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>LinearOperatorCirculant2D - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.linalg</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.linalg/ILinearOperator.htm">ILinearOperator</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorAdjoint.htm">ILinearOperatorAdjoint</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorBlockDiag.htm">ILinearOperatorBlockDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant.htm">ILinearOperatorCirculant</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant2D.htm">ILinearOperatorCirculant2D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorCirculant3D.htm">ILinearOperatorCirculant3D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorComposition.htm">ILinearOperatorComposition</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorDiag.htm">ILinearOperatorDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorFullMatrix.htm">ILinearOperatorFullMatrix</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorHouseholder.htm">ILinearOperatorHouseholder</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorIdentity.htm">ILinearOperatorIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorInversion.htm">ILinearOperatorInversion</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorKronecker.htm">ILinearOperatorKronecker</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorLowerTriangular.htm">ILinearOperatorLowerTriangular</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorLowRankUpdate.htm">ILinearOperatorLowRankUpdate</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorScaledIdentity.htm">ILinearOperatorScaledIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorToeplitz.htm">ILinearOperatorToeplitz</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/ILinearOperatorZeros.htm">ILinearOperatorZeros</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/linalg.htm">linalg</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperator.htm">LinearOperator</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorAdjoint.htm">LinearOperatorAdjoint</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorBlockDiag.htm">LinearOperatorBlockDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant.htm">LinearOperatorCirculant</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm" class="current">LinearOperatorCirculant2D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorCirculant3D.htm">LinearOperatorCirculant3D</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorComposition.htm">LinearOperatorComposition</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorDiag.htm">LinearOperatorDiag</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorFullMatrix.htm">LinearOperatorFullMatrix</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorHouseholder.htm">LinearOperatorHouseholder</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorIdentity.htm">LinearOperatorIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorInversion.htm">LinearOperatorInversion</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorKronecker.htm">LinearOperatorKronecker</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorLowerTriangular.htm">LinearOperatorLowerTriangular</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorLowRankUpdate.htm">LinearOperatorLowRankUpdate</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorScaledIdentity.htm">LinearOperatorScaledIdentity</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorToeplitz.htm">LinearOperatorToeplitz</a>
        </li>
				<li>
            <a href="../tensorflow.linalg/LinearOperatorZeros.htm">LinearOperatorZeros</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> LinearOperatorCirculant2D</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.linalg</p>
		<p><strong>Parent</strong> <a href="../tensorflow.python.ops.linalg.linear_operator_circulant/_BaseLinearOperatorCirculant.htm">_BaseLinearOperatorCirculant</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.linalg/ILinearOperatorCirculant2D.htm">ILinearOperatorCirculant2D</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">`LinearOperator` acting like a block circulant matrix. <p></p> This operator acts like a block circulant matrix `A` with
shape `[B1,...,Bb, N, N]` for some `b >= 0`.  The first `b` indices index a
batch member.  For every batch index `(i1,...,ib)`, `A[i1,...,ib, : :]` is
an `N x N` matrix.  This matrix `A` is not materialized, but for
purposes of broadcasting this shape will be relevant. <p></p> #### Description in terms of block circulant matrices <p></p> If `A` is block circulant, with block sizes `N0, N1` (`N0 * N1 = N`):
`A` has a block circulant structure, composed of `N0 x N0` blocks, with each
block an `N1 x N1` circulant matrix. <p></p> For example, with `W`, `X`, `Y`, `Z` each circulant, <p></p> ```
A = |W Z Y X|
|X W Z Y|
|Y X W Z|
|Z Y X W|
``` <p></p> Note that `A` itself will not in general be circulant. <p></p> #### Description in terms of the frequency spectrum <p></p> There is an equivalent description in terms of the [batch] spectrum `H` and
Fourier transforms.  Here we consider `A.shape = [N, N]` and ignore batch
dimensions. <p></p> If `H.shape = [N0, N1]`, (`N0 * N1 = N`):
Loosely speaking, matrix multiplication is equal to the action of a
Fourier multiplier:  `A u = IDFT2[ H DFT2[u] ]`.
Precisely speaking, given `[N, R]` matrix `u`, let `DFT2[u]` be the
`[N0, N1, R]` `Tensor` defined by re-shaping `u` to `[N0, N1, R]` and taking
a two dimensional DFT across the first two dimensions.  Let `IDFT2` be the
inverse of `DFT2`.  Matrix multiplication may be expressed columnwise: <p></p> ```(A u)_r = IDFT2[ H * (DFT2[u])_r ]``` <p></p> #### Operator properties deduced from the spectrum. <p></p> * This operator is positive definite if and only if `Real{H} > 0`. <p></p> A general property of Fourier transforms is the correspondence between
Hermitian functions and real valued transforms. <p></p> Suppose `H.shape = [B1,...,Bb, N0, N1]`, we say that `H` is a Hermitian
spectrum if, with `%` indicating modulus division, <p></p> ```
H[..., n0 % N0, n1 % N1] = ComplexConjugate[ H[..., (-n0) % N0, (-n1) % N1 ].
``` <p></p> * This operator corresponds to a real matrix if and only if `H` is Hermitian.
* This operator is self-adjoint if and only if `H` is real. <p></p> See e.g. "Discrete-Time Signal Processing", Oppenheim and Schafer. <p></p> ### Example of a self-adjoint positive definite operator
#### Example of defining in terms of a real convolution kernel,
#### Performance <p></p> Suppose `operator` is a `LinearOperatorCirculant` of shape `[N, N]`,
and `x.shape = [N, R]`.  Then <p></p> * `operator.matmul(x)` is `O(R*N*Log[N])`
* `operator.solve(x)` is `O(R*N*Log[N])`
* `operator.determinant()` involves a size `N` `reduce_prod`. <p></p> If instead `operator` and `x` have shape `[B1,...,Bb, N, N]` and
`[B1,...,Bb, N, R]`, every operation increases in complexity by `B1*...*Bb`. <p></p> #### Matrix property hints <p></p> This `LinearOperator` is initialized with boolean flags of the form `is_X`,
for `X = non_singular, self_adjoint, positive_definite, square`.
These have the following meaning
* If `is_X == True`, callers should expect the operator to have the
property `X`.  This is a promise that should be fulfilled, but is *not* a
runtime assert.  For example, finite floating point precision may result
in these promises being violated.
* If `is_X == False`, callers should expect the operator to not have `X`.
* If `is_X == None` (the default), callers should have no expectation either
way. <div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># spectrum is real ==> operator is self-adjoint
            # spectrum is positive ==> operator is positive definite
            spectrum = [[1., 2., 3.],
                        [4., 5., 6.],
                        [7., 8., 9.]] <p></p> operator = LinearOperatorCirculant2D(spectrum) <p></p> # IFFT[spectrum]
operator.convolution_kernel()
==> [[5.0+0.0j, -0.5-.3j, -0.5+.3j],
     [-1.5-.9j,        0,        0],
     [-1.5+.9j,        0,        0]] <p></p> operator.to_dense()
==> Complex self adjoint 9 x 9 matrix. </pre>
</div>
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#assert_hermitian_spectrum">assert_hermitian_spectrum</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#assert_hermitian_spectrum_dyn">assert_hermitian_spectrum_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_shape_tensor">block_shape_tensor</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_shape_tensor_dyn">block_shape_tensor_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#convolution_kernel">convolution_kernel</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#convolution_kernel_dyn">convolution_kernel_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#matvec">matvec</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#matvec">matvec</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#matvec">matvec</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#matvec_dyn">matvec_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#to_dense_dyn">to_dense_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#batch_shape">batch_shape</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#batch_shape_dyn">batch_shape_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_depth">block_depth</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_depth_dyn">block_depth_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_shape">block_shape</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#block_shape_dyn">block_shape_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#domain_dimension">domain_dimension</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#domain_dimension_dyn">domain_dimension_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#dtype">dtype</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#dtype_dyn">dtype_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#graph_parents">graph_parents</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#graph_parents_dyn">graph_parents_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_non_singular">is_non_singular</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_non_singular_dyn">is_non_singular_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_positive_definite">is_positive_definite</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_positive_definite_dyn">is_positive_definite_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_self_adjoint">is_self_adjoint</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_self_adjoint_dyn">is_self_adjoint_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_square">is_square</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#is_square_dyn">is_square_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#name">name</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#name_dyn">name_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#name_scope">name_scope</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#name_scope_dyn">name_scope_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#range_dimension">range_dimension</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#range_dimension_dyn">range_dimension_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#shape">shape</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#shape_dyn">shape_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#spectrum">spectrum</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#spectrum_dyn">spectrum_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#submodules">submodules</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#submodules_dyn">submodules_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#tensor_rank">tensor_rank</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#tensor_rank_dyn">tensor_rank_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#trainable_variables">trainable_variables</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#trainable_variables_dyn">trainable_variables_dyn</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#variables">variables</a></li>
				<li><a href="../tensorflow.linalg/LinearOperatorCirculant2D.htm#variables_dyn">variables_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="assert_hermitian_spectrum" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assert_hermitian_spectrum</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="assert_hermitian_spectrum_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>assert_hermitian_spectrum_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="block_shape_tensor" class="method">
		<h4>
			<span title="System.object">object</span> <strong>block_shape_tensor</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="block_shape_tensor_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>block_shape_tensor_dyn</strong>()
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="convolution_kernel" class="method">
		<h4>
			<span title="System.object">object</span> <strong>convolution_kernel</strong>(<span title="System.string">string</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="convolution_kernel_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>convolution_kernel_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="matvec" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>matvec</strong>(<span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span> x, <span title="System.bool">bool</span> adjoint, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Transform [batch] vector `x` with left multiplication:  `x --> Ax`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.ValueTuple<PythonClassContainer, PythonClassContainer>">ValueTuple&lt;PythonClassContainer, PythonClassContainer&gt;</span></code> x
						</dt>
						<dd>`Tensor` with compatible shape and same `dtype` as `self`.
`x` is treated as a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, left multiply by the adjoint: `A^H x`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A `Tensor` with shape `[..., M]` and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matric A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...) <p></p> X =... # shape [..., N], batch vector <p></p> Y = operator.matvec(X)
Y.shape
==> [..., M] <p></p> Y[..., :] = sum_j A[..., :, j] X[..., j] </pre>
</div>
		</div>
	</div>
	<div id="matvec" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>matvec</strong>(<a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a> x, <span title="System.bool">bool</span> adjoint, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Transform [batch] vector `x` with left multiplication:  `x --> Ax`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../tensorflow/IndexedSlices.htm">IndexedSlices</a></code> x
						</dt>
						<dd>`Tensor` with compatible shape and same `dtype` as `self`.
`x` is treated as a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, left multiply by the adjoint: `A^H x`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A `Tensor` with shape `[..., M]` and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matric A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...) <p></p> X =... # shape [..., N], batch vector <p></p> Y = operator.matvec(X)
Y.shape
==> [..., M] <p></p> Y[..., :] = sum_j A[..., :, j] X[..., j] </pre>
</div>
		</div>
	</div>
	<div id="matvec" class="method">
		<h4>
			<a href="../tensorflow/Tensor.htm">Tensor</a> <strong>matvec</strong>(<a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a> x, <span title="System.bool">bool</span> adjoint, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Transform [batch] vector `x` with left multiplication:  `x --> Ax`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient.ManualWrappers/IGraphNodeBase.htm">IGraphNodeBase</a></code> x
						</dt>
						<dd>`Tensor` with compatible shape and same `dtype` as `self`.
`x` is treated as a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><span title="System.bool">bool</span></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, left multiply by the adjoint: `A^H x`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><a href="../tensorflow/Tensor.htm">Tensor</a></code>
					</dt>
					<dd>A `Tensor` with shape `[..., M]` and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matric A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...) <p></p> X =... # shape [..., N], batch vector <p></p> Y = operator.matvec(X)
Y.shape
==> [..., M] <p></p> Y[..., :] = sum_j A[..., :, j] X[..., j] </pre>
</div>
		</div>
	</div>
	<div id="matvec_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>matvec_dyn</strong>(<span title="System.object">object</span> x, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> adjoint, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Transform [batch] vector `x` with left multiplication:  `x --> Ax`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> x
						</dt>
						<dd>`Tensor` with compatible shape and same `dtype` as `self`.
`x` is treated as a [batch] vector meaning for every set of leading
dimensions, the last dimension defines a vector.
See class docstring for definition of compatibility. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> adjoint
						</dt>
						<dd>Python `bool`.  If `True`, left multiply by the adjoint: `A^H x`. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> name
						</dt>
						<dd>A name for this `Op`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A `Tensor` with shape `[..., M]` and same `dtype` as `self`. 
					</dd>
				</dl>
			</div>
<div class="example">
  <a href="javascript:void(0)">Show Example</a>
  <pre># Make an operator acting like batch matric A.  Assume A.shape = [..., M, N]
            operator = LinearOperator(...) <p></p> X =... # shape [..., N], batch vector <p></p> Y = operator.matvec(X)
Y.shape
==> [..., M] <p></p> Y[..., :] = sum_j A[..., :, j] X[..., j] </pre>
</div>
		</div>
	</div>
	<div id="to_dense_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>to_dense_dyn</strong>(<a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">Return a dense (batch) matrix representing this operator. 




		</div>
	</div>
	
	
	<h3 class="section">Public properties</h3>

	<div id="batch_shape" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_shape</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="batch_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>batch_shape_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="block_depth" class="method">
		<h4>
			<span title="System.int">int</span> <strong>block_depth</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="block_depth_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>block_depth_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="block_shape" class="method">
		<h4>
			<span title="System.object">object</span> <strong>block_shape</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="block_shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>block_shape_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="domain_dimension" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>domain_dimension</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="domain_dimension_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>domain_dimension_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="dtype_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>dtype_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="graph_parents" class="method">
		<h4>
			<span title="System.Collections.Generic.IList<object>">IList&lt;object&gt;</span> <strong>graph_parents</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="graph_parents_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>graph_parents_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_non_singular" class="method">
		<h4>
			<span title="System.Nullable<bool>">Nullable&lt;bool&gt;</span> <strong>is_non_singular</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_non_singular_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_non_singular_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_positive_definite" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_positive_definite</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_positive_definite_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_positive_definite_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_self_adjoint" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_self_adjoint</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_self_adjoint_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_self_adjoint_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_square" class="method">
		<h4>
			<span title="System.Nullable<bool>">Nullable&lt;bool&gt;</span> <strong>is_square</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="is_square_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>is_square_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_scope" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="name_scope_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>name_scope_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="range_dimension" class="method">
		<h4>
			<a href="../tensorflow/Dimension.htm">Dimension</a> <strong>range_dimension</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="range_dimension_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>range_dimension_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="shape" class="method">
		<h4>
			<a href="../tensorflow/TensorShape.htm">TensorShape</a> <strong>shape</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="shape_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>shape_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="spectrum" class="method">
		<h4>
			<span title="System.object">object</span> <strong>spectrum</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="spectrum_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>spectrum_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="submodules" class="method">
		<h4>
			<span title="System.ValueTuple<object>">ValueTuple&lt;object&gt;</span> <strong>submodules</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="submodules_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>submodules_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tensor_rank" class="method">
		<h4>
			<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> <strong>tensor_rank</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="tensor_rank_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>tensor_rank_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="trainable_variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>trainable_variables_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="variables" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="variables_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>variables_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>