<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
	<!--[if lt IE 9]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
    <title>Experiment - LostTech.TensorFlow Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body>
  	<header><h1>LostTech.TensorFlow : API Documentation</h1>
	</header>

    <nav id="namespaces">
      <iframe src="../namespaces.htm"></iframe>
    </nav><nav id="types">
  <h2 class="fixed">Types in tensorflow.contrib.learn</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../tensorflow.contrib.learn/BaseEstimator.htm">BaseEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ClusterConfig.htm">ClusterConfig</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNClassifier.htm">DNNClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNEstimator.htm">DNNEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNLinearCombinedClassifier.htm">DNNLinearCombinedClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNLinearCombinedEstimator.htm">DNNLinearCombinedEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNLinearCombinedRegressor.htm">DNNLinearCombinedRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DNNRegressor.htm">DNNRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/DynamicRnnEstimator.htm">DynamicRnnEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Environment.htm">Environment</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Estimator.htm">Estimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Evaluable.htm">Evaluable</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Experiment.htm" class="current">Experiment</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ExportStrategy.htm">ExportStrategy</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/GraphRewriteSpec.htm">GraphRewriteSpec</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Head.htm">Head</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IBaseEstimator.htm">IBaseEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IClusterConfig.htm">IClusterConfig</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNClassifier.htm">IDNNClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNEstimator.htm">IDNNEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNLinearCombinedClassifier.htm">IDNNLinearCombinedClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNLinearCombinedEstimator.htm">IDNNLinearCombinedEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNLinearCombinedRegressor.htm">IDNNLinearCombinedRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDNNRegressor.htm">IDNNRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IDynamicRnnEstimator.htm">IDynamicRnnEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IEnvironment.htm">IEnvironment</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IEstimator.htm">IEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IEvaluable.htm">IEvaluable</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IExperiment.htm">IExperiment</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IExportStrategy.htm">IExportStrategy</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IGraphRewriteSpec.htm">IGraphRewriteSpec</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IHead.htm">IHead</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IInputFnOps.htm">IInputFnOps</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IKMeansClustering.htm">IKMeansClustering</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ILinearClassifier.htm">ILinearClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ILinearEstimator.htm">ILinearEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ILinearRegressor.htm">ILinearRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IMetricKey.htm">IMetricKey</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IMetricSpec.htm">IMetricSpec</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IModeKeys.htm">IModeKeys</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IModelFnOps.htm">IModelFnOps</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/INanLossDuringTrainingError.htm">INanLossDuringTrainingError</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/INotFittedError.htm">INotFittedError</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/InputFnOps.htm">InputFnOps</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IPredictionKey.htm">IPredictionKey</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IPredictionType.htm">IPredictionType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IProblemType.htm">IProblemType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/IRunConfig.htm">IRunConfig</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ISKCompat.htm">ISKCompat</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ISVM.htm">ISVM</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ITaskType.htm">ITaskType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ITrainable.htm">ITrainable</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/KMeansClustering.htm">KMeansClustering</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/learn.htm">learn</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/LinearClassifier.htm">LinearClassifier</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/LinearEstimator.htm">LinearEstimator</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/LinearRegressor.htm">LinearRegressor</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/MetricKey.htm">MetricKey</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/MetricSpec.htm">MetricSpec</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ModeKeys.htm">ModeKeys</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ModelFnOps.htm">ModelFnOps</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/NanLossDuringTrainingError.htm">NanLossDuringTrainingError</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/NotFittedError.htm">NotFittedError</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/PredictionKey.htm">PredictionKey</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/PredictionType.htm">PredictionType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/ProblemType.htm">ProblemType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/RunConfig.htm">RunConfig</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/SKCompat.htm">SKCompat</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/SVM.htm">SVM</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/TaskType.htm">TaskType</a>
        </li>
				<li>
            <a href="../tensorflow.contrib.learn/Trainable.htm">Trainable</a>
        </li>
		</ul>
	</div>
</nav>
	<article>
    <header>
		<p class="class"><strong>Type</strong> Experiment</p>
	</header>
	<section>
		<header>
		<p><strong>Namespace</strong> tensorflow.contrib.learn</p>
		<p><strong>Parent</strong> <a href="../LostTech.Gradient/PythonObjectContainer.htm">PythonObjectContainer</a></p>
		<p><strong>Interfaces</strong> <a href="../tensorflow.contrib.learn/IExperiment.htm">IExperiment</a></p>
		</header>
    <div class="sub-header">
			<div id="summary">Experiment is a class containing all information needed to train a model. <p></p> THIS CLASS IS DEPRECATED. See
[contrib/learn/README.md](https://www.tensorflow.org/code/tensorflow/contrib/learn/README.md)
for general migration instructions. <p></p> After an experiment is created (by passing an Estimator and inputs for
training and evaluation), an Experiment instance knows how to invoke training
and eval loops in a sensible fashion for distributed training. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_eval">continuous_eval</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_eval_dyn">continuous_eval_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_eval_on_train_data">continuous_eval_on_train_data</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_eval_on_train_data_dyn">continuous_eval_on_train_data_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_train_and_eval">continuous_train_and_eval</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_train_and_eval">continuous_train_and_eval</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#continuous_train_and_eval_dyn">continuous_train_and_eval_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#evaluate">evaluate</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#extend_train_hooks">extend_train_hooks</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#extend_train_hooks_dyn">extend_train_hooks_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#local_run_dyn">local_run_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#NewDyn">NewDyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#reset_export_strategies">reset_export_strategies</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#reset_export_strategies_dyn">reset_export_strategies_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#run_std_server_dyn">run_std_server_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#test_dyn">test_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#train">train</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#train_and_evaluate_dyn">train_and_evaluate_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#train_dyn">train_dyn</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#estimator">estimator</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#estimator_dyn">estimator_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#eval_metrics">eval_metrics</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#eval_metrics_dyn">eval_metrics_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#eval_steps">eval_steps</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#eval_steps_dyn">eval_steps_dyn</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#PythonObject">PythonObject</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#train_steps">train_steps</a></li>
				<li><a href="../tensorflow.contrib.learn/Experiment.htm#train_steps_dyn">train_steps_dyn</a></li>
			</ul>
		
	</div>
	
	<h3 class="section">Public instance methods</h3>

	<div id="continuous_eval" class="method">
		<h4>
			<span title="System.void">void</span> <strong>continuous_eval</strong>(<span title="System.object">object</span> delay_secs, <span title="System.object">object</span> throttle_delay_secs, <span title="System.bool">bool</span> evaluate_checkpoint_only_once, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> continuous_eval_predicate_fn, <span title="System.string">string</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="continuous_eval_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>continuous_eval_dyn</strong>(<span title="System.object">object</span> delay_secs, <span title="System.object">object</span> throttle_delay_secs, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> evaluate_checkpoint_only_once, <span title="System.object">object</span> continuous_eval_predicate_fn, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="continuous_eval_on_train_data" class="method">
		<h4>
			<span title="System.void">void</span> <strong>continuous_eval_on_train_data</strong>(<span title="System.object">object</span> delay_secs, <span title="System.object">object</span> throttle_delay_secs, <a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> continuous_eval_predicate_fn, <span title="System.string">string</span> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="continuous_eval_on_train_data_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>continuous_eval_on_train_data_dyn</strong>(<span title="System.object">object</span> delay_secs, <span title="System.object">object</span> throttle_delay_secs, <span title="System.object">object</span> continuous_eval_predicate_fn, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> name)
		</h4>
		<div class="content">




		</div>
	</div>
	<div id="continuous_train_and_eval" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>continuous_train_and_eval</strong>(<span title="System.string">string</span> continuous_eval_predicate_fn)
		</h4>
		<div class="content">Interleaves training and evaluation. (experimental) <p></p> Warning: THIS FUNCTION IS EXPERIMENTAL. It may change or be removed at any time, and without warning. <p></p> The frequency of evaluation is controlled by the `train_steps_per_iteration`
(via constructor). The model will be first trained for
`train_steps_per_iteration`, and then be evaluated in turns. <p></p> This method is intended for single machine usage. <p></p> This differs from `train_and_evaluate` as follows: <p></p> 1. The procedure will have train and evaluation in turns. The model
will be trained for a number of steps (usually smaller than `train_steps`
if provided) and then be evaluated.  `train_and_evaluate` will train the
model for `train_steps` (no small training iterations). <p></p> 2. Due to the different approach this schedule takes, it leads to two
differences in resource control. First, the resources (e.g., memory) used
by training will be released before evaluation (`train_and_evaluate` takes
double resources). Second, more checkpoints will be saved as a checkpoint
is generated at the end of each training iteration. <p></p> 3. As the estimator.train starts from scratch (new graph, new states for
input, etc) at each iteration, it is recommended to have the
`train_steps_per_iteration` larger. It is also recommended to shuffle your
input. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.string">string</span></code> continuous_eval_predicate_fn
						</dt>
						<dd>A predicate function determining whether to
continue eval after each iteration. A `predicate_fn` has one of the
following signatures:
* (eval_results) -> boolean
* (eval_results, checkpoint_path) -> boolean
Where `eval_results` is the dictionary of metric evaluations and
checkpoint_path is the path to the checkpoint containing the parameters
on which that evaluation was based.
At the beginning of evaluation, the passed `eval_results` and
`checkpoint_path` will be None so it's expected that the predicate
function handles that gracefully.
When `predicate_fn` is not specified, continuous eval will run in an
infinite loop (if `train_steps` is None). or exit once global step
reaches `train_steps`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>A tuple of the result of the `evaluate` call to the `Estimator` and the
export results using the specified `ExportStrategy`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="continuous_train_and_eval" class="method">
		<h4>
			<span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span> <strong>continuous_train_and_eval</strong>(<a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a> continuous_eval_predicate_fn)
		</h4>
		<div class="content">Interleaves training and evaluation. (experimental) <p></p> Warning: THIS FUNCTION IS EXPERIMENTAL. It may change or be removed at any time, and without warning. <p></p> The frequency of evaluation is controlled by the `train_steps_per_iteration`
(via constructor). The model will be first trained for
`train_steps_per_iteration`, and then be evaluated in turns. <p></p> This method is intended for single machine usage. <p></p> This differs from `train_and_evaluate` as follows: <p></p> 1. The procedure will have train and evaluation in turns. The model
will be trained for a number of steps (usually smaller than `train_steps`
if provided) and then be evaluated.  `train_and_evaluate` will train the
model for `train_steps` (no small training iterations). <p></p> 2. Due to the different approach this schedule takes, it leads to two
differences in resource control. First, the resources (e.g., memory) used
by training will be released before evaluation (`train_and_evaluate` takes
double resources). Second, more checkpoints will be saved as a checkpoint
is generated at the end of each training iteration. <p></p> 3. As the estimator.train starts from scratch (new graph, new states for
input, etc) at each iteration, it is recommended to have the
`train_steps_per_iteration` larger. It is also recommended to shuffle your
input. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><a href="../LostTech.Gradient/PythonFunctionContainer.htm">PythonFunctionContainer</a></code> continuous_eval_predicate_fn
						</dt>
						<dd>A predicate function determining whether to
continue eval after each iteration. A `predicate_fn` has one of the
following signatures:
* (eval_results) -> boolean
* (eval_results, checkpoint_path) -> boolean
Where `eval_results` is the dictionary of metric evaluations and
checkpoint_path is the path to the checkpoint containing the parameters
on which that evaluation was based.
At the beginning of evaluation, the passed `eval_results` and
`checkpoint_path` will be None so it's expected that the predicate
function handles that gracefully.
When `predicate_fn` is not specified, continuous eval will run in an
infinite loop (if `train_steps` is None). or exit once global step
reaches `train_steps`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.ValueTuple<object, object>">ValueTuple&lt;object, object&gt;</span></code>
					</dt>
					<dd>A tuple of the result of the `evaluate` call to the `Estimator` and the
export results using the specified `ExportStrategy`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="continuous_train_and_eval_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>continuous_train_and_eval_dyn</strong>(<span title="System.object">object</span> continuous_eval_predicate_fn)
		</h4>
		<div class="content">Interleaves training and evaluation. (experimental) <p></p> Warning: THIS FUNCTION IS EXPERIMENTAL. It may change or be removed at any time, and without warning. <p></p> The frequency of evaluation is controlled by the `train_steps_per_iteration`
(via constructor). The model will be first trained for
`train_steps_per_iteration`, and then be evaluated in turns. <p></p> This method is intended for single machine usage. <p></p> This differs from `train_and_evaluate` as follows: <p></p> 1. The procedure will have train and evaluation in turns. The model
will be trained for a number of steps (usually smaller than `train_steps`
if provided) and then be evaluated.  `train_and_evaluate` will train the
model for `train_steps` (no small training iterations). <p></p> 2. Due to the different approach this schedule takes, it leads to two
differences in resource control. First, the resources (e.g., memory) used
by training will be released before evaluation (`train_and_evaluate` takes
double resources). Second, more checkpoints will be saved as a checkpoint
is generated at the end of each training iteration. <p></p> 3. As the estimator.train starts from scratch (new graph, new states for
input, etc) at each iteration, it is recommended to have the
`train_steps_per_iteration` larger. It is also recommended to shuffle your
input. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> continuous_eval_predicate_fn
						</dt>
						<dd>A predicate function determining whether to
continue eval after each iteration. A `predicate_fn` has one of the
following signatures:
* (eval_results) -> boolean
* (eval_results, checkpoint_path) -> boolean
Where `eval_results` is the dictionary of metric evaluations and
checkpoint_path is the path to the checkpoint containing the parameters
on which that evaluation was based.
At the beginning of evaluation, the passed `eval_results` and
`checkpoint_path` will be None so it's expected that the predicate
function handles that gracefully.
When `predicate_fn` is not specified, continuous eval will run in an
infinite loop (if `train_steps` is None). or exit once global step
reaches `train_steps`. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>A tuple of the result of the `evaluate` call to the `Estimator` and the
export results using the specified `ExportStrategy`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="evaluate" class="method">
		<h4>
			<span title="System.object">object</span> <strong>evaluate</strong>(<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> delay_secs, <span title="System.string">string</span> name)
		</h4>
		<div class="content">Evaluate on the evaluation data. <p></p> Runs evaluation on the evaluation data and returns the result. Runs for
`self._eval_steps` steps, or if it's `None`, then run until input is
exhausted or another exception is raised. Start the evaluation after
`delay_secs` seconds, or if it's `None`, defaults to using
`self._eval_delay_secs` seconds. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> delay_secs
						</dt>
						<dd>Start evaluating after this many seconds. If `None`, defaults
to using `self._eval_delays_secs`. 
						</dd>
						<dt>
							<code><span title="System.string">string</span></code> name
						</dt>
						<dd>Gives the name to the evauation for the case multiple evaluation is
run for the same experiment. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The result of the `evaluate` call to the `Estimator`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="extend_train_hooks" class="method">
		<h4>
			<span title="System.void">void</span> <strong>extend_train_hooks</strong>(<span title="System.Collections.Generic.IEnumerable<SessionRunHook>">IEnumerable&lt;SessionRunHook&gt;</span> additional_hooks)
		</h4>
		<div class="content">Extends the hooks for training. 




		</div>
	</div>
	<div id="extend_train_hooks_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>extend_train_hooks_dyn</strong>(<span title="System.object">object</span> additional_hooks)
		</h4>
		<div class="content">Extends the hooks for training. 




		</div>
	</div>
	<div id="local_run_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>local_run_dyn</strong>()
		</h4>
		<div class="content">DEPRECATED FUNCTION <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2016-10-23.
Instructions for updating:
local_run will be renamed to train_and_evaluate and the new default behavior will be to run evaluation every time there is a new checkpoint. 




		</div>
	</div>
	<div id="reset_export_strategies" class="method">
		<h4>
			<span title="System.object">object</span> <strong>reset_export_strategies</strong>(<span title="System.Collections.Generic.IEnumerable<ExportStrategy>">IEnumerable&lt;ExportStrategy&gt;</span> new_export_strategies)
		</h4>
		<div class="content">Resets the export strategies with the `new_export_strategies`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Collections.Generic.IEnumerable<ExportStrategy>">IEnumerable&lt;ExportStrategy&gt;</span></code> new_export_strategies
						</dt>
						<dd>A new list of `ExportStrategy`s, or a single one,
or None. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The old export strategies. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="reset_export_strategies_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>reset_export_strategies_dyn</strong>(<span title="System.object">object</span> new_export_strategies)
		</h4>
		<div class="content">Resets the export strategies with the `new_export_strategies`. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> new_export_strategies
						</dt>
						<dd>A new list of `ExportStrategy`s, or a single one,
or None. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The old export strategies. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="run_std_server_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>run_std_server_dyn</strong>()
		</h4>
		<div class="content">Starts a TensorFlow server and joins the serving thread. <p></p> Typically used for parameter servers. 




		</div>
	</div>
	<div id="test_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>test_dyn</strong>()
		</h4>
		<div class="content">Tests training, evaluating and exporting the estimator for a single step. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The result of the `evaluate` call to the `Estimator`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="train" class="method">
		<h4>
			<span title="System.object">object</span> <strong>train</strong>(<span title="System.Nullable<int>">Nullable&lt;int&gt;</span> delay_secs)
		</h4>
		<div class="content">Fit the estimator using the training data. <p></p> Train the estimator for `self._train_steps` steps, after waiting for
`delay_secs` seconds. If `self._train_steps` is `None`, train forever. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.Nullable<int>">Nullable&lt;int&gt;</span></code> delay_secs
						</dt>
						<dd>Start training after this many seconds. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The trained estimator. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="train_and_evaluate_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>train_and_evaluate_dyn</strong>()
		</h4>
		<div class="content">Interleaves training and evaluation. <p></p> The frequency of evaluation is controlled by the constructor arg
`min_eval_frequency`. When this parameter is 0, evaluation happens
only after training has completed. Note that evaluation cannot happen
more frequently than checkpoints are taken. If no new snapshots are
available when evaluation is supposed to occur, then evaluation doesn't
happen for another `min_eval_frequency` steps (assuming a checkpoint is
available at that point). Thus, settings `min_eval_frequency` to 1 means
that the model will be evaluated everytime there is a new checkpoint. <p></p> This is particular useful for a "Master" task in the cloud, whose
responsibility it is to take checkpoints, evaluate those checkpoints,
and write out summaries. Participating in training as the supervisor
allows such a task to accomplish the first and last items, while
performing evaluation allows for the second. 



			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The result of the `evaluate` call to the `Estimator` as well as the
export results using the specified `ExportStrategy`. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	<div id="train_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>train_dyn</strong>(<span title="System.object">object</span> delay_secs)
		</h4>
		<div class="content">Fit the estimator using the training data. <p></p> Train the estimator for `self._train_steps` steps, after waiting for
`delay_secs` seconds. If `self._train_steps` is `None`, train forever. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> delay_secs
						</dt>
						<dd>Start training after this many seconds. 
						</dd>
				</dl>
			</div>

			<div class="return">

				<h5>Returns</h5>
				<dl>
					<dt>
						<code><span title="System.object">object</span></code>
					</dt>
					<dd>The trained estimator. 
					</dd>
				</dl>
			</div>

		</div>
	</div>
	
	<h3 class="section">Public static methods</h3>

	<div id="NewDyn" class="method">
		<h4>
			<a href="../tensorflow.contrib.learn/Experiment.htm">Experiment</a> <strong>NewDyn</strong>(<span title="System.object">object</span> estimator, <span title="System.object">object</span> train_input_fn, <span title="System.object">object</span> eval_input_fn, <span title="System.object">object</span> eval_metrics, <span title="System.object">object</span> train_steps, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> eval_steps, <span title="System.object">object</span> train_monitors, <span title="System.object">object</span> eval_hooks, <span title="System.object">object</span> local_eval_frequency, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> eval_delay_secs, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> continuous_eval_throttle_secs, <span title="System.object">object</span> min_eval_frequency, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> delay_workers_by_global_step, <span title="System.object">object</span> export_strategies, <span title="System.object">object</span> train_steps_per_iteration, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> checkpoint_and_export, <span title="System.object">object</span> saving_listeners, <a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a> check_interval_secs)
		</h4>
		<div class="content">Constructor for `Experiment`. (deprecated) <p></p> Warning: THIS FUNCTION IS DEPRECATED. It will be removed in a future version.
Instructions for updating:
Please switch to tf.estimator.train_and_evaluate. You will also have to convert to a tf.estimator.Estimator. <p></p> Creates an Experiment instance. None of the functions passed to this
constructor are executed at construction time. They are stored and used
when a method is executed which requires it. 


			<div class="parameters">
				<h5>Parameters</h5>
				<dl>
						<dt>
							<code><span title="System.object">object</span></code> estimator
						</dt>
						<dd>Object implementing Estimator interface, which could be a
combination of <a href="..\..\..\tf\contrib\learn\Trainable.md"><code>tf.contrib.learn.Trainable</code></a> and
<a href="..\..\..\tf\contrib\learn\Evaluable.md"><code>tf.contrib.learn.Evaluable</code></a> (deprecated), or
<a href="..\..\..\tf\estimator\Estimator.md"><code>tf.estimator.Estimator</code></a>. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> train_input_fn
						</dt>
						<dd>function, returns features and labels for training. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> eval_input_fn
						</dt>
						<dd>function, returns features and labels for evaluation. If
`eval_steps` is `None`, this should be configured only to produce for a
finite number of batches (generally, 1 epoch over the evaluation data). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> eval_metrics
						</dt>
						<dd>`dict` of string, metric function. If `None`, default set
is used. This should be `None` if the `estimator` is
<a href="..\..\..\tf\estimator\Estimator.md"><code>tf.estimator.Estimator</code></a>. If metrics are provided they will be
*appended* to the default set. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> train_steps
						</dt>
						<dd>Perform this many steps of training. `None`, the default,
means train forever. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> eval_steps
						</dt>
						<dd>`evaluate` runs until input is exhausted (or another exception
is raised), or for `eval_steps` steps, if specified. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> train_monitors
						</dt>
						<dd>A list of monitors to pass to the `Estimator`'s `fit`
function. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> eval_hooks
						</dt>
						<dd>A list of `SessionRunHook` hooks to pass to the
`Estimator`'s `evaluate` function. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> local_eval_frequency
						</dt>
						<dd>(applies only to local_run) Frequency of running
eval in steps. If `None`, runs evaluation only at the end of training. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> eval_delay_secs
						</dt>
						<dd>Start evaluating after waiting for this many seconds. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> continuous_eval_throttle_secs
						</dt>
						<dd>Do not re-evaluate unless the last
evaluation was started at least this many seconds ago for
continuous_eval(). 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> min_eval_frequency
						</dt>
						<dd>(applies only to train_and_evaluate). the minimum
number of steps between evaluations. Of course, evaluation does not
occur if no new snapshot is available, hence, this is the minimum.
If 0, the evaluation will only happen after training.
If None, defaults to 1. To avoid checking for new checkpoints too
frequent, the interval is further limited to be at least
check_interval_secs between checks. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> delay_workers_by_global_step
						</dt>
						<dd>if `True` delays training workers
based on global step instead of time. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> export_strategies
						</dt>
						<dd>Iterable of `ExportStrategy`s, or a single one, or
`None`. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> train_steps_per_iteration
						</dt>
						<dd>(applies only to continuous_train_and_eval).
Perform this many (integer) number of train steps for each
training-evaluation iteration. With a small value, the model will be
evaluated more frequently with more checkpoints saved. If `None`, will
use a default value (which is smaller than `train_steps` if provided). 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> checkpoint_and_export
						</dt>
						<dd>(applies only to train_and_evaluate). If `True`,
performs intermediate model checkpoints and exports during the training
process, rather than only once model training is complete. This
parameter is experimental and may be changed or removed in the future.
Setting this parameter leads to the following: the value of
`min_eval_frequency` will be ignored, and the number of steps between
evaluations and exports will instead be determined by the Estimator
configuration parameters `save_checkpoints_secs` and
`save_checkpoints_steps`. Also, this parameter leads to the creation of
a default `CheckpointSaverHook` instead of a `ValidationMonitor`, so the
provided `train_monitors` will need to be adjusted accordingly. 
						</dd>
						<dt>
							<code><span title="System.object">object</span></code> saving_listeners
						</dt>
						<dd>list of `CheckpointSaverListener` objects. Used by
tf.estimator.Estimator for callbacks that run immediately before or
after checkpoint savings. 
						</dd>
						<dt>
							<code><a href="../LostTech.Gradient/ImplicitContainer`1.htm">ImplicitContainer&lt;T&gt;</a></code> check_interval_secs
						</dt>
						<dd>Minimum time between subsequent checks for a new checkpoint. This
mostly applies if both min_eval_frequency and the time spent per
training step is low. 
						</dd>
				</dl>
			</div>


		</div>
	</div>
	
	<h3 class="section">Public properties</h3>

	<div id="estimator" class="method">
		<h4>
			<span title="System.object">object</span> <strong>estimator</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="estimator_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>estimator_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="eval_metrics" class="method">
		<h4>
			<span title="System.string">string</span> <strong>eval_metrics</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="eval_metrics_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>eval_metrics_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="eval_steps" class="method">
		<h4>
			<span title="System.object">object</span> <strong>eval_steps</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="eval_steps_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>eval_steps_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="PythonObject" class="method">
		<h4>
			<span title="System.object">object</span> <strong>PythonObject</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="train_steps" class="method">
		<h4>
			<span title="System.object">object</span> <strong>train_steps</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	<div id="train_steps_dyn" class="method">
		<h4>
			<span title="System.object">object</span> <strong>train_steps_dyn</strong> get; 
		</h4>
		<div class="content">

		</div>
	</div>
	</section>
	</article><footer>
	<span id="version">Built from v1.15.0.0 of LostTech.TensorFlow</span>
	<span id="docu-link">
		Generated by <a href="http://docu.jagregory.com">docu</a>
	</span>
</footer>
  </body>
</html>